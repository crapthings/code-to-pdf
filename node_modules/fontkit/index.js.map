{"version":3,"file":null,"sources":["src/base.js","src/decorators.js","src/tables/cmap.js","src/tables/head.js","src/tables/hhea.js","src/tables/hmtx.js","src/tables/maxp.js","src/encodings.js","src/tables/name.js","src/tables/OS2.js","src/tables/post.js","src/tables/cvt.js","src/tables/fpgm.js","src/tables/loca.js","src/tables/prep.js","src/tables/glyf.js","src/cff/CFFIndex.js","src/cff/CFFOperand.js","src/cff/CFFDict.js","src/cff/CFFPointer.js","src/cff/CFFPrivateDict.js","src/cff/CFFStandardStrings.js","src/cff/CFFEncodings.js","src/cff/CFFCharsets.js","src/cff/CFFTop.js","src/cff/CFFFont.js","src/tables/VORG.js","src/tables/EBDT.js","src/tables/EBLC.js","src/tables/sbix.js","src/tables/COLR.js","src/tables/CPAL.js","src/tables/opentype.js","src/tables/BASE.js","src/tables/GDEF.js","src/tables/GPOS.js","src/tables/GSUB.js","src/tables/JSTF.js","src/tables/DSIG.js","src/tables/gasp.js","src/tables/hdmx.js","src/tables/kern.js","src/tables/LTSH.js","src/tables/PCLT.js","src/tables/VDMX.js","src/tables/vhea.js","src/tables/vmtx.js","src/tables/avar.js","src/tables/aat.js","src/tables/bsln.js","src/tables/feat.js","src/tables/fvar.js","src/tables/gvar.js","src/tables/just.js","src/tables/morx.js","src/tables/opbd.js","src/tables/index.js","src/tables/directory.js","src/utils.js","src/CmapProcessor.js","src/layout/KernProcessor.js","src/layout/UnicodeLayoutEngine.js","src/glyph/BBox.js","src/layout/GlyphRun.js","src/layout/GlyphPosition.js","src/layout/Script.js","src/aat/AATFeatureMap.js","src/aat/AATLookupTable.js","src/aat/AATStateMachine.js","src/aat/AATMorxProcessor.js","src/aat/AATLayoutEngine.js","src/opentype/ShapingPlan.js","src/opentype/shapers/DefaultShaper.js","src/opentype/shapers/ArabicShaper.js","src/opentype/GlyphIterator.js","src/opentype/OTProcessor.js","src/opentype/GlyphInfo.js","src/opentype/shapers/HangulShaper.js","src/opentype/shapers/UniversalShaper.js","src/opentype/shapers/index.js","src/opentype/GSUBProcessor.js","src/opentype/GPOSProcessor.js","src/opentype/OTLayoutEngine.js","src/layout/LayoutEngine.js","src/glyph/Path.js","src/glyph/StandardNames.js","src/glyph/Glyph.js","src/glyph/TTFGlyph.js","src/glyph/CFFGlyph.js","src/glyph/SBIXGlyph.js","src/glyph/COLRGlyph.js","src/glyph/GlyphVariationProcessor.js","src/subset/Subset.js","src/glyph/TTFGlyphEncoder.js","src/subset/TTFSubset.js","src/subset/CFFSubset.js","src/TTFFont.js","src/tables/WOFFDirectory.js","src/WOFFFont.js","src/glyph/WOFF2Glyph.js","src/tables/WOFF2Directory.js","src/WOFF2Font.js","src/TrueTypeCollection.js","src/DFont.js","src/index.js"],"sourcesContent":["import r from 'restructure';\nconst fs = require('fs');\n\nvar fontkit = {};\nexport default fontkit;\n\nfontkit.logErrors = false;\n\nlet formats = [];\nfontkit.registerFormat = function(format) {\n  formats.push(format);\n};\n\nfontkit.openSync = function(filename, postscriptName) {\n  let buffer = fs.readFileSync(filename);\n  return fontkit.create(buffer, postscriptName);\n};\n\nfontkit.open = function(filename, postscriptName, callback) {\n  if (typeof postscriptName === 'function') {\n    callback = postscriptName;\n    postscriptName = null;\n  }\n\n  fs.readFile(filename, function(err, buffer) {\n    if (err) { return callback(err); }\n\n    try {\n      var font = fontkit.create(buffer, postscriptName);\n    } catch (e) {\n      return callback(e);\n    }\n\n    return callback(null, font);\n  });\n\n  return;\n};\n\nfontkit.create = function(buffer, postscriptName) {\n  for (let i = 0; i < formats.length; i++) {\n    let format = formats[i];\n    if (format.probe(buffer)) {\n      let font = new format(new r.DecodeStream(buffer));\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n","/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\nexport function cache(target, key, descriptor) {\n  if (descriptor.get) {\n    let get = descriptor.get;\n    descriptor.get = function() {\n      let value = get.call(this);\n      Object.defineProperty(this, key, { value });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    let fn = descriptor.value;\n\n    return {\n      get() {\n        let cache = new Map;\n        function memoized(...args) {\n          let key = args.length > 0 ? args[0] : 'value';\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          let result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        };\n\n        Object.defineProperty(this, key, {value: memoized});\n        return memoized;\n      }\n    };\n  }\n}\n","import r from 'restructure';\n\nlet SubHeader = new r.Struct({\n  firstCode:      r.uint16,\n  entryCount:     r.uint16,\n  idDelta:        r.int16,\n  idRangeOffset:  r.uint16\n});\n\nlet CmapGroup = new r.Struct({\n  startCharCode:  r.uint32,\n  endCharCode:    r.uint32,\n  glyphID:        r.uint32\n});\n\nlet UnicodeValueRange = new r.Struct({\n  startUnicodeValue:  r.uint24,\n  additionalCount:    r.uint8\n});\n\nlet UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID:      r.uint16\n});\n\nlet DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nlet NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\n\nlet VarSelectorRecord = new r.Struct({\n  varSelector:    r.uint24,\n  defaultUVS:     new r.Pointer(r.uint32, DefaultUVS, {type: 'parent'}),\n  nonDefaultUVS:  new r.Pointer(r.uint32, NonDefaultUVS, {type: 'parent'})\n});\n\nlet CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: { // Byte encoding\n    length:     r.uint16,   // Total table length in bytes (set to 262 for format 0)\n    language:   r.uint16,   // Language code for this encoding subtable, or zero if language-independent\n    codeMap:    new r.LazyArray(r.uint8, 256)\n  },\n\n  2: { // High-byte mapping (CJK)\n    length:           r.uint16,\n    language:         r.uint16,\n    subHeaderKeys:    new r.Array(r.uint16, 256),\n    subHeaderCount:   t => Math.max.apply(Math, t.subHeaderKeys),\n    subHeaders:       new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray:  new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n\n  4: { // Segment mapping to delta values\n    length:           r.uint16,              // Total table length in bytes\n    language:         r.uint16,              // Language code\n    segCountX2:       r.uint16,\n    segCount:         t => t.segCountX2 >> 1,\n    searchRange:      r.uint16,\n    entrySelector:    r.uint16,\n    rangeShift:       r.uint16,\n    endCode:          new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad:      new r.Reserved(r.uint16),       // This value should be zero\n    startCode:        new r.LazyArray(r.uint16, 'segCount'),\n    idDelta:          new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset:    new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray:  new r.LazyArray(r.uint16, t => (t.length - t._currentOffset) / 2)\n  },\n\n  6: { // Trimmed table\n    length:         r.uint16,\n    language:       r.uint16,\n    firstCode:      r.uint16,\n    entryCount:     r.uint16,\n    glyphIndices:   new r.LazyArray(r.uint16, 'entryCount')\n  },\n\n  8: { // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint16,\n    is32:     new r.LazyArray(r.uint8, 8192),\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  10: { // Trimmed Array\n    reserved:       new r.Reserved(r.uint16),\n    length:         r.uint32,\n    language:       r.uint32,\n    firstCode:      r.uint32,\n    entryCount:     r.uint32,\n    glyphIndices:   new r.LazyArray(r.uint16, 'numChars')\n  },\n\n  12: { // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint32,\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  13: { // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint32,\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  14: { // Unicode Variation Sequences\n    length:       r.uint32,\n    numRecords:   r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\n\nlet CmapEntry = new r.Struct({\n  platformID:  r.uint16,  // Platform identifier\n  encodingID:  r.uint16,  // Platform-specific encoding identifier\n  table:       new r.Pointer(r.uint32, CmapSubtable, {type: 'parent', lazy: true})\n});\n\n// character to glyph mapping\nexport default new r.Struct({\n  version:      r.uint16,\n  numSubtables: r.uint16,\n  tables:       new r.Array(CmapEntry, 'numSubtables')\n});\n","import r from 'restructure';\n\n// font header\nexport default new r.Struct({\n  version:            r.int32,                   // 0x00010000 (version 1.0)\n  revision:           r.int32,                   // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber:        r.uint32,                  // set to 0x5F0F3CF5\n  flags:              r.uint16,\n  unitsPerEm:         r.uint16,                  // range from 64 to 16384\n  created:            new r.Array(r.int32, 2),\n  modified:           new r.Array(r.int32, 2),\n  xMin:               r.int16,                   // for all glyph bounding boxes\n  yMin:               r.int16,                   // for all glyph bounding boxes\n  xMax:               r.int16,                   // for all glyph bounding boxes\n  yMax:               r.int16,                   // for all glyph bounding boxes\n  macStyle:           new r.Bitfield(r.uint16, [\n    'bold', 'italic', 'underline', 'outline',\n    'shadow', 'condensed', 'extended'\n  ]),\n  lowestRecPPEM:      r.uint16,                  // smallest readable size in pixels\n  fontDirectionHint:  r.int16,\n  indexToLocFormat:   r.int16,                   // 0 for short offsets, 1 for long\n  glyphDataFormat:    r.int16                    // 0 for current format\n});\n","import r from 'restructure';\n\n// horizontal header\nexport default new r.Struct({\n  version:              r.int32,\n  ascent:               r.int16,   // Distance from baseline of highest ascender\n  descent:              r.int16,   // Distance from baseline of lowest descender\n  lineGap:              r.int16,   // Typographic line gap\n  advanceWidthMax:      r.uint16,  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing:   r.int16,   // Maximum advance width value in 'hmtx' table\n  minRightSideBearing:  r.int16,   // Minimum right sidebearing value\n  xMaxExtent:           r.int16,\n  caretSlopeRise:       r.int16,   // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun:        r.int16,   // 0 for vertical\n  caretOffset:          r.int16,   // Set to 0 for non-slanted fonts\n  reserved:             new r.Reserved(r.int16, 4),\n  metricDataFormat:     r.int16,   // 0 for current format\n  numberOfMetrics:      r.uint16   // Number of advance widths in 'hmtx' table\n});\n","import r from 'restructure';\n\nlet HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\n\nexport default new r.Struct({\n  metrics:    new r.LazyArray(HmtxEntry, t => t.parent.hhea.numberOfMetrics),\n  bearings:   new r.LazyArray(r.int16, t => t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics)\n});\n","import r from 'restructure';\n\n// maxiumum profile\nexport default new r.Struct({\n  version:                r.int32,\n  numGlyphs:              r.uint16,  // The number of glyphs in the font\n  maxPoints:              r.uint16,  // Maximum points in a non-composite glyph\n  maxContours:            r.uint16,  // Maximum contours in a non-composite glyph\n  maxComponentPoints:     r.uint16,  // Maximum points in a composite glyph\n  maxComponentContours:   r.uint16,  // Maximum contours in a composite glyph\n  maxZones:               r.uint16,  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints:      r.uint16,  // Maximum points used in Z0\n  maxStorage:             r.uint16,  // Number of Storage Area locations\n  maxFunctionDefs:        r.uint16,  // Number of FDEFs\n  maxInstructionDefs:     r.uint16,  // Number of IDEFs\n  maxStackElements:       r.uint16,  // Maximum stack depth\n  maxSizeOfInstructions:  r.uint16,  // Maximum byte count for glyph instructions\n  maxComponentElements:   r.uint16,  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth:      r.uint16   // Maximum levels of recursion; 1 for simple components\n});\n","/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\nexport function getEncoding(platformID, encodingID, languageID = 0) {\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n  \n  return ENCODINGS[platformID][encodingID];\n}\n\n// Map of platform ids to encoding ids.\nexport const ENCODINGS = [\n  // unicode\n  ['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'],\n  \n  // macintosh\n  // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n  // 0\tRoman                 17\tMalayalam\n  // 1\tJapanese\t            18\tSinhalese\n  // 2\tTraditional Chinese\t  19\tBurmese\n  // 3\tKorean\t              20\tKhmer\n  // 4\tArabic\t              21\tThai\n  // 5\tHebrew\t              22\tLaotian\n  // 6\tGreek\t                23\tGeorgian\n  // 7\tRussian\t              24\tArmenian\n  // 8\tRSymbol\t              25\tSimplified Chinese\n  // 9\tDevanagari\t          26\tTibetan\n  // 10\tGurmukhi\t            27\tMongolian\n  // 11\tGujarati\t            28\tGeez\n  // 12\tOriya\t                29\tSlavic\n  // 13\tBengali\t              30\tVietnamese\n  // 14\tTamil\t                31\tSindhi\n  // 15\tTelugu\t              32\t(Uninterpreted)\n  // 16\tKannada\n  ['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8',\n   'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati',\n   'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese',\n   'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', \n   'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'],\n  \n  // ISO (deprecated)\n  ['ascii'],\n  \n  // windows\n  // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n  ['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']\n];\n\n// Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nexport const MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit', // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n};\n\n// Map of platform ids to BCP-47 language codes.\nexport const LANGUAGES = [\n  // unicode\n  [],\n  \n  { // macintosh\n    0: 'en',        30: 'fo',       60: 'ks',       90: 'rw',\n    1: 'fr',        31: 'fa',       61: 'ku',       91: 'rn',\n    2: 'de',        32: 'ru',       62: 'sd',       92: 'ny',\n    3: 'it',        33: 'zh',       63: 'bo',       93: 'mg',\n    4: 'nl',        34: 'nl-BE',    64: 'ne',       94: 'eo',\n    5: 'sv',        35: 'ga',       65: 'sa',       128: 'cy',\n    6: 'es',        36: 'sq',       66: 'mr',       129: 'eu',\n    7: 'da',        37: 'ro',       67: 'bn',       130: 'ca',\n    8: 'pt',        38: 'cz',       68: 'as',       131: 'la',\n    9: 'no',        39: 'sk',       69: 'gu',       132: 'qu',\n    10: 'he',       40: 'si',       70: 'pa',       133: 'gn',\n    11: 'ja',       41: 'yi',       71: 'or',       134: 'ay',\n    12: 'ar',       42: 'sr',       72: 'ml',       135: 'tt',\n    13: 'fi',       43: 'mk',       73: 'kn',       136: 'ug',\n    14: 'el',       44: 'bg',       74: 'ta',       137: 'dz',\n    15: 'is',       45: 'uk',       75: 'te',       138: 'jv',\n    16: 'mt',       46: 'be',       76: 'si',       139: 'su',\n    17: 'tr',       47: 'uz',       77: 'my',       140: 'gl',\n    18: 'hr',       48: 'kk',       78: 'km',       141: 'af',\n    19: 'zh-Hant',  49: 'az-Cyrl',  79: 'lo',       142: 'br',\n    20: 'ur',       50: 'az-Arab',  80: 'vi',       143: 'iu',\n    21: 'hi',       51: 'hy',       81: 'id',       144: 'gd',\n    22: 'th',       52: 'ka',       82: 'tl',       145: 'gv',\n    23: 'ko',       53: 'mo',       83: 'ms',       146: 'ga',\n    24: 'lt',       54: 'ky',       84: 'ms-Arab',  147: 'to',\n    25: 'pl',       55: 'tg',       85: 'am',       148: 'el-polyton',\n    26: 'hu',       56: 'tk',       86: 'ti',       149: 'kl',\n    27: 'es',       57: 'mn-CN',    87: 'om',       150: 'az',\n    28: 'lv',       58: 'mn',       88: 'so',       151: 'nn',\n    29: 'se',       59: 'ps',       89: 'sw',\n  },\n  \n  // ISO (deprecated)\n  [],\n  \n  { // windows                                        \n    0x0436: 'af',       0x4009: 'en-IN',    0x0487: 'rw',          0x0432: 'tn',       \n    0x041C: 'sq',       0x1809: 'en-IE',    0x0441: 'sw',          0x045B: 'si',          \n    0x0484: 'gsw',      0x2009: 'en-JM',    0x0457: 'kok',         0x041B: 'sk',          \n    0x045E: 'am',       0x4409: 'en-MY',    0x0412: 'ko',          0x0424: 'sl',          \n    0x1401: 'ar-DZ',    0x1409: 'en-NZ',    0x0440: 'ky',          0x2C0A: 'es-AR',       \n    0x3C01: 'ar-BH',    0x3409: 'en-PH',    0x0454: 'lo',          0x400A: 'es-BO',       \n    0x0C01: 'ar',       0x4809: 'en-SG',    0x0426: 'lv',          0x340A: 'es-CL',       \n    0x0801: 'ar-IQ',    0x1C09: 'en-ZA',    0x0427: 'lt',          0x240A: 'es-CO',       \n    0x2C01: 'ar-JO',    0x2C09: 'en-TT',    0x082E: 'dsb',         0x140A: 'es-CR',       \n    0x3401: 'ar-KW',    0x0809: 'en-GB',    0x046E: 'lb',          0x1C0A: 'es-DO',       \n    0x3001: 'ar-LB',    0x0409: 'en',       0x042F: 'mk',          0x300A: 'es-EC',       \n    0x1001: 'ar-LY',    0x3009: 'en-ZW',    0x083E: 'ms-BN',       0x440A: 'es-SV',       \n    0x1801: 'ary',      0x0425: 'et',       0x043E: 'ms',          0x100A: 'es-GT',       \n    0x2001: 'ar-OM',    0x0438: 'fo',       0x044C: 'ml',          0x480A: 'es-HN',       \n    0x4001: 'ar-QA',    0x0464: 'fil',      0x043A: 'mt',          0x080A: 'es-MX',       \n    0x0401: 'ar-SA',    0x040B: 'fi',       0x0481: 'mi',          0x4C0A: 'es-NI',       \n    0x2801: 'ar-SY',    0x080C: 'fr-BE',    0x047A: 'arn',         0x180A: 'es-PA',       \n    0x1C01: 'aeb',      0x0C0C: 'fr-CA',    0x044E: 'mr',          0x3C0A: 'es-PY',       \n    0x3801: 'ar-AE',    0x040C: 'fr',       0x047C: 'moh',         0x280A: 'es-PE',       \n    0x2401: 'ar-YE',    0x140C: 'fr-LU',    0x0450: 'mn',          0x500A: 'es-PR',       \n    0x042B: 'hy',       0x180C: 'fr-MC',    0x0850: 'mn-CN',       0x0C0A: 'es',          \n    0x044D: 'as',       0x100C: 'fr-CH',    0x0461: 'ne',          0x040A: 'es',          \n    0x082C: 'az-Cyrl',  0x0462: 'fy',       0x0414: 'nb',          0x540A: 'es-US',       \n    0x042C: 'az',       0x0456: 'gl',       0x0814: 'nn',          0x380A: 'es-UY',     \n    0x046D: 'ba',       0x0437: 'ka',       0x0482: 'oc',          0x200A: 'es-VE',       \n    0x042D: 'eu',       0x0C07: 'de-AT',    0x0448: 'or',          0x081D: 'sv-FI',       \n    0x0423: 'be',       0x0407: 'de',       0x0463: 'ps',          0x041D: 'sv',          \n    0x0845: 'bn',       0x1407: 'de-LI',    0x0415: 'pl',          0x045A: 'syr',         \n    0x0445: 'bn-IN',    0x1007: 'de-LU',    0x0416: 'pt',          0x0428: 'tg',          \n    0x201A: 'bs-Cyrl',  0x0807: 'de-CH',    0x0816: 'pt-PT',       0x085F: 'tzm',         \n    0x141A: 'bs',       0x0408: 'el',       0x0446: 'pa',          0x0449: 'ta',          \n    0x047E: 'br',       0x046F: 'kl',       0x046B: 'qu-BO',       0x0444: 'tt',          \n    0x0402: 'bg',       0x0447: 'gu',       0x086B: 'qu-EC',       0x044A: 'te',          \n    0x0403: 'ca',       0x0468: 'ha',       0x0C6B: 'qu',          0x041E: 'th',          \n    0x0C04: 'zh-HK',    0x040D: 'he',       0x0418: 'ro',          0x0451: 'bo',          \n    0x1404: 'zh-MO',    0x0439: 'hi',       0x0417: 'rm',          0x041F: 'tr',          \n    0x0804: 'zh',       0x040E: 'hu',       0x0419: 'ru',          0x0442: 'tk',          \n    0x1004: 'zh-SG',    0x040F: 'is',       0x243B: 'smn',         0x0480: 'ug',          \n    0x0404: 'zh-TW',    0x0470: 'ig',       0x103B: 'smj-NO',      0x0422: 'uk',          \n    0x0483: 'co',       0x0421: 'id',       0x143B: 'smj',         0x042E: 'hsb',         \n    0x041A: 'hr',       0x045D: 'iu',       0x0C3B: 'se-FI',       0x0420: 'ur',          \n    0x101A: 'hr-BA',    0x085D: 'iu-Latn',  0x043B: 'se',          0x0843: 'uz-Cyrl',     \n    0x0405: 'cs',       0x083C: 'ga',       0x083B: 'se-SE',       0x0443: 'uz',          \n    0x0406: 'da',       0x0434: 'xh',       0x203B: 'sms',         0x042A: 'vi',          \n    0x048C: 'prs',      0x0435: 'zu',       0x183B: 'sma-NO',      0x0452: 'cy',          \n    0x0465: 'dv',       0x0410: 'it',       0x1C3B: 'sms',         0x0488: 'wo',          \n    0x0813: 'nl-BE',    0x0810: 'it-CH',    0x044F: 'sa',          0x0485: 'sah',         \n    0x0413: 'nl',       0x0411: 'ja',       0x1C1A: 'sr-Cyrl-BA',  0x0478: 'ii',          \n    0x0C09: 'en-AU',    0x044B: 'kn',       0x0C1A: 'sr',          0x046A: 'yo',           \n    0x2809: 'en-BZ',    0x043F: 'kk',       0x181A: 'sr-Latn-BA',  \n    0x1009: 'en-CA',    0x0453: 'km',       0x081A: 'sr-Latn',     \n    0x2409: 'en-029',   0x0486: 'quc',      0x046C: 'nso',         \n  }\n];\n","import r from 'restructure';\nimport {getEncoding, LANGUAGES} from '../encodings';\n\nlet NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID:     r.uint16,\n  length:     r.uint16,\n  string:     new r.Pointer(r.uint16,\n    new r.String('length', t => getEncoding(t.platformID, t.encodingID, t.languageID)),\n    { type: 'parent', relativeTo: 'parent.stringOffset', allowNull: false }\n  )\n});\n  \nlet LangTagRecord = new r.Struct({\n  length:  r.uint16,\n  tag:     new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {type: 'parent', relativeTo: 'stringOffset'})\n});\n  \nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count:          r.uint16,\n    stringOffset:   r.uint16,\n    records:        new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count:          r.uint16,\n    stringOffset:   r.uint16,\n    records:        new r.Array(NameRecord, 'count'),\n    langTagCount:   r.uint16,\n    langTags:       new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\n\nexport default NameTable;\n\nconst NAMES = [\n  'copyright',\n  'fontFamily',\n  'fontSubfamily',\n  'uniqueSubfamily',\n  'fullName',\n  'version',\n  'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n  'trademark',\n  'manufacturer',\n  'designer',\n  'description',\n  'vendorURL',\n  'designerURL',\n  'license',\n  'licenseURL',\n  null, // reserved\n  'preferredFamily',\n  'preferredSubfamily',\n  'compatibleFull',\n  'sampleText',\n  'postscriptCIDFontName',\n  'wwsFamilyName',\n  'wwsSubfamilyName'\n];\n\nNameTable.process = function(stream) {  \n  var records = {};\n  for (let record of this.records) {\n    // find out what language this is for\n    let language = LANGUAGES[record.platformID][record.languageID];\n    \n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n    \n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    }\n    \n    // if the nameID is >= 256, it is a font feature record (AAT)\n    let key = record.nameID >= 256 ? 'fontFeatures' : (NAMES[record.nameID] || record.nameID);\n    if (records[key] == null) {\n      records[key] = {};\n    }\n    \n    let obj = records[key];\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n    \n    obj[language] = record.string;\n  }\n  \n  this.records = records;\n};\n\nNameTable.preEncode = function() {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  \n  let records = [];\n  for (let key in this.records) {\n    let val = this.records[key];\n    if (key === 'fontFeatures') continue;\n    \n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n      \n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n      \n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n","import r from 'restructure';\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth:          r.int16,   // average weighted advance width of lower case letters and space\n    usWeightClass:          r.uint16,  // visual weight of stroke in glyphs\n    usWidthClass:           r.uint16,  // relative change from the normal aspect ratio (width to height ratio)\n    fsType:                 new r.Bitfield(r.uint16, [ // Indicates font embedding licensing rights\n      null, 'noEmbedding', 'viewOnly', 'editable', null,\n      null, null, null, 'noSubsetting', 'bitmapOnly'\n    ]),\n    ySubscriptXSize:        r.int16,   // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize:        r.int16,   // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset:      r.int16,   // recommended horizontal offset for subscripts\n    ySubscriptYOffset:      r.int16,   // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize:      r.int16,   // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize:      r.int16,   // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset:    r.int16,   // recommended horizontal offset for superscripts\n    ySuperscriptYOffset:    r.int16,   // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize:         r.int16,   // width of the strikeout stroke\n    yStrikeoutPosition:     r.int16,   // position of the strikeout stroke relative to the baseline\n    sFamilyClass:           r.int16,   // classification of font-family design\n    panose:                 new r.Array(r.uint8, 10),   // describe the visual characteristics of a given typeface\n    ulCharRange:            new r.Array(r.uint32, 4),\n    vendorID:               new r.String(4),          // four character identifier for the font vendor\n    fsSelection:            new r.Bitfield(r.uint16, [  // bit field containing information about the font\n      'italic', 'underscore', 'negative', 'outlined', 'strikeout',\n      'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique'\n    ]),\n    usFirstCharIndex:       r.uint16,  // The minimum Unicode index in this font\n    usLastCharIndex:        r.uint16   // The maximum Unicode index in this font\n  },\n\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n\n  1: {\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2)\n  },\n\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2),\n\n    xHeight:            r.int16,\n    capHeight:          r.int16,\n    defaultChar:        r.uint16,\n    breakChar:          r.uint16,\n    maxContent:         r.uint16\n  },\n\n  5: {\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2),\n\n    xHeight:            r.int16,\n    capHeight:          r.int16,\n    defaultChar:        r.uint16,\n    breakChar:          r.uint16,\n    maxContent:         r.uint16,\n\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\n\nlet versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\n\nexport default OS2;\n","import r from 'restructure';\n\n// PostScript information\nexport default new r.VersionedStruct(r.fixed32, {\n  header: { // these fields exist at the top of all versions\n    italicAngle:        r.fixed32, // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition:  r.int16,   // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,   // Suggested values for the underline thickness\n    isFixedPitch:       r.uint32,  // Whether the font is monospaced\n    minMemType42:       r.uint32,  // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42:       r.uint32,  // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1:        r.uint32,  // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1:        r.uint32   // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n  },\n\n  1: {}, // version 1 has no additional fields\n\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names:          new r.Array(new r.String(r.uint8))\n  },\n\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets:        new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n\n  3: {}, // version 3 has no additional fields\n\n  4: {\n    map: new r.Array(r.uint32, t => t.parent.maxp.numGlyphs)\n  }\n});\n","import r from 'restructure';\n\n// An array of predefined values accessible by instructions\nexport default new r.Struct({\n  controlValues: new r.Array(r.int16)\n});\n","import r from 'restructure';\n\n// A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\nexport default new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\n","import r from 'restructure';\n\nlet loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function() {\n  if (this.version === 0) {\n    for (let i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function() {\n  if (this.version != null) return;\n\n  // assume this.offsets is a sorted array\n  this.version = this.offsets[this.offsets.length - 1] > 0xffff ? 1 : 0;\n\n  if (this.version === 0) {\n    for (let i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n};\n\nexport default loca;\n","import r from 'restructure';\n\n// Set of instructions executed whenever the point size or font transformation change\nexport default new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\n","import r from 'restructure';\n\n// only used for encoding\nexport default new r.Array(new r.Buffer);\n","import r from 'restructure';\n\nexport default class CFFIndex {\n  constructor(type) {\n    this.type = type;\n  }\n\n  decode(stream, parent) {\n    let count = stream.readUInt16BE();\n    if (count === 0) {\n      return [];\n    }\n\n    let offSize = stream.readUInt8();\n    let offsetType;\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(`Bad offset size in CFFIndex: ${offSize} ${stream.pos}`);\n    }\n\n    let ret = [];\n    let startPos = stream.pos + ((count + 1) * offSize) - 1;\n\n    let start = offsetType.decode(stream);\n    for (let i = 0; i < count; i++) {\n      let end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        let pos = stream.pos;\n        stream.pos = startPos + start;\n\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  }\n\n  size(arr, parent) {\n    let size = 2;\n    if (arr.length === 0) {\n      return size;\n    }\n\n    let type = this.type || new r.Buffer;\n\n    // find maximum offset to detminine offset type\n    let offset = 1;\n    for (let i = 0; i < arr.length; i++) {\n      let item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    let offsetType;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n\n    return size;\n  }\n\n  encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n    if (arr.length === 0) {\n      return;\n    }\n\n    let type = this.type || new r.Buffer;\n\n    // find maximum offset to detminine offset type\n    let sizes = [];\n    let offset = 1;\n    for (let item of arr) {\n      let s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    let offsetType;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    // write offset size\n    stream.writeUInt8(offsetType.size());\n\n    // write elements\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (let size of sizes) {\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (let item of arr) {\n      type.encode(stream, item, parent);\n    }\n\n    return;\n  }\n}\n","const FLOAT_EOF = 0xf;\nconst FLOAT_LOOKUP = [\n  '0', '1', '2', '3', '4', '5', '6', '7',\n  '8', '9', '.', 'E', 'E-', null, '-'\n];\n\nconst FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nexport default class CFFOperand {\n  static decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      let str = '';\n      while (true) {\n        let b = stream.readUInt8();\n\n        let n1 = b >> 4;\n        if (n1 === FLOAT_EOF) { break; }\n        str += FLOAT_LOOKUP[n1];\n\n        let n2 = b & 15;\n        if (n2 === FLOAT_EOF) { break; }\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  }\n\n  static size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) { // floating point\n      let str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n\n    } else {\n      return 5;\n    }\n  }\n\n  static encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    let val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n\n    } else if ((val | 0) !== val) { // floating point\n      stream.writeUInt8(30);\n\n      let str = '' + val;\n      for (let i = 0; i < str.length; i += 2) {\n        let c1 = str[i];\n        let n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          let c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8((n1 << 4) | (n2 & 15));\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8((FLOAT_EOF << 4));\n      }\n\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  }\n}\n","import isEqual from 'deep-equal';\nimport r from 'restructure';\nimport CFFOperand from './CFFOperand';\nimport { PropertyDescriptor } from 'restructure/src/utils';\n\nexport default class CFFDict {\n  constructor(ops = []) {\n    this.ops = ops;\n    this.fields = {};\n    for (let field of ops) {\n      let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  decodeOperands(type, stream, ret, operands) {\n    if (Array.isArray(type)) {\n      return operands.map((op, i) => this.decodeOperands(type[i], stream, ret, [op]));\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n        case 'boolean':\n          return !!operands[0];\n        default:\n          return operands;\n      }\n    }\n  }\n\n  encodeOperands(type, stream, ctx, operands) {\n    if (Array.isArray(type)) {\n      return operands.map((op, i) => this.encodeOperands(type[i], stream, ctx, op)[0]);\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  }\n\n  decode(stream, parent) {\n    let end = stream.pos + parent.length;\n    let ret = {};\n    let operands = [];\n\n    // define hidden properties\n    Object.defineProperties(ret, {\n      parent:         { value: parent },\n      _startOffset:   { value: stream.pos }\n    });\n\n    // fill in defaults\n    for (let key in this.fields) {\n      let field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      let b = stream.readUInt8();\n      if (b <= 21) {\n        if (b === 12) {\n          b = (b << 8) | stream.readUInt8();\n        }\n\n        let field = this.fields[b];\n        if (!field) {\n          throw new Error(`Unknown operator ${b}`);\n        }\n\n        let val = this.decodeOperands(field[2], stream, ret, operands);\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, field[1], val);\n          } else {\n            ret[field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  }\n\n  size(dict, parent, includePointers = true) {\n    let ctx = {\n      parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n\n    let len = 0;\n\n    for (let k in this.fields) {\n      let field = this.fields[k];\n      let val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      let operands = this.encodeOperands(field[2], null, ctx, val);\n      for (let op of operands) {\n        len += CFFOperand.size(op);\n      }\n\n      let key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  }\n\n  encode(stream, dict, parent) {\n    let ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val: dict,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (let field of this.ops) {\n      let val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      let operands = this.encodeOperands(field[2], stream, ctx, val);\n      for (let op of operands) {\n        CFFOperand.encode(stream, op);\n      }\n\n      let key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      for (let op of key) {\n        stream.writeUInt8(op);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      let ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  }\n}\n","import r from 'restructure';\n\nexport default class CFFPointer extends r.Pointer {\n  constructor(type, options = {}) {\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    super(null, type, options);\n  }\n\n  decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: () => operands[0]\n    };\n\n    return super.decode(stream, parent, operands);\n  }\n\n  encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: () => 0\n      };\n\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    let ptr = null;\n    this.offsetType = {\n      encode: (stream, val) => ptr = val\n    };\n\n    super.encode(stream, value, ctx);\n    return [new Ptr(ptr)];\n  }\n}\n\nclass Ptr {\n  constructor(val) {\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  valueOf() {\n    return this.val;\n  }\n}\n","import CFFDict from './CFFDict';\nimport CFFIndex from './CFFIndex';\nimport CFFPointer from './CFFPointer';\n\nexport default new CFFDict([\n  // key       name                    type                                          default\n  [6,         'BlueValues',           'delta',                                       null],\n  [7,         'OtherBlues',           'delta',                                       null],\n  [8,         'FamilyBlues',          'delta',                                       null],\n  [9,         'FamilyOtherBlues',     'delta',                                       null],\n  [[12, 9],   'BlueScale',            'number',                                      0.039625],\n  [[12, 10],  'BlueShift',            'number',                                      7],\n  [[12, 11],  'BlueFuzz',             'number',                                      1],\n  [10,        'StdHW',                'number',                                      null],\n  [11,        'StdVW',                'number',                                      null],\n  [[12, 12],  'StemSnapH',            'delta',                                       null],\n  [[12, 13],  'StemSnapV',            'delta',                                       null],\n  [[12, 14],  'ForceBold',            'boolean',                                     false],\n  [[12, 17],  'LanguageGroup',        'number',                                      0],\n  [[12, 18],  'ExpansionFactor',      'number',                                      0.06],\n  [[12, 19],  'initialRandomSeed',    'number',                                      0],\n  [20,        'defaultWidthX',        'number',                                      0],\n  [21,        'nominalWidthX',        'number',                                      0],\n  [19,        'Subrs',                new CFFPointer(new CFFIndex, {type: 'local'}), null]\n]);\n","// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\nexport default [\n  \".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\",\n  \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\",\n  \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\",\n  \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\",\n  \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\",\n  \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\",\n  \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\",\n  \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\",\n  \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\",\n  \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\",\n  \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\",\n  \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\",\n  \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\",\n  \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\",\n  \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\",\n  \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\",\n  \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\",\n  \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\",\n  \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\",\n  \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\",\n  \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\",\n  \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\",\n  \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\",\n  \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\",\n  \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\",\n  \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\",\n  \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\",\n  \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\",\n  \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\",\n  \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\",\n  \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\",\n  \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\",\n  \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\",\n  \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\",\n  \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\",\n  \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\",\n  \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\",\n  \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\",\n  \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\",\n  \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\",\n  \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\",\n  \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\",\n  \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\",\n  \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\",\n  \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\",\n  \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\",\n  \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\",\n  \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\",\n  \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\",\n  \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\",\n  \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\",\n  \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\",\n  \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\",\n  \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\",\n  \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\",\n  \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\",\n  \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\",\n  \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\",\n  \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\",\n  \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\",\n  \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\",\n  \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\",\n  \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\",\n  \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\",\n  \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\",\n  \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\",\n  \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"\n];\n","export let StandardEncoding = [\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n  'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n  'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n  'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n  'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n  'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n  'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n  'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n  'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n  'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n  'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n  'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n  '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n  'lslash', 'oslash', 'oe', 'germandbls'\n];\n\nexport let ExpertEncoding = [\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n  'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n  'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n  'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n  'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n  'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n  'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n  'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n  'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n  'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n  'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n  'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n  '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n  'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n  '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n  'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n  'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n  'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n  'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n  'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n  'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n  'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'\n];\n","export let ISOAdobeCharset = [\n  '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar',\n  'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright',\n  'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero',\n  'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\n  'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question',\n  'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n  'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\n  'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n  'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent',\n  'sterling', 'fraction', 'yen', 'florin', 'section', 'currency',\n  'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft',\n  'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl',\n  'periodcentered', 'paragraph', 'bullet', 'quotesinglbase',\n  'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis',\n  'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde',\n  'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla',\n  'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine',\n  'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash',\n  'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n  'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter',\n  'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior',\n  'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n  'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde',\n  'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute',\n  'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n  'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex',\n  'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute',\n  'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla',\n  'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex',\n  'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis',\n  'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis',\n  'ugrave', 'yacute', 'ydieresis', 'zcaron'\n];\n\nexport let ExpertCharset = [\n  '.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle',\n  'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior',\n  'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma',\n  'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle',\n  'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle',\n  'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle',\n  'colon', 'semicolon', 'commasuperior', 'threequartersemdash',\n  'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior',\n  'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n  'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior',\n  'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall',\n  'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall',\n  'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall',\n  'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall',\n  'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary',\n  'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle',\n  'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n  'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall',\n  'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall',\n  'Cedillasmall', 'onequarter', 'onehalf', 'threequarters',\n  'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths',\n  'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior',\n  'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n  'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior',\n  'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior',\n  'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior',\n  'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall',\n  'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall',\n  'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall',\n  'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n  'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall',\n  'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall',\n  'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n  'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall',\n  'Ydieresissmall'\n];\n\nexport let ExpertSubsetCharset = [\n  '.notdef', 'space', 'dollaroldstyle', 'dollarsuperior',\n  'parenleftsuperior', 'parenrightsuperior', 'twodotenleader',\n  'onedotenleader', 'comma', 'hyphen', 'period', 'fraction',\n  'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n  'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle',\n  'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior',\n  'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior',\n  'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n  'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior',\n  'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted',\n  'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter',\n  'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths',\n  'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior',\n  'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n  'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior',\n  'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior',\n  'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior',\n  'periodinferior', 'commainferior'\n];\n","import r from 'restructure';\nimport { resolveLength } from 'restructure/src/utils';\nimport CFFDict from './CFFDict';\nimport CFFIndex from './CFFIndex';\nimport CFFPointer from './CFFPointer';\nimport CFFPrivateDict from './CFFPrivateDict';\nimport StandardStrings from './CFFStandardStrings';\nimport { StandardEncoding, ExpertEncoding } from './CFFEncodings';\nimport { ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset } from './CFFCharsets';\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\nclass PredefinedOp {\n  constructor(predefinedOps, type) {\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  }\n\n  size(value, ctx) {\n    return this.type.size(value, ctx);\n  }\n\n  encode(stream, value, ctx) {\n    let index = this.predefinedOps.indexOf(value);\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  }\n}\n\nclass CFFEncodingVersion extends r.Number {\n  constructor() {\n    super('UInt8');\n  }\n\n  decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  }\n}\n\nlet Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\n\nlet Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\n\nlet CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n  }\n\n  // TODO: supplement?\n});\n\nlet CFFEncoding = new PredefinedOp([ StandardEncoding, ExpertEncoding ], new CFFPointer(CFFCustomEncoding, { lazy: true }));\n\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\nclass RangeArray extends r.Array {\n  decode(stream, parent) {\n    let length = resolveLength(this.length, stream, parent);\n    let count = 0;\n    let res = [];\n    while (count < length) {\n      let range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  }\n}\n\nlet CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, t => t.parent.CharStrings.length - 1)\n  },\n\n  1: {\n    ranges: new RangeArray(Range1, t => t.parent.CharStrings.length - 1)\n  },\n\n  2: {\n    ranges: new RangeArray(Range2, t => t.parent.CharStrings.length - 1)\n  }\n});\n\nlet CFFCharset = new PredefinedOp([ ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset ], new CFFPointer(CFFCustomCharset, {lazy: true}));\n\nlet FDRange = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\n\nlet FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, t => t.parent.CharStrings.length)\n  },\n\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange, 'nRanges'),\n    sentinel: r.uint16\n  }\n});\n\nlet ptr = new CFFPointer(CFFPrivateDict);\nclass CFFPrivateOp {\n  decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  }\n\n  size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  }\n\n  encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  }\n}\n\nlet FontDict = new CFFDict([\n  // key       name                   type(s)                                 default\n  [18,        'Private',              new CFFPrivateOp,                       null],\n  [[12, 38],  'FontName',             'sid',                                  null]\n]);\n\nlet CFFTopDict = new CFFDict([\n  // key       name                   type(s)                                 default\n  [[12, 30],  'ROS',                  ['sid', 'sid', 'number'],               null],\n\n  [0,         'version',              'sid',                                  null],\n  [1,         'Notice',               'sid',                                  null],\n  [[12, 0],   'Copyright',            'sid',                                  null],\n  [2,         'FullName',             'sid',                                  null],\n  [3,         'FamilyName',           'sid',                                  null],\n  [4,         'Weight',               'sid',                                  null],\n  [[12, 1],   'isFixedPitch',         'boolean',                              false],\n  [[12, 2],   'ItalicAngle',          'number',                               0],\n  [[12, 3],   'UnderlinePosition',    'number',                               -100],\n  [[12, 4],   'UnderlineThickness',   'number',                               50],\n  [[12, 5],   'PaintType',            'number',                               0],\n  [[12, 6],   'CharstringType',       'number',                               2],\n  [[12, 7],   'FontMatrix',           'array',                                [0.001, 0, 0, 0.001, 0, 0]],\n  [13,        'UniqueID',             'number',                               null],\n  [5,         'FontBBox',             'array',                                [0, 0, 0, 0]],\n  [[12, 8],   'StrokeWidth',          'number',                               0],\n  [14,        'XUID',                 'array',                                null],\n  [15,        'charset',              CFFCharset,                             ISOAdobeCharset],\n  [16,        'Encoding',             CFFEncoding,                            StandardEncoding],\n  [17,        'CharStrings',          new CFFPointer(new CFFIndex),           null],\n  [18,        'Private',              new CFFPrivateOp,                       null],\n  [[12, 20],  'SyntheticBase',        'number',                               null],\n  [[12, 21],  'PostScript',           'sid',                                  null],\n  [[12, 22],  'BaseFontName',         'sid',                                  null],\n  [[12, 23],  'BaseFontBlend',        'delta',                                null],\n\n  // CID font specific\n  [[12, 31],  'CIDFontVersion',       'number',                               0],\n  [[12, 32],  'CIDFontRevision',      'number',                               0],\n  [[12, 33],  'CIDFontType',          'number',                               0],\n  [[12, 34],  'CIDCount',             'number',                               8720],\n  [[12, 35],  'UIDBase',              'number',                               null],\n  [[12, 37],  'FDSelect',             new CFFPointer(FDSelect),               null],\n  [[12, 36],  'FDArray',              new CFFPointer(new CFFIndex(FontDict)), null],\n  [[12, 38],  'FontName',             'sid',                                  null]\n]);\n\nlet CFFHeader = new r.Struct({\n  majorVersion:   r.uint8,\n  minorVersion:   r.uint8,\n  hdrSize:        r.uint8,\n  offSize:        r.uint8\n});\n\nlet CFFTop = new r.Struct({\n  header:             CFFHeader,\n  nameIndex:          new CFFIndex(new r.String('length')),\n  topDictIndex:       new CFFIndex(CFFTopDict),\n  stringIndex:        new CFFIndex(new r.String('length')),\n  globalSubrIndex:    new CFFIndex()\n});\n\nexport default CFFTop;\n","import r from 'restructure';\nimport CFFIndex from './CFFIndex';\nimport CFFTop from './CFFTop';\nimport CFFPrivateDict from './CFFPrivateDict';\nimport standardStrings from './CFFStandardStrings';\n\nclass CFFFont {\n  constructor(stream) {\n    this.stream = stream;\n    this.decode();\n  }\n\n  static decode(stream) {\n    return new CFFFont(stream);\n  }\n\n  decode() {\n    let start = this.stream.pos;\n    let top = CFFTop.decode(this.stream);\n    for (let key in top) {\n      let val = top[key];\n      this[key] = val;\n    }\n\n    if (this.topDictIndex.length !== 1) {\n      throw new Error(\"Only a single font is allowed in CFF\");\n    }\n\n    this.isCIDFont = (this.topDict.ROS != null);\n\n    return this;\n  }\n\n  string(sid) {\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  }\n\n  get topDict() {\n    return this.topDictIndex[0];\n  }\n\n  get postscriptName() {\n    return this.nameIndex[0];\n  }\n\n  get fullName() {\n    return this.string(this.topDict.FullName);\n  }\n\n  get familyName() {\n    return this.string(this.topDict.FamilyName);\n  }\n\n  getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  }\n\n  getGlyphName(gid) {\n    let { charset } = this.topDict;\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (let i = 0; i < charset.ranges.length; i++) {\n          let range = charset.ranges[i];\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n        break;\n    }\n\n    return null;\n  }\n\n  fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) { return null; }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n        let { ranges } = this.topDict.FDSelect;\n        let low = 0;\n        let high = ranges.length - 1;\n\n        while (low <= high) {\n          let mid = (low + high) >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid > ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n      default:\n        throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`);\n    }\n  }\n\n  privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      let fd = this.fdForGlyph(gid);\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    return this.topDict.Private;\n  }\n}\n\nexport default CFFFont;\n","import r from 'restructure';\n\nlet VerticalOrigin = new r.Struct({\n  glyphIndex:   r.uint16,\n  vertOriginY:  r.int16\n});\n\nexport default new r.Struct({\n  majorVersion:           r.uint16,\n  minorVersion:           r.uint16,\n  defaultVertOriginY:     r.int16,\n  numVertOriginYMetrics:  r.uint16,\n  metrics:                new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\n","import r from 'restructure';\n\nexport let BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\n\nexport let SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\n\nlet EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nclass ByteAligned {}\n\nclass BitAligned {}\n\nexport let glyph = new r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n\n  5: {\n    data: BitAligned\n  },\n\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\n\n","import r from 'restructure';\nimport {BigMetrics} from './EBDT';\n\nlet SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\n\nlet CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\n\nlet IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n\n  1: {\n    offsetArray: new r.Array(r.uint32, t => t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n  },\n\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n\n  3: {\n    offsetArray: new r.Array(r.uint16, t => t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n  },\n\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, t => t.numGlyphs + 1)\n  },\n\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\n\nlet IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\n\nlet BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), { type: 'parent' }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\n\nexport default new r.Struct({\n  version:  r.uint32, // 0x00020000\n  numSizes: r.uint32,\n  sizes:    new r.Array(BitmapSizeTable, 'numSizes')\n});\n","import r from 'restructure';\n\nlet ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), t => t.parent.parent.maxp.numGlyphs + 1)\n});\n\n// This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\nexport default new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\n","import r from 'restructure';\n\nlet LayerRecord = new r.Struct({\n  gid: r.uint16,          // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16  // Index value to use in the appropriate palette. This value must\n});                       // be less than numPaletteEntries in the CPAL table, except for\n                          // the special case noted below. Each palette entry is 16 bits.\n                          // A palette index of 0xFFFF is a special case indicating that\n                          // the text foreground color should be used.\n\nlet BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,             // Glyph ID of reference glyph. This glyph is for reference only\n                             // and is not rendered for color.\n  firstLayerIndex: r.uint16, // Index (from beginning of the Layer Records) to the layer record.\n                             // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\n\nexport default new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), { lazy: true }),\n  numLayerRecords: r.uint16\n});\n","import r from 'restructure';\n\nlet ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\n\nexport default new r.Struct({\n  version: r.uint16,\n  numPaletteEntries: r.uint16,\n  numPalettes: r.uint16,\n  numColorRecords: r.uint16,\n  colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n  colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n});\n","import r from 'restructure';\n\n//########################\n// Scripts and Languages #\n//########################\n\nlet LangSysTable = new r.Struct({\n  reserved:         new r.Reserved(r.uint16),\n  reqFeatureIndex:  r.uint16,\n  featureCount:     r.uint16,\n  featureIndexes:   new r.Array(r.uint16, 'featureCount')\n});\n\nlet LangSysRecord = new r.Struct({\n  tag:      new r.String(4),\n  langSys:  new r.Pointer(r.uint16, LangSysTable, { type: 'parent' })\n});\n\nlet Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count:          r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\n\nlet ScriptRecord = new r.Struct({\n  tag:    new r.String(4),\n  script: new r.Pointer(r.uint16, Script, { type: 'parent' })\n});\n\nexport let ScriptList = new r.Array(ScriptRecord, r.uint16);\n\n//#######################\n// Features and Lookups #\n//#######################\n\nlet Feature = new r.Struct({\n  featureParams:      r.uint16, // pointer\n  lookupCount:        r.uint16,\n  lookupListIndexes:  new r.Array(r.uint16, 'lookupCount')\n});\n\nlet FeatureRecord = new r.Struct({\n  tag:      new r.String(4),\n  feature:  new r.Pointer(r.uint16, Feature, { type: 'parent' })\n});\n\nexport let FeatureList = new r.Array(FeatureRecord, r.uint16);\n\nlet LookupFlags = new r.Bitfield(r.uint16, [\n  'rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures',\n  'ignoreMarks', 'useMarkFilteringSet', null, 'markAttachmentType'\n]);\n\nexport function LookupList(SubTable) {\n  let Lookup = new r.Struct({\n    lookupType:         r.uint16,\n    flags:              LookupFlags,\n    subTableCount:      r.uint16,\n    subTables:          new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet:   r.uint16 // TODO: only present when flags says so...\n  });\n\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n}\n\n//#################\n// Coverage Table #\n//#################\n\nlet RangeRecord = new r.Struct({\n  start:              r.uint16,\n  end:                r.uint16,\n  startCoverageIndex: r.uint16\n});\n\nexport let Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount:   r.uint16,\n    glyphs:       new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount:   r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n});\n\n//#########################\n// Class Definition Table #\n//#########################\n\nlet ClassRangeRecord = new r.Struct({\n  start:  r.uint16,\n  end:    r.uint16,\n  class:  r.uint16\n});\n\nexport let ClassDef = new r.VersionedStruct(r.uint16, {\n  1: { // Class array\n    startGlyph:       r.uint16,\n    glyphCount:       r.uint16,\n    classValueArray:  new r.Array(r.uint16, 'glyphCount')\n  },\n  2: { // Class ranges\n    classRangeCount:  r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n});\n\n//###############\n// Device Table #\n//###############\n\nexport let Device = new r.Struct({\n  startSize:    r.uint16,\n  endSize:      r.uint16,\n  deltaFormat:  r.uint16\n});\n\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nlet LookupRecord = new r.Struct({\n  sequenceIndex:      r.uint16,\n  lookupListIndex:    r.uint16\n});\n\nlet Rule = new r.Struct({\n  glyphCount:     r.uint16,\n  lookupCount:    r.uint16,\n  input:          new r.Array(r.uint16, t => t.glyphCount - 1),\n  lookupRecords:  new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\n\nlet ClassRule = new r.Struct({\n  glyphCount:     r.uint16,\n  lookupCount:    r.uint16,\n  classes:        new r.Array(r.uint16, t => t.glyphCount - 1),\n  lookupRecords:  new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\n\nexport let Context = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context\n    coverage:      new r.Pointer(r.uint16, Coverage),\n    ruleSetCount:  r.uint16,\n    ruleSets:      new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: { // Class-based context\n    coverage:      new r.Pointer(r.uint16, Coverage),\n    classDef:      new r.Pointer(r.uint16, ClassDef),\n    classSetCnt:   r.uint16,\n    classSet:      new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount:    r.uint16,\n    lookupCount:   r.uint16,\n    coverages:     new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nlet ChainRule = new r.Struct({\n  backtrackGlyphCount:  r.uint16,\n  backtrack:            new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount:      r.uint16,\n  input:                new r.Array(r.uint16, t => t.inputGlyphCount - 1),\n  lookaheadGlyphCount:  r.uint16,\n  lookahead:            new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount:          r.uint16,\n  lookupRecords:        new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\n\nexport let ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context glyph substitution\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    chainCount:         r.uint16,\n    chainRuleSets:      new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  2: { // Class-based chaining context\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef:  new r.Pointer(r.uint16, ClassDef),\n    inputClassDef:      new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef:  new r.Pointer(r.uint16, ClassDef),\n    chainCount:         r.uint16,\n    chainClassSet:      new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  3: { // Coverage-based chaining context\n    backtrackGlyphCount:    r.uint16,\n    backtrackCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount:        r.uint16,\n    inputCoverage:          new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount:    r.uint16,\n    lookaheadCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount:            r.uint16,\n    lookupRecords:          new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n","import r from 'restructure';\nimport { ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device } from './opentype';\n\nlet BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate:   r.int16 // X or Y value, in design units\n  },\n\n  2: { // Design units plus contour point\n    coordinate:     r.int16,   // X or Y value, in design units\n    referenceGlyph: r.uint16,  // GlyphID of control glyph\n    baseCoordPoint: r.uint16   // Index of contour point on the referenceGlyph\n  },\n\n  3: { // Design units plus Device table\n    coordinate:   r.int16,                         // X or Y value, in design units\n    deviceTable:  new r.Pointer(r.uint16, Device)  // Device table for X or Y value\n  }\n});\n\nlet BaseValues = new r.Struct({\n  defaultIndex:   r.uint16,  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords:     new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\n\nlet FeatMinMaxRecord = new r.Struct({\n  tag:        new r.String(4),  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord:   new r.Pointer(r.uint16, BaseCoord, {type: 'parent'}), // May be NULL\n  maxCoord:   new r.Pointer(r.uint16, BaseCoord, {type: 'parent'})  // May be NULL\n});\n\nlet MinMax = new r.Struct({\n  minCoord:           new r.Pointer(r.uint16, BaseCoord),  // May be NULL\n  maxCoord:           new r.Pointer(r.uint16, BaseCoord),  // May be NULL\n  featMinMaxCount:    r.uint16,                            // May be 0\n  featMinMaxRecords:  new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n});\n\nlet BaseLangSysRecord = new r.Struct({\n  tag:    new r.String(4),  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {type: 'parent'})\n});\n\nlet BaseScript = new r.Struct({\n  baseValues:         new r.Pointer(r.uint16, BaseValues), // May be NULL\n  defaultMinMax:      new r.Pointer(r.uint16, MinMax),     // May be NULL\n  baseLangSysCount:   r.uint16,                            // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n});\n\nlet BaseScriptRecord = new r.Struct({\n  tag:      new r.String(4),  // 4-byte script identification tag\n  script:   new r.Pointer(r.uint16, BaseScript, {type: 'parent'})\n});\n\nlet BaseScriptList = new r.Array(BaseScriptRecord, r.uint16);\n\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nlet BaseTagList = new r.Array(new r.String(4), r.uint16);\n\nlet Axis = new r.Struct({\n  baseTagList:    new r.Pointer(r.uint16, BaseTagList),  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\n\nexport default new r.Struct({\n  version:      r.uint32,                        // Version of the BASE table-initially 0x00010000\n  horizAxis:    new r.Pointer(r.uint16, Axis),   // May be NULL\n  vertAxis:     new r.Pointer(r.uint16, Axis)    // May be NULL\n});\n","import r from 'restructure';\nimport { ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device } from './opentype';\n\nlet AttachPoint = new r.Array(r.uint16, r.uint16);\nlet AttachList = new r.Struct({\n  coverage:       new r.Pointer(r.uint16, Coverage),\n  glyphCount:     r.uint16,\n  attachPoints:   new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\n\nlet CaretValue = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate: r.int16\n  },\n\n  2: { // Contour point\n    caretValuePoint: r.uint16\n  },\n\n  3: { // Design units plus Device table\n    coordinate:     r.int16,\n    deviceTable:    new r.Pointer(r.uint16, Device)\n  }\n});\n\nlet LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\n\nlet LigCaretList = new r.Struct({\n  coverage:       new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount:  r.uint16,\n  ligGlyphs:      new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\n\nlet MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount:       r.uint16,\n  coverage:           new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\n\nexport default new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    glyphClassDef:      new r.Pointer(r.uint16, ClassDef),       // 1: base glyph, 2: ligature, 3: mark, 4: component\n    attachList:         new r.Pointer(r.uint16, AttachList),\n    ligCaretList:       new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n  0x00010002: {\n    glyphClassDef:      new r.Pointer(r.uint16, ClassDef),\n    attachList:         new r.Pointer(r.uint16, AttachList),\n    ligCaretList:       new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef),\n    markGlyphSetsDef:   new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  }\n});\n","import r from 'restructure';\nimport { ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device, Context, ChainingContext } from './opentype';\n\nlet ValueFormat = new r.Bitfield(r.uint16, [\n  'xPlacement', 'yPlacement',\n  'xAdvance', 'yAdvance',\n  'xPlaDevice', 'yPlaDevice',\n  'xAdvDevice', 'yAdvDevice'\n]);\n\nlet types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance:   r.int16,\n  yAdvance:   r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' })\n};\n\nclass ValueRecord {\n  constructor(key = 'valueFormat') {\n    this.key = key;\n  }\n\n  buildStruct(parent) {\n    let struct = parent;\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n\n    let fields = {};\n    fields.rel = () => struct._startOffset;\n\n    let format = struct[this.key];\n    for (let key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  }\n\n  size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  }\n\n  decode(stream, parent) {\n    let res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  }\n}\n\nlet PairValueRecord = new r.Struct({\n  secondGlyph:    r.uint16,\n  value1:         new ValueRecord('valueFormat1'),\n  value2:         new ValueRecord('valueFormat2')\n});\n\nlet PairSet = new r.Array(PairValueRecord, r.uint16);\n\nlet Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\n\nlet Anchor = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16\n  },\n\n  2: { // Design units plus contour point\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16,\n    anchorPoint:    r.uint16\n  },\n\n  3: { // Design units plus Device tables\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16,\n    xDeviceTable:   new r.Pointer(r.uint16, Device),\n    yDeviceTable:   new r.Pointer(r.uint16, Device)\n  }\n});\n\nlet EntryExitRecord = new r.Struct({\n  entryAnchor:    new r.Pointer(r.uint16, Anchor, {type: 'parent'}),\n  exitAnchor:     new r.Pointer(r.uint16, Anchor, {type: 'parent'})\n});\n\nlet MarkRecord = new r.Struct({\n  class:      r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {type: 'parent'})\n});\n\nlet MarkArray = new r.Array(MarkRecord, r.uint16);\n\nlet BaseRecord  = new r.Array(new r.Pointer(r.uint16, Anchor), t => t.parent.classCount);\nlet BaseArray   = new r.Array(BaseRecord, r.uint16);\n\nlet ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), t => t.parent.parent.classCount);\nlet LigatureAttach  = new r.Array(ComponentRecord, r.uint16);\nlet LigatureArray   = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\n\nlet GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, { // Single Adjustment\n    1: { // Single positioning value\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat:    ValueFormat,\n      value:          new ValueRecord()\n    },\n    2: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat:    ValueFormat,\n      valueCount:     r.uint16,\n      values:         new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n\n  2: new r.VersionedStruct(r.uint16, { // Pair Adjustment Positioning\n    1: { // Adjustments for glyph pairs\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat1:   ValueFormat,\n      valueFormat2:   ValueFormat,\n      pairSetCount:   r.uint16,\n      pairSets:       new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n\n    2: { // Class pair adjustment\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat1:   ValueFormat,\n      valueFormat2:   ValueFormat,\n      classDef1:      new r.Pointer(r.uint16, ClassDef),\n      classDef2:      new r.Pointer(r.uint16, ClassDef),\n      class1Count:    r.uint16,\n      class2Count:    r.uint16,\n      classRecords:   new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n\n  3: { // Cursive Attachment Positioning\n    format:             r.uint16,\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    entryExitCount:     r.uint16,\n    entryExitRecords:   new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n\n  4: { // MarkToBase Attachment Positioning\n    format:             r.uint16,\n    markCoverage:       new r.Pointer(r.uint16, Coverage),\n    baseCoverage:       new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    markArray:          new r.Pointer(r.uint16, MarkArray),\n    baseArray:          new r.Pointer(r.uint16, BaseArray)\n  },\n\n  5: { // MarkToLigature Attachment Positioning\n    format:             r.uint16,\n    markCoverage:       new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage:   new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    markArray:          new r.Pointer(r.uint16, MarkArray),\n    ligatureArray:      new r.Pointer(r.uint16, LigatureArray)\n  },\n\n  6: { // MarkToMark Attachment Positioning\n    format:             r.uint16,\n    mark1Coverage:      new r.Pointer(r.uint16, Coverage),\n    mark2Coverage:      new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    mark1Array:         new r.Pointer(r.uint16, MarkArray),\n    mark2Array:         new r.Pointer(r.uint16, BaseArray)\n  },\n\n  7: Context,          // Contextual positioning\n  8: ChainingContext,  // Chaining contextual positioning\n\n  9: { // Extension Positioning\n    posFormat:   r.uint16,\n    lookupType:  r.uint16,   // cannot also be 9\n    extension:   new r.Pointer(r.uint32, GPOSLookup)\n  }\n});\n\n// Fix circular reference\nGPOSLookup.versions[9].extension.type = GPOSLookup;\n\nexport default new r.Struct({\n  version:        r.int32,\n  scriptList:     new r.Pointer(r.uint16, ScriptList),\n  featureList:    new r.Pointer(r.uint16, FeatureList),\n  lookupList:     new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\n\n// export GPOSLookup for JSTF table\nexport { GPOSLookup };\n","import r from 'restructure';\nimport { ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device, Context, ChainingContext } from './opentype';\n\nlet Sequence = new r.Array(r.uint16, r.uint16);\nlet AlternateSet = Sequence;\n\nlet Ligature = new r.Struct({\n  glyph:      r.uint16,\n  compCount:  r.uint16,\n  components: new r.Array(r.uint16, t => t.compCount - 1)\n});\n\nlet LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\n\nlet GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {// Single Substitution\n    1: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID:   r.int16\n    },\n    2: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      glyphCount:     r.uint16,\n      substitute:     new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n\n  2: { // Multiple Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    sequences:      new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n\n  3: { // Alternate Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    alternateSet:   new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n\n  4: { // Ligature Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    ligatureSets:   new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n\n  5: Context,         // Contextual Substitution\n  6: ChainingContext, // Chaining Contextual Substitution\n\n  7: { // Extension Substitution\n    substFormat:   r.uint16,\n    lookupType:    r.uint16,   // cannot also be 7\n    extension:     new r.Pointer(r.uint32, GSUBLookup)\n  },\n\n  8: { // Reverse Chaining Contextual Single Substitution\n    substFormat:            r.uint16,\n    coverage:               new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount:    r.uint16,\n    lookaheadCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount:             r.uint16,\n    substitutes:            new r.Array(r.uint16, 'glyphCount')\n  }\n});\n\n// Fix circular reference\nGSUBLookup.versions[7].extension.type = GSUBLookup;\n\nexport default new r.Struct({\n  version:        r.int32,\n  scriptList:     new r.Pointer(r.uint16, ScriptList),\n  featureList:    new r.Pointer(r.uint16, FeatureList),\n  lookupList:     new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n});\n","import r from 'restructure';\nimport { ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device } from './opentype';\nimport { GPOSLookup } from './GPOS';\n\nlet JstfGSUBModList = new r.Array(r.uint16, r.uint16);\n\nlet JstfPriority = new r.Struct({\n  shrinkageEnableGSUB:    new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB:   new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS:    new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS:   new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax:       new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB:    new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB:   new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS:    new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS:   new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax:       new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\n\nlet JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\n\nlet JstfLangSysRecord = new r.Struct({\n  tag:         new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\n\nlet JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)), // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount:   r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\n\nlet JstfScriptRecord = new r.Struct({\n  tag:    new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {type: 'parent'})\n});\n\nexport default new r.Struct({\n  version:     r.uint32,  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList:  new r.Array(JstfScriptRecord, 'scriptCount')\n});\n","import r from 'restructure';\n\nlet Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\n\nlet SignatureBlock = new r.Struct({\n  reserved:       new r.Reserved(r.uint16, 2),\n  cbSignature:    r.uint32,  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature:      new r.Buffer('cbSignature')\n});\n\nexport default new r.Struct({\n  ulVersion:       r.uint32,  // Version number of the DSIG table (0x00000001)\n  usNumSigs:       r.uint16,  // Number of signatures in the table\n  usFlag:          r.uint16,  // Permission flags\n  signatures:      new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\n","import r from 'restructure';\n\nlet GaspRange = new r.Struct({\n  rangeMaxPPEM:       r.uint16,                  // Upper limit of range, in ppem\n  rangeGaspBehavior:  new r.Bitfield(r.uint16, [ // Flags describing desired rasterizer behavior\n    'grayscale', 'gridfit',\n    'symmetricSmoothing', 'symmetricGridfit'     // only in version 1, for ClearType\n  ])\n});\n\nexport default new r.Struct({\n  version:    r.uint16,  // set to 0\n  numRanges:  r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n});\n","import r from 'restructure';\n\nlet DeviceRecord = new r.Struct({\n  pixelSize:      r.uint8,\n  maximumWidth:   r.uint8,\n  widths:         new r.Array(r.uint8, t => t.parent.parent.maxp.numGlyphs)\n});\n\n// The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\nexport default new r.Struct({\n  version:            r.uint16,\n  numRecords:         r.int16,\n  sizeDeviceRecord:   r.int32,\n  records:            new r.Array(DeviceRecord, 'numRecords')\n});\n","import r from 'restructure';\n\nlet KernPair = new r.Struct({\n  left:   r.uint16,\n  right:  r.uint16,\n  value:  r.int16\n});\n\nlet ClassTable = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: t => t.offsets.length && Math.max.apply(Math, t.offsets)\n});\n\nlet Kern2Array = new r.Struct({\n  off: t => t._startOffset - t.parent.parent._startOffset,\n  len: t => (((t.parent.leftTable.max - t.off) / t.parent.rowWidth) + 1) * (t.parent.rowWidth / 2),\n  values: new r.LazyArray(r.int16, 'len')\n});\n\nlet KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs:         r.uint16,\n    searchRange:    r.uint16,\n    entrySelector:  r.uint16,\n    rangeShift:     r.uint16,\n    pairs:          new r.Array(KernPair, 'nPairs')\n  },\n\n  2: {\n    rowWidth:   r.uint16,\n    leftTable:  new r.Pointer(r.uint16, ClassTable, {type: 'parent'}),\n    rightTable: new r.Pointer(r.uint16, ClassTable, {type: 'parent'}),\n    array:      new r.Pointer(r.uint16, Kern2Array, {type: 'parent'})\n  },\n\n  3: {\n    glyphCount:       r.uint16,\n    kernValueCount:   r.uint8,\n    leftClassCount:   r.uint8,\n    rightClassCount:  r.uint8,\n    flags:            r.uint8,\n    kernValue:        new r.Array(r.int16, 'kernValueCount'),\n    leftClass:        new r.Array(r.uint8, 'glyphCount'),\n    rightClass:       new r.Array(r.uint8, 'glyphCount'),\n    kernIndex:        new r.Array(r.uint8, t => t.leftClassCount * t.rightClassCount)\n  }\n});\n\nlet KernTable = new r.VersionedStruct('version', {\n  0: { // Microsoft uses this format\n    subVersion: r.uint16,  // Microsoft has an extra sub-table version number\n    length:     r.uint16,  // Length of the subtable, in bytes\n    format:     r.uint8,   // Format of subtable\n    coverage:   new r.Bitfield(r.uint8, [\n      'horizontal',    // 1 if table has horizontal data, 0 if vertical\n      'minimum',       // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n      'crossStream',   // If set to 1, kerning is perpendicular to the flow of the text\n      'override'      // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable:   KernSubtable,\n    padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n  },\n  1: { // Apple uses this format\n    length:     r.uint32,\n    coverage:   new r.Bitfield(r.uint8, [\n      null, null, null, null, null,\n      'variation',     // Set if table has variation kerning values\n      'crossStream',   // Set if table has cross-stream kerning values\n      'vertical'      // Set if table has vertical kerning values\n    ]),\n    format:     r.uint8,\n    tupleIndex: r.uint16,\n    subtable:   KernSubtable,\n    padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n  }\n});\n\nexport default new r.VersionedStruct(r.uint16, {\n  0: { // Microsoft Version\n    nTables:    r.uint16,\n    tables:     new r.Array(KernTable, 'nTables')\n  },\n\n  1: { // Apple Version\n    reserved:   new r.Reserved(r.uint16), // the other half of the version number\n    nTables:    r.uint32,\n    tables:     new r.Array(KernTable, 'nTables')\n  }\n});\n","import r from 'restructure';\n\n// Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\nexport default new r.Struct({\n  version:    r.uint16,\n  numGlyphs:  r.uint16,\n  yPels:      new r.Array(r.uint8, 'numGlyphs')\n});\n","import r from 'restructure';\n\n// PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\nexport default new r.Struct({\n  version:              r.uint16,\n  fontNumber:           r.uint32,\n  pitch:                r.uint16,\n  xHeight:              r.uint16,\n  style:                r.uint16,\n  typeFamily:           r.uint16,\n  capHeight:            r.uint16,\n  symbolSet:            r.uint16,\n  typeface:             new r.String(16),\n  characterComplement:  new r.String(8),\n  fileName:             new r.String(6),\n  strokeWeight:         new r.String(1),\n  widthType:            new r.String(1),\n  serifStyle:           r.uint8,\n  reserved:             new r.Reserved(r.uint8)\n});\n","import r from 'restructure';\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\n\nlet Ratio = new r.Struct({\n  bCharSet:       r.uint8,                             // Character set\n  xRatio:         r.uint8,                             // Value to use for x-Ratio\n  yStartRatio:    r.uint8,                             // Starting y-Ratio value\n  yEndRatio:      r.uint8                              // Ending y-Ratio value\n});\n\nlet vTable = new r.Struct({\n  yPelHeight:     r.uint16,                            // yPelHeight to which values apply\n  yMax:           r.int16,                             // Maximum value (in pels) for this yPelHeight\n  yMin:           r.int16                              // Minimum value (in pels) for this yPelHeight\n});\n\nlet VdmxGroup = new r.Struct({\n  recs:           r.uint16,                            // Number of height records in this group\n  startsz:        r.uint8,                             // Starting yPelHeight\n  endsz:          r.uint8,                             // Ending yPelHeight\n  entries:        new r.Array(vTable, 'recs')          // The VDMX records\n});\n\nexport default new r.Struct({\n  version:        r.uint16,                            // Version number (0 or 1)\n  numRecs:        r.uint16,                            // Number of VDMX groups present\n  numRatios:      r.uint16,                            // Number of aspect ratio groupings\n  ratioRanges:    new r.Array(Ratio, 'numRatios'),     // Ratio ranges\n  offsets:        new r.Array(r.uint16, 'numRatios'),  // Offset to the VDMX group for this ratio range\n  groups:         new r.Array(VdmxGroup, 'numRecs')    // The actual VDMX groupings\n});\n","import r from 'restructure';\n\n// Vertical Header Table\nexport default new r.Struct({\n  version:                r.uint16,  // Version number of the Vertical Header Table\n  ascent:                 r.int16,   // The vertical typographic ascender for this font\n  descent:                r.int16,   // The vertical typographic descender for this font\n  lineGap:                r.int16,   // The vertical typographic line gap for this font\n  advanceHeightMax:       r.int16,   // The maximum advance height measurement found in the font\n  minTopSideBearing:      r.int16,   // The minimum top side bearing measurement found in the font\n  minBottomSideBearing:   r.int16,   // The minimum bottom side bearing measurement found in the font\n  yMaxExtent:             r.int16,\n  caretSlopeRise:         r.int16,   // Caret slope (rise/run)\n  caretSlopeRun:          r.int16,\n  caretOffset:            r.int16,   // Set value equal to 0 for nonslanted fonts\n  reserved:               new r.Reserved(r.int16, 4),\n  metricDataFormat:       r.int16,   // Set to 0\n  numberOfMetrics:        r.uint16   // Number of advance heights in the Vertical Metrics table\n});\n","import r from 'restructure';\n\nlet VmtxEntry = new r.Struct({\n  advance: r.uint16,  // The advance height of the glyph\n  bearing: r.int16    // The top sidebearing of the glyph\n});\n\n// Vertical Metrics Table\nexport default new r.Struct({\n  metrics:  new r.LazyArray(VmtxEntry, t => t.parent.vhea.numberOfMetrics),\n  bearings: new r.LazyArray(r.int16, t => t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics)\n});\n","import r from 'restructure';\n\nlet shortFrac = new r.Fixed(16, 'BE', 14);\n\nlet Correspondence = new r.Struct({\n  fromCoord: shortFrac,\n  toCoord: shortFrac\n});\n\nlet Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n","import r from 'restructure';\n\nclass UnboundedArrayAccessor {\n  constructor(type, stream, parent) {\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  getItem(index) {\n    if (this._items[index] == null) {\n      let pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  }\n\n  inspect() {\n    return `[UnboundedArray ${this.type.constructor.name}]`;\n  }\n}\n\nexport class UnboundedArray extends r.Array {\n  constructor(type) {\n    super(type, 0);\n  }\n\n  decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  }\n}\n\nexport let LookupTable = function(ValueType = r.uint16) {\n  // Helper class that makes internal structures invisible to pointers\n  class Shadow {\n    constructor(type) {\n      this.type = type;\n    }\n\n    decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    }\n\n    size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    }\n\n    encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    }\n  }\n\n  ValueType = new Shadow(ValueType);\n\n  let BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n\n  let LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n\n  let LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, t => t.lastGlyph - t.firstGlyph + 1), {type: 'parent'})\n  });\n\n  let LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, t => t.binarySearchHeader.nUnits)\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, t => t.binarySearchHeader.nUnits)\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, t => t.binarySearchHeader.nUnits)\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nexport function StateTable(entryData = {}, lookupType = r.uint16) {\n  let entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n\n  let Entry = new r.Struct(entry);\n  let StateArray = new UnboundedArray(new r.Array(r.uint16, t => t.nClasses));\n\n  let StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n\n  return StateHeader;\n}\n\n// This is the old version of the StateTable structure\nexport function StateTable1(entryData = {}, lookupType = r.uint16) {\n  let ClassLookupTable = new r.Struct({\n    version() { return 8; }, // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n\n  let entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: t => (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses,\n    flags: r.uint16\n  }, entryData);\n\n  let Entry = new r.Struct(entry);\n  let StateArray = new UnboundedArray(new r.Array(r.uint8, t => t.nClasses));\n\n  let StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n\n  return StateHeader1;\n}\n","import r from 'restructure';\nimport { LookupTable } from './aat';\n\nlet BslnSubtable = new r.VersionedStruct('format', {\n  0: { // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n\n  1: { // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n\n  2: { // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n\n  3: { // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\n","import r from 'restructure';\n\nlet Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: t => t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\n\nlet FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), { type: 'parent' }),\n  featureFlags: new r.Bitfield(r.uint8, [\n    null, null, null, null, null, null,\n    'hasDefault', 'exclusive'\n  ]),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\n","import r from 'restructure';\n\nlet Axis = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameID]\n});\n\nlet Instance = new r.Struct({\n  nameID: r.uint16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameID],\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, t => t.parent.axisCount)\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\n","import r from 'restructure';\n\nlet shortFrac = new r.Fixed(16, 'BE', 14);\nclass Offset {\n  static decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags \n      ? stream.readUInt32BE()\n      : stream.readUInt16BE() * 2;\n  }\n}\n\nlet gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', { relativeTo: 'offsetToData', allowNull: false }), t => t.glyphCount + 1)\n});\n\nexport default gvar;\n","import r from 'restructure';\nimport { LookupTable, StateTable1 } from './aat';\n\nlet ClassTable = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1\n});\n\nlet WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\n\nlet WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\n\nlet ActionData = new r.VersionedStruct('actionType', {\n  0: { // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n\n  1: { // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n\n  2: { // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n\n  3: {}, // Stretch glyph action (no data, not supported by CoreText)\n\n  4: { // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n\n  5: { // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\n\nlet Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, t => t.actionLength - t._currentOffset)\n});\n\nlet PostcompensationAction = new r.Array(Action, r.uint32);\nlet PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\n\nlet JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable, { type: 'parent' }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, { type: 'parent' }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, { type: 'parent', relativeTo: 'wdcOffset' }))\n});\n\nexport default new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\n","import r from 'restructure';\nimport { UnboundedArray, LookupTable, StateTable } from './aat';\n\nlet LigatureData = {\n  action: r.uint16\n};\n\nlet ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\n\nlet InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\n\nlet SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable))\n});\n\nlet SubtableData = new r.VersionedStruct('type', {\n  0: { // Indic Rearrangement Subtable\n    stateTable: new StateTable\n  },\n\n  1: { // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n\n  2: { // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n\n  4: { // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable\n  },\n\n  5: { // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\n\nlet Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n});\n\nlet FeatureEntry = new r.Struct({\n  featureType:    r.uint16,\n  featureSetting: r.uint16,\n  enableFlags:    r.uint32,\n  disableFlags:   r.uint32\n});\n\nlet MorxChain = new r.Struct({\n  defaultFlags:     r.uint32,\n  chainLength:      r.uint32,\n  nFeatureEntries:  r.uint32,\n  nSubtables:       r.uint32,\n  features:         new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables:        new r.Array(Subtable, 'nSubtables')\n});\n\nexport default new r.Struct({\n  version:  r.uint16,\n  unused:   new r.Reserved(r.uint16),\n  nChains:  r.uint32,\n  chains:   new r.Array(MorxChain, 'nChains')\n});\n","import r from 'restructure';\nimport { LookupTable } from './aat';\n\nlet OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\n","let tables = {};\nexport default tables;\n\n// Required Tables\nimport cmap from './cmap';\nimport head from './head';\nimport hhea from './hhea';\nimport hmtx from './hmtx';\nimport maxp from './maxp';\nimport name from './name';\nimport OS2 from './OS2';\nimport post from './post';\n\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = name;\ntables['OS/2'] = OS2;\ntables.post = post;\n\n\n// TrueType Outlines\nimport cvt from './cvt';\nimport fpgm from './fpgm';\nimport loca from './loca';\nimport prep from './prep';\nimport glyf from './glyf';\n\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf;\n\n\n// PostScript Outlines\nimport CFFFont from '../cff/CFFFont';\nimport VORG from './VORG';\n\ntables['CFF '] = CFFFont;\ntables.VORG = VORG;\n\n\n// Bitmap Glyphs\nimport EBLC from './EBLC';\nimport sbix from './sbix';\nimport COLR from './COLR';\nimport CPAL from './CPAL';\n\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL;\n\n\n// Advanced OpenType Tables\nimport BASE from './BASE';\nimport GDEF from './GDEF';\nimport GPOS from './GPOS';\nimport GSUB from './GSUB';\nimport JSTF from './JSTF';\n\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF;\n\n\n// Other OpenType Tables\nimport DSIG from './DSIG';\nimport gasp from './gasp';\nimport hdmx from './hdmx';\nimport kern from './kern';\nimport LTSH from './LTSH';\nimport PCLT from './PCLT';\nimport VDMX from './VDMX';\nimport vhea from './vhea';\nimport vmtx from './vmtx';\n\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx;\n\n\n// Apple Advanced Typography Tables\nimport avar from './avar';\nimport bsln from './bsln';\nimport feat from './feat';\nimport fvar from './fvar';\nimport gvar from './gvar';\nimport just from './just';\nimport morx from './morx';\nimport opbd from './opbd';\n\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n","import r from 'restructure';\nimport Tables from './';\n\nlet TableEntry = new r.Struct({\n  tag:        new r.String(4),\n  checkSum:   r.uint32,\n  offset:     new r.Pointer(r.uint32, 'void', { type: 'global' }),\n  length:     r.uint32\n});\n\nlet Directory = new r.Struct({\n  tag:            new r.String(4),\n  numTables:      r.uint16,\n  searchRange:    r.uint16,\n  entrySelector:  r.uint16,\n  rangeShift:     r.uint16,\n  tables:         new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function() {\n  let tables = {};\n  for (let table of this.tables) {\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nDirectory.preEncode = function(stream) {\n  let tables = [];\n  for (let tag in this.tables) {\n    let table = this.tables[tag];\n    if (table) {\n      tables.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(Tables[tag], table),\n        length: Tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables.length;\n  this.tables = tables;\n\n  this.searchRange = Math.floor(Math.log(this.numTables) / Math.LN2) * 16;\n  this.entrySelector = Math.floor(this.searchRange / Math.LN2);\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nexport default Directory;\n","export function binarySearch(arr, cmp) {\n  let min = 0;\n  let max = arr.length - 1;\n  while (min <= max) {\n    let mid = (min + max) >> 1;\n    let res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nexport function range(index, end) {\n  let range = [];\n  while (index < end) {\n    range.push(index++);\n  }\n  return range;\n}\n","import {binarySearch} from './utils';\nimport {getEncoding} from './encodings';\nimport {cache} from './decorators';\nimport {range} from './utils';\n\n// iconv-lite is an optional dependency.\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\n\nexport default class CmapProcessor {\n  constructor(cmapTable) {\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [\n      // 32-bit subtables\n      [3, 10],\n      [0, 6],\n      [0, 4],\n\n      // 16-bit subtables\n      [3, 1],\n      [0, 3],\n      [0, 2],\n      [0, 1],\n      [0, 0],\n      [3, 0]\n    ]);\n\n    // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n    if (!this.cmap && iconv) {\n      for (let cmap of cmapTable.tables) {\n        let encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  findSubtable(cmapTable, pairs) {\n    for (let [platformID, encodingID] of pairs) {\n      for (let cmap of cmapTable.tables) {\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      let buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n      for (let i = 0; i < buf.length; i++) {\n        codepoint = (codepoint << 8) | buf[i];\n      }\n\n    // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n    } else if (variationSelector) {\n      let gid = this.getVariationSelector(codepoint, variationSelector);\n      if (gid) {\n        return gid;\n      }\n    }\n\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4: {\n        let min = 0;\n        let max = cmap.segCount - 1;\n        while (min <= max) {\n          let mid = (min + max) >> 1;\n\n          if (codepoint < cmap.startCode.get(mid)) {\n            max = mid - 1;\n          } else if (codepoint > cmap.endCode.get(mid)) {\n            min = mid + 1;\n          } else {\n            let rangeOffset = cmap.idRangeOffset.get(mid);\n            let gid;\n\n            if (rangeOffset === 0) {\n              gid = codepoint + cmap.idDelta.get(mid);\n            } else {\n              let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n              gid = cmap.glyphIndexArray.get(index) || 0;\n              if (gid !== 0) {\n                gid += cmap.idDelta.get(mid);\n              }\n            }\n\n            return gid & 0xffff;\n          }\n        }\n\n        return 0;\n      }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13: {\n        let min = 0;\n        let max = cmap.nGroups - 1;\n        while (min <= max) {\n          let mid = (min + max) >> 1;\n          let group = cmap.groups.get(mid);\n\n          if (codepoint < group.startCharCode) {\n            max = mid - 1;\n          } else if (codepoint > group.endCharCode) {\n            min = mid + 1;\n          } else {\n            if (cmap.version === 12) {\n              return group.glyphID + (codepoint - group.startCharCode);\n            } else {\n              return group.glyphID;\n            }\n          }\n        }\n\n        return 0;\n      }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    let selectors = this.uvs.varSelectors.toArray();\n    let i = binarySearch(selectors, x => variationSelector - x.varSelector);\n    let sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, x =>\n        codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0\n      );\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, x => codepoint - x.unicodeValue);\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  }\n\n  @cache\n  getCharacterSet() {\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4: {\n        let res = [];\n        let endCodes = cmap.endCode.toArray();\n        for (let i = 0; i < endCodes.length; i++) {\n          let tail = endCodes[i] + 1;\n          let start = cmap.startCode.get(i);\n          res.push(...range(start, tail));\n        }\n\n        return res;\n      }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          res.push(...range(group.startCharCode, group.endCharCode + 1));\n        }\n\n        return res;\n      }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  @cache\n  codePointsForGlyph(gid) {\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0: {\n        let res = [];\n        for (let i = 0; i < 256; i++) {\n          if (cmap.codeMap.get(i) === gid) {\n            res.push(i);\n          }\n        }\n\n        return res;\n      }\n\n      case 4: {\n        let res = [];\n        for (let i = 0; i < cmap.segCount; i++) {\n          let end = cmap.endCode.get(i);\n          let start = cmap.startCode.get(i);\n          let rangeOffset = cmap.idRangeOffset.get(i);\n          let delta = cmap.idDelta.get(i);\n\n          for (var c = start; c <= end; c++) {\n            let g = 0;\n            if (rangeOffset === 0) {\n              g = c + delta;\n            } else {\n              let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);\n              g = cmap.glyphIndexArray.get(index) || 0;\n              if (g !== 0) {\n                g += delta;\n              }\n            }\n\n            if (g === gid) {\n              res.push(c);\n            }\n          }\n        }\n\n        return res;\n      }\n\n      case 12: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n            res.push(group.startCharCode + (gid - group.glyphID));\n          }\n        }\n\n        return res;\n      }\n\n      case 13: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          if (gid === group.glyphID) {\n            res.push(...range(group.startCharCode, group.endCharCode + 1));\n          }\n        }\n\n        return res;\n      }\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n}\n","import {binarySearch} from '../utils';\n\nexport default class KernProcessor {\n  constructor(font) {\n    this.kern = font.kern;\n  }\n\n  process(glyphs, positions) {\n    for (let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      let left = glyphs[glyphIndex].id;\n      let right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  }\n\n  getKerning(left, right) {\n    let res = 0;\n\n    for (let table of this.kern.tables) {\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n        default:\n          throw new Error(`Unsupported kerning table version ${table.version}`);\n      }\n\n      let val = 0;\n      let s = table.subtable;\n      switch (table.format) {\n        case 0:\n          let pairIdx = binarySearch(s.pairs, function (pair) {\n            return (left - pair.left) || (right - pair.right);\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          let leftOffset = 0, rightOffset = 0;\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          let index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error(`Unsupported kerning sub-table format ${table.format}`);\n      }\n\n      // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  }\n}\n","import unicode from 'unicode-properties';\n\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\nexport default class UnicodeLayoutEngine {\n  constructor(font) {\n    this.font = font;\n  }\n\n  positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    let clusterStart = 0;\n    let clusterEnd = 0;\n    for (let index = 0; index < glyphs.length; index++) {\n      let glyph = glyphs[index];\n      if (glyph.isMark) { // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  }\n\n  positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    let base = glyphs[clusterStart];\n    let baseBox = base.cbox.copy();\n\n    // adjust bounding box for ligature glyphs\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += ((base.codePoints.length - 1) * baseBox.width) / base.codePoints.length;\n    }\n\n    let xOffset = -positions[clusterStart].xAdvance;\n    let yOffset = 0;\n    let yGap = this.font.unitsPerEm / 16;\n\n    // position each of the mark glyphs relative to the base glyph\n    for (let index = clusterStart + 1; index <= clusterEnd; index++) {\n      let mark = glyphs[index];\n      let markBox = mark.cbox;\n      let position = positions[index];\n\n      let combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0;\n\n        // x positioning\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default: // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        }\n\n        // y positioning\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  }\n\n  getCombiningClass(codePoint) {\n    let combiningClass = unicode.getCombiningClass(codePoint);\n\n    // Thai / Lao need some per-character work\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) { // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n\n      case 'CCC10': // sheva\n      case 'CCC11': // hataf segol\n      case 'CCC12': // hataf patah\n      case 'CCC13': // hataf qamats\n      case 'CCC14': // hiriq\n      case 'CCC15': // tsere\n      case 'CCC16': // segol\n      case 'CCC17': // patah\n      case 'CCC18': // qamats\n      case 'CCC20': // qubuts\n      case 'CCC22': // meteg\n        return 'Below';\n\n      case 'CCC23': // rafe\n        return 'Attached_Above';\n\n      case 'CCC24': // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n      case 'CCC19': // holam\n        return 'Above_Left';\n\n      case 'CCC26': // point varika\n        return 'Above';\n\n      case 'CCC21': // dagesh\n        break;\n\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n      case 'CCC28': // dammatan\n      case 'CCC30': // fatha\n      case 'CCC31': // damma\n      case 'CCC33': // shadda\n      case 'CCC34': // sukun\n      case 'CCC35': // superscript alef\n      case 'CCC36': // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n      case 'CCC32': // kasra\n        return 'Below';\n\n      // Thai\n\n      case 'CCC103': // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107': // mai\n        return 'Above_Right';\n\n      // Lao\n\n      case 'CCC118': // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122': // mai\n        return 'Above';\n\n      // Tibetan\n\n      case 'CCC129': // sign aa\n      case 'CCC132': // sign u\n        return 'Below';\n\n      case 'CCC130': // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  }\n}\n","/**\n * Represents a glyph bounding box\n */\nexport default class BBox {\n  constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity) {\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n  get width() {\n    return this.maxX - this.minX;\n  }\n\n  /**\n   * The height of the bounding box\n   * @type {number}\n   */\n  get height() {\n    return this.maxY - this.minY;\n  }\n\n  addPoint(x, y) {\n    if (x < this.minX) {\n      this.minX = x;\n    }\n\n    if (y < this.minY) {\n      this.minY = y;\n    }\n\n    if (x > this.maxX) {\n      this.maxX = x;\n    }\n\n    if (y > this.maxY) {\n      this.maxY = y;\n    }\n  }\n\n  copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  }\n}\n","import BBox from '../glyph/BBox';\n\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\nexport default class GlyphRun {\n  constructor(glyphs, positions) {\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n    this.positions = positions;\n  }\n\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n  get advanceWidth() {\n    let width = 0;\n    for (let position of this.positions) {\n      width += position.xAdvance;\n    }\n\n    return width;\n  }\n\n /**\n  * The total advance height of the run.\n  * @type {number}\n  */\n  get advanceHeight() {\n    let height = 0;\n    for (let position of this.positions) {\n      height += position.yAdvance;\n    }\n\n    return height;\n  }\n\n /**\n  * The bounding box containing all glyphs in the run.\n  * @type {BBox}\n  */\n  get bbox() {\n    let bbox = new BBox;\n\n    let x = 0;\n    let y = 0;\n    for (let index = 0; index < this.glyphs.length; index++) {\n      let glyph = this.glyphs[index];\n      let p = this.positions[index];\n      let b = glyph.bbox;\n\n      bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n      bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n\n      x += p.xAdvance;\n      y += p.yAdvance;\n    }\n\n    return bbox;\n  }\n}\n","/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\nexport default class GlyphPosition {\n  constructor(xAdvance = 0, yAdvance = 0, xOffset = 0, yOffset = 0) {\n    /**\n     * The amount to move the virtual pen in the X direction after rendering this glyph.\n     * @type {number}\n     */\n    this.xAdvance = xAdvance;\n\n    /**\n     * The amount to move the virtual pen in the Y direction after rendering this glyph.\n     * @type {number}\n     */\n    this.yAdvance = yAdvance;\n\n    /**\n     * The offset from the pen position in the X direction at which to render this glyph.\n     * @type {number}\n     */\n    this.xOffset = xOffset;\n\n    /**\n     * The offset from the pen position in the Y direction at which to render this glyph.\n     * @type {number}\n     */\n    this.yOffset = yOffset;\n  }\n}\n","import unicode from 'unicode-properties';\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nconst UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: 'orya',\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: 'taml',\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\n\nexport function fromUnicode(script) {\n  return UNICODE_SCRIPTS[script];\n}\n\nexport function forString(string) {\n  let len = string.length;\n  let idx = 0;\n  while (idx < len) {\n    let code = string.charCodeAt(idx++);\n\n    // Check if this is a high surrogate\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      let next = string.charCodeAt(idx);\n\n      // Check if this is a low surrogate\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    let script = unicode.getScript(code);\n    if (script !== 'Common' && script !== 'Inherited' && script !== 'Unknown') {\n      return UNICODE_SCRIPTS[script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\nexport function forCodePoints(codePoints) {\n  for (let i = 0; i < codePoints.length; i++) {\n    let codePoint = codePoints[i];\n    let script = unicode.getScript(codePoint);\n    if (script !== 'Common' && script !== 'Inherited' && script !== 'Unknown') {\n      return UNICODE_SCRIPTS[script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\n// The scripts in this map are written from right to left\nconst RTL = {\n  arab: true,   // Arabic\n  hebr: true,   // Hebrew\n  syrc: true,   // Syriac\n  thaa: true,   // Thaana\n  cprt: true,   // Cypriot Syllabary\n  khar: true,   // Kharosthi\n  phnx: true,   // Phoenician\n  'nko ': true, // N'Ko\n  lydi: true,   // Lydian\n  avst: true,   // Avestan\n  armi: true,   // Imperial Aramaic\n  phli: true,   // Inscriptional Pahlavi\n  prti: true,   // Inscriptional Parthian\n  sarb: true,   // Old South Arabian\n  orkh: true,   // Old Turkic, Orkhon Runic\n  samr: true,   // Samaritan\n  mand: true,   // Mandaic, Mandaean\n  merc: true,   // Meroitic Cursive\n  mero: true,   // Meroitic Hieroglyphs\n\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,   // Manichaean\n  mend: true,   // Mende Kikakui\n  nbat: true,   // Nabataean\n  narb: true,   // Old North Arabian\n  palm: true,   // Palmyrene\n  phlp: true    // Psalter Pahlavi\n};\n\nexport function direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n","// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nconst features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n    // upperAndLowerCase: 0          # deprecated\n    // allCaps: 1                    # deprecated\n    // allLowerCase: 2               # deprecated\n    // smallCaps: 3                  # deprecated\n    // initialCaps: 4                # deprecated\n    // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n    // formInterrobang: 6\n    // smartQuotes: 8\n    // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n    // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n    // hanjaToHangul: 1\n    // hiraganaToKatakana: 2\n    // katakanaToHiragana: 3\n    // kanaToRomanization: 4\n    // romanizationToHiragana: 5\n    // romanizationToKatakana: 6\n    // hanjaToHangulAltOne: 7\n    // hanjaToHangulAltTwo: 8\n    // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: { // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nconst feature = (name, selector) => [features[name].code, features[name][selector]];\n\nconst OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'), // ??\n\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'), // ??\n  numr: feature('fractions', 'diagonalFractions'), // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'), // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'), // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'), // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'), // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n\n  init: feature('smartSwash', 'wordInitialSwashes'), // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'), // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'), // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'), // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'), // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'), // ??\n\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'), // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n\n  calt: feature('contextualAlternates', 'contextualAlternates'), // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'), // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'), // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'), // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'), //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n};\n\n  // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n\n// Add cv01-cv99 features\nfor (let i = 1; i <= 99; i++) {\n  OTMapping[`cv${`00${i}`.slice(-2)}`] = [features.characterAlternatives.code, i];\n}\n\n// create inverse mapping\nlet AATMapping = {};\nfor (let ot in OTMapping) {\n  let aat = OTMapping[ot];\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n}\n\n// Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\nexport function mapOTToAAT(features) {\n  let res = {};\n  for (let k = 0; k < features.length; k++) {\n    let r;\n    if (r = OTMapping[features[k]]) {\n      if (res[r[0]] == null) {\n        res[r[0]] = {};\n      }\n\n      res[r[0]][r[1]] = true;\n    }\n  }\n\n  return res;\n}\n\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction mapFeatureStrings(f) {\n  let [type, setting] = f;\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n}\n\n// Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\nexport function mapAATToOT(features) {\n  let res = {};\n  if (Array.isArray(features)) {\n    for (let k = 0; k < features.length; k++) {\n      let r;\n      let f = mapFeatureStrings(features[k]);\n      if (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r] = true;\n      }\n    }\n\n  } else if (typeof features === 'object') {\n    for (let type in features) {\n      let feature = features[type];\n      for (let setting in feature) {\n        let r;\n        let f = mapFeatureStrings([type, setting]);\n        if (feature[setting] && (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]])) {\n          res[r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n","import {cache} from '../decorators';\nimport {range} from '../utils';\n\nexport default class AATLookupTable {\n  constructor(table) {\n    this.table = table;\n  }\n\n  lookup(glyph) {\n    switch (this.table.version) {\n      case 0: // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n      case 4: {\n        let min = 0;\n        let max = this.table.binarySearchHeader.nUnits - 1;\n\n        while (min <= max) {\n          var mid = (min + max) >> 1;\n          var seg = this.table.segments[mid];\n\n          // special end of search value\n          if (seg.firstGlyph === 0xffff) {\n            return null;\n          }\n\n          if (glyph < seg.firstGlyph) {\n            max = mid - 1;\n          } else if (glyph > seg.lastGlyph) {\n            min = mid + 1;\n          } else {\n            if (this.table.version === 2) {\n              return seg.value;\n            } else {\n              return seg.values[glyph - seg.firstGlyph];\n            }\n          }\n        }\n\n        return null;\n      }\n\n      case 6: { // lookup single\n        let min = 0;\n        let max = this.table.binarySearchHeader.nUnits - 1;\n\n        while (min <= max) {\n          var mid = (min + max) >> 1;\n          var seg = this.table.segments[mid];\n\n          // special end of search value\n          if (seg.glyph === 0xffff) {\n            return null;\n          }\n\n          if (glyph < seg.glyph) {\n            max = mid - 1;\n          } else if (glyph > seg.glyph) {\n            min = mid + 1;\n          } else {\n            return seg.value;\n          }\n        }\n\n        return null;\n      }\n\n      case 8: // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error(`Unknown lookup table format: ${this.table.version}`);\n    }\n  }\n\n  @cache\n  glyphsForValue(classValue) {\n    let res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n      case 4: {\n        for (let segment of this.table.segments) {\n          if ((this.table.version === 2 && segment.value === classValue)) {\n            res.push(...range(segment.firstGlyph, segment.lastGlyph + 1));\n          } else {\n            for (let index = 0; index < segment.values.length; index++) {\n              if (segment.values[index] === classValue) {\n                res.push(segment.firstGlyph + index);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 6: { // lookup single\n        for (let segment of this.table.segments) {\n          if (segment.value === classValue) {\n            res.push(segment.glyph);\n          }\n        }\n\n        break;\n      }\n\n      case 8: { // lookup trimmed\n        for (let i = 0; i < this.table.values.length; i++) {\n          if (this.table.values[i] === classValue) {\n            res.push(this.table.firstGlyph + i);\n          }\n        }\n\n        break;\n      }\n\n      default:\n        throw new Error(`Unknown lookup table format: ${this.table.version}`);\n    }\n\n    return res;\n  }\n}\n","import AATLookupTable from './AATLookupTable';\n\nconst START_OF_TEXT_STATE = 0;\nconst START_OF_LINE_STATE = 1;\n\nconst END_OF_TEXT_CLASS = 0;\nconst OUT_OF_BOUNDS_CLASS = 1;\nconst DELETED_GLYPH_CLASS = 2;\nconst END_OF_LINE_CLASS = 3;\n\nconst DONT_ADVANCE = 0x4000;\n\nexport default class AATStateMachine {\n  constructor(stateTable) {\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  process(glyphs, reverse, processEntry) {\n    let currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n    let index = reverse ? glyphs.length - 1 : 0;\n    let dir = reverse ? -1 : 1;\n\n    while ((dir === 1 && index <= glyphs.length) || (dir === -1 && index >= -1)) {\n      let glyph = null;\n      let classCode = OUT_OF_BOUNDS_CLASS;\n      let shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n        if (glyph.id === 0xffff) { // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      let row = this.stateTable.stateArray.getItem(currentState);\n      let entryIndex = row[classCode];\n      let entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !==  DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  }\n\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n  traverse(opts, state = 0, visited = new Set) {\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n\n    let {nClasses, stateArray, entryTable} = this.stateTable;\n    let row = stateArray.getItem(state);\n\n    // Skip predefined classes\n    for (let classCode = 4; classCode < nClasses; classCode++) {\n      let entryIndex = row[classCode];\n      let entry = entryTable.getItem(entryIndex);\n\n      // Try all glyphs in the class\n      for (let glyph of this.lookupTable.glyphsForValue(classCode)) {\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  }\n}\n","import AATStateMachine from './AATStateMachine';\nimport AATLookupTable from './AATLookupTable';\nimport {cache} from '../decorators';\n\n// indic replacement flags\nconst MARK_FIRST = 0x8000;\nconst MARK_LAST  = 0x2000;\nconst VERB       = 0x000F;\n\n// contextual substitution and glyph insertion flag\nconst SET_MARK = 0x8000;\n\n// ligature entry flags\nconst SET_COMPONENT  = 0x8000;\nconst PERFORM_ACTION = 0x2000;\n\n// ligature action masks\nconst LAST_MASK   = 0x80000000;\nconst STORE_MASK  = 0x40000000;\nconst OFFSET_MASK = 0x3FFFFFFF;\n\nconst VERTICAL_ONLY           = 0x800000;\nconst REVERSE_DIRECTION       = 0x400000;\nconst HORIZONTAL_AND_VERTICAL = 0x200000;\n\n// glyph insertion flags\nconst CURRENT_IS_KASHIDA_LIKE = 0x2000;\nconst MARKED_IS_KASHIDA_LIKE  = 0x1000;\nconst CURRENT_INSERT_BEFORE   = 0x0800;\nconst MARKED_INSERT_BEFORE    = 0x0400;\nconst CURRENT_INSERT_COUNT    = 0x03E0;\nconst MARKED_INSERT_COUNT     = 0x001F;\n\nexport default class AATMorxProcessor {\n  constructor(font) {\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  }\n\n  // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:true}}\n  process(glyphs, features = {}) {\n    for (let chain of this.morx.chains) {\n      let flags = chain.defaultFlags;\n\n      // enable/disable the requested features\n      for (let feature of chain.features) {\n        let f;\n        if ((f = features[feature.featureType]) && f[feature.featureSetting]) {\n          flags &= feature.disableFlags;\n          flags |= feature.enableFlags;\n        }\n      }\n\n      for (let subtable of chain.subtables) {\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    }\n\n    // remove deleted glyphs\n    let index = glyphs.length - 1;\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  }\n\n  processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n\n    let stateMachine = this.getStateMachine(subtable);\n    let process = this.getProcessor();\n\n    let reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  }\n\n  @cache\n  getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  }\n\n  getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n      case 1:\n        return this.processContextualSubstitution;\n      case 2:\n        return this.processLigature;\n      case 4:\n        return this.processNoncontextualSubstitutions;\n      case 5:\n        return this.processGlyphInsertion;\n      default:\n        throw new Error(`Invalid morx subtable type: ${this.subtable.type}`);\n    }\n  }\n\n  processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  }\n\n  processContextualSubstitution(glyph, entry, index) {\n    let subsitutions = this.subtable.table.substitutionTable.items;\n    if (entry.markIndex !== 0xffff) {\n      let lookup = subsitutions.getItem(entry.markIndex);\n      let lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      let lookup = subsitutions.getItem(entry.currentIndex);\n      let lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[index];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  }\n\n  processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      let actions = this.subtable.table.ligatureActions;\n      let components = this.subtable.table.components;\n      let ligatureList = this.subtable.table.ligatureList;\n\n      let actionIndex = entry.action;\n      let last = false;\n      let ligatureIndex = 0;\n      let codePoints = [];\n      let ligatureGlyphs = [];\n\n      while (!last) {\n        let componentGlyph = this.ligatureStack.pop();\n        codePoints.unshift(...this.glyphs[componentGlyph].codePoints);\n\n        let action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        let store = !!(action & STORE_MASK);\n        let offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n        offset += this.glyphs[componentGlyph].id;\n\n        let component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          let ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      }\n\n      // Put ligature glyph indexes back on the stack\n      this.ligatureStack.push(...ligatureGlyphs);\n    }\n  }\n\n  processNoncontextualSubstitutions(subtable, glyphs, index) {\n    let lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      let glyph = glyphs[index];\n      if (glyph.id !== 0xffff) {\n        let gid = lookupTable.lookup(glyph.id);\n        if (gid) { // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  }\n\n  _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    let insertions = [];\n    while (count--) {\n      let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    this.glyphs.splice(glyphIndex, 0, ...insertions);\n  }\n\n  processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      let count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      let isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      let count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n      let isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n      this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);\n    }\n  }\n\n  getSupportedFeatures() {\n    let features = [];\n    for (let chain of this.morx.chains) {\n      for (let feature of chain.features) {\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  }\n\n  generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  }\n\n  generateInputCache() {\n    this.inputCache = {};\n\n    for (let chain of this.morx.chains) {\n      let flags = chain.defaultFlags;\n\n      for (let subtable of chain.subtables) {\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  }\n\n  generateInputsForSubtable(subtable) {\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    let reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n\n    let stateMachine = this.getStateMachine(subtable);\n    let process = this.getProcessor();\n\n    let input = [];\n    let stack = [];\n    this.glyphs = [];\n\n    stateMachine.traverse({\n      enter: (glyph, entry) => {\n        let glyphs = this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: this.ligatureStack.slice()\n        });\n\n        // Add glyph to input and glyphs to process.\n        let g = this.font.getGlyph(glyph);\n        input.push(g);\n        glyphs.push(input[input.length - 1]);\n\n        // Process ligature substitution\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n\n        // Add input to result if only one matching (non-deleted) glyph remains.\n        let count = 0;\n        let found = 0;\n        for (let i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          let result = input.map(g => g.id);\n          let cache = this.inputCache[found];\n          if (cache) {\n            cache.push(result);\n          } else {\n            this.inputCache[found] = [result];\n          }\n        }\n      },\n\n      exit: () => {\n        ({glyphs: this.glyphs, ligatureStack: this.ligatureStack} = stack.pop());\n        input.pop();\n      }\n    });\n  }\n}\n\n// swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\nfunction swap(glyphs, rangeA, rangeB, reverseA = false, reverseB = false) {\n  let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n  if (reverseB) {\n    end.reverse();\n  }\n\n  let start = glyphs.splice(rangeA[0], rangeA[1], ...end);\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  let length = lastGlyph - firstGlyph + 1;\n  switch (verb) {\n    case 0: // no change\n      return glyphs;\n\n    case 1: // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2: // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3: // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4: // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5: // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6: // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7: // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8: // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9: // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10: // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11: // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12: // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13: // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14: // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15: // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error(`Unknown verb: ${verb}`);\n  }\n}\n","import * as AATFeatureMap from './AATFeatureMap';\nimport * as Script from '../layout/Script';\nimport AATMorxProcessor from './AATMorxProcessor';\n\nexport default class AATLayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n  }\n\n  substitute(glyphs, features, script, language) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    let isRTL = Script.direction(script) === 'rtl';\n    if (isRTL) {\n      glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphs, AATFeatureMap.mapOTToAAT(features));\n    return glyphs;\n  }\n\n  getAvailableFeatures(script, language) {\n    return AATFeatureMap.mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  }\n\n  stringsForGlyph(gid) {\n    let glyphStrings = this.morxProcessor.generateInputs(gid);\n    let result = new Set;\n\n    for (let glyphs of glyphStrings) {\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  }\n\n  _addStrings(glyphs, index, strings, string) {\n    let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (let codePoint of codePoints) {\n      let s = string + String.fromCodePoint(codePoint);\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  }\n}\n","import * as Script from '../layout/Script';\n\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\nexport default class ShapingPlan {\n  constructor(font, script, language) {\n    this.font = font;\n    this.script = script;\n    this.language = language;\n    this.direction = Script.direction(script);\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n  _addFeatures(features) {\n    let stage = this.stages[this.stages.length - 1];\n    for (let feature of features) {\n      if (!this.allFeatures[feature]) {\n        stage.push(feature);\n        this.allFeatures[feature] = true;\n      }\n    }\n  }\n\n  /**\n   * Adds the given features to the global list\n   */\n  _addGlobal(features) {\n    for (let feature of features) {\n      this.globalFeatures[feature] = true;\n    }\n  }\n\n  /**\n   * Add features to the last stage\n   */\n  add(arg, global = true) {\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg);\n      if (global) {\n        this._addGlobal(arg);\n      }\n    } else if (typeof arg === 'object') {\n      let features = (arg.global || []).concat(arg.local || []);\n      this._addFeatures(features);\n      if (arg.global) {\n        this._addGlobal(arg.global);\n      }\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  }\n\n  /**\n   * Add a new stage\n   */\n  addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  }\n\n  /**\n   * Assigns the global features to the given glyphs\n   */\n  assignGlobalFeatures(glyphs) {\n    for (let glyph of glyphs) {\n      for (let feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n  process(processor, glyphs, positions) {\n    processor.selectScript(this.script, this.language);\n\n    for (let stage of this.stages) {\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, positions);\n        }\n\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  }\n}\n","import unicode from 'unicode-properties';\n\nconst COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nconst FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nconst HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nconst VERTICAL_FEATURES = ['vert'];\nconst DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nexport default class DefaultShaper {\n  static zeroMarkWidths = 'AFTER_GPOS';\n  static plan(plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(plan);\n    this.planFeatures(plan);\n    this.planPostprocessing(plan, features);\n\n    // Assign the global features to all the glyphs\n    plan.assignGlobalFeatures(glyphs);\n\n    // Assign local features to glyphs\n    this.assignFeatures(plan, glyphs);\n  }\n\n  static planPreprocessing(plan) {\n    plan.add({\n      global: DIRECTIONAL_FEATURES[plan.direction],\n      local: FRACTIONAL_FEATURES\n    });\n  }\n\n  static planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n  }\n\n  static planPostprocessing(plan, userFeatures) {\n    plan.add([...COMMON_FEATURES, ...HORIZONTAL_FEATURES, ...userFeatures]);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    let i = 0;\n    while (i < glyphs.length) {\n      let glyph = glyphs[i];\n      if (glyph.codePoints[0] === 0x2044) { // fraction slash\n        let start = i - 1;\n        let end = i + 1;\n\n        // Apply numerator\n        while (start >= 0 && unicode.isDigit(glyphs[start].codePoints[0])) {\n          glyphs[start].features.numr = true;\n          glyphs[start].features.frac = true;\n          start--;\n        }\n\n        // Apply denominator\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        }\n\n        // Apply fraction slash\n        glyph.features.frac = true;\n        i = end - 1;\n\n      } else {\n        i++;\n      }\n    }\n  }\n}\n","import DefaultShaper from './DefaultShaper';\nimport unicode from 'unicode-properties';\nimport UnicodeTrie from 'unicode-trie';\n\nconst trie = new UnicodeTrie(require('fs').readFileSync(__dirname + '/data.trie'));\nconst FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\n\nconst ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\n\nconst ISOL = 'isol';\nconst FINA = 'fina';\nconst FIN2 = 'fin2';\nconst FIN3 = 'fin3';\nconst MEDI = 'medi';\nconst MED2 = 'med2';\nconst INIT = 'init';\nconst NONE = null;\n\n// Each entry is [prevAction, curAction, nextState]\nconst STATE_TABLE = [\n  //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n  // State 0: prev was U,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 6 ] ],\n\n  // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, FIN2, 5 ],  [ NONE, ISOL, 6 ] ],\n\n  // State 2: prev was D/L in ISOL form,  willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ INIT, FINA, 1 ],  [ INIT, FINA, 3 ],  [ INIT, FINA, 4 ],  [ INIT, FINA, 6 ] ],\n\n  // State 3: prev was D in FINA form,  willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ MEDI, FINA, 1 ],  [ MEDI, FINA, 3 ],  [ MEDI, FINA, 4 ],  [ MEDI, FINA, 6 ] ],\n\n  // State 4: prev was FINA ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ MED2, ISOL, 1 ],  [ MED2, ISOL, 2 ],  [ MED2, FIN2, 5 ],  [ MED2, ISOL, 6 ] ],\n\n  // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ ISOL, ISOL, 1 ],  [ ISOL, ISOL, 2 ],  [ ISOL, FIN2, 5 ],  [ ISOL, ISOL, 6 ] ],\n\n  // State 6: prev was DALATH/RISH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, FIN3, 5 ],  [ NONE, ISOL, 6 ] ]\n];\n\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\nexport default class ArabicShaper extends DefaultShaper {\n  static planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n    for (let i = 0; i < FEATURES.length; i++) {\n      let feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  }\n\n  static assignFeatures(plan, glyphs) {\n    super.assignFeatures(plan, glyphs);\n\n    let prev = -1;\n    let state = 0;\n    let actions = [];\n\n    // Apply the state machine to map glyphs to features\n    for (let i = 0; i < glyphs.length; i++) {\n      let curAction, prevAction;\n      var glyph = glyphs[i];\n      let type = getShapingClass(glyph.codePoints[0]);\n      if (type === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      [prevAction, curAction, state] = STATE_TABLE[state][type];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    }\n\n    // Apply the chosen features to their respective glyphs\n    for (let index = 0; index < glyphs.length; index++) {\n      let feature;\n      var glyph = glyphs[index];\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n}\n\nfunction getShapingClass(codePoint) {\n  let res = trie.get(codePoint);\n  if (res) {\n    return res - 1;\n  }\n\n  let category = unicode.getCategory(codePoint);\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n","export default class GlyphIterator {\n  constructor(glyphs, flags) {\n    this.glyphs = glyphs;\n    this.reset(flags);\n  }\n\n  reset(flags = {}) {\n    this.flags = flags;\n    this.index = 0;\n  }\n\n  get cur() {\n    return this.glyphs[this.index] || null;\n  }\n\n  shouldIgnore(glyph, flags) {\n    return ((flags.ignoreMarks && glyph.isMark) ||\n           (flags.ignoreBaseGlyphs && !glyph.isMark) ||\n           (flags.ignoreLigatures && glyph.isLigature));\n  }\n\n  move(dir) {\n    this.index += dir;\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index], this.flags)) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  }\n\n  next() {\n    return this.move(+1);\n  }\n\n  prev() {\n    return this.move(-1);\n  }\n\n  peek(count = 1) {\n    let idx = this.index;\n    let res = this.increment(count);\n    this.index = idx;\n    return res;\n  }\n\n  peekIndex(count = 1) {\n    let idx = this.index;\n    this.increment(count);\n    let res = this.index;\n    this.index = idx;\n    return res;\n  }\n\n  increment(count = 1) {\n    let dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  }\n}\n","import GlyphIterator from './GlyphIterator';\nimport * as Script from '../layout/Script';\n\nconst DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nexport default class OTProcessor {\n  constructor(font, table) {\n    this.font = font;\n    this.table = table;\n\n    this.script = null;\n    this.scriptTag = null;\n\n    this.language = null;\n    this.languageTag = null;\n\n    this.features = {};\n    this.lookups = {};\n\n    // initialize to default script + language\n    this.selectScript();\n\n    // current context (set by applyFeatures)\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n    this.ligatureID = 1;\n  }\n\n  findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [ script ];\n    }\n\n    for (let entry of this.table.scriptList) {\n      for (let s of script) {\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  selectScript(script, language) {\n    let changed = false;\n    let entry;\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n      if (script) {\n        entry = this.findScript(script);\n      }\n\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.direction = Script.direction(script);\n      this.language = null;\n      changed = true;\n    }\n\n    if (!language && language !== this.langugeTag) {\n      for (let lang of this.script.langSysRecords) {\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.langugeTag = lang.tag;\n          changed = true;\n          break;\n        }\n      }\n    }\n\n    if (!this.language) {\n      this.language = this.script.defaultLangSys;\n    }\n\n    // Build a feature lookup table\n    if (changed) {\n      this.features = {};\n      if (this.language) {\n        for (let featureIndex of this.language.featureIndexes) {\n          let record = this.table.featureList[featureIndex];\n          this.features[record.tag] = record.feature;\n        }\n      }\n    }\n  }\n\n  lookupsForFeatures(userFeatures = [], exclude) {\n    let lookups = [];\n    for (let tag of userFeatures) {\n      let feature = this.features[tag];\n      if (!feature) {\n        continue;\n      }\n\n      for (let lookupIndex of feature.lookupListIndexes) {\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort((a, b) => a.index - b.index);\n    return lookups;\n  }\n\n  applyFeatures(userFeatures, glyphs, advances) {\n    let lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  }\n\n  applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (let {feature, lookup} of lookups) {\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (let table of lookup.subTables) {\n          let res = this.applyLookup(lookup.lookupType, table);\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  }\n\n  applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  }\n\n  applyLookupList(lookupRecords) {\n    let glyphIndex = this.glyphIterator.index;\n\n    for (let lookupRecord of lookupRecords) {\n      this.glyphIterator.index = glyphIndex;\n      this.glyphIterator.increment(lookupRecord.sequenceIndex);\n\n      let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      for (let table of lookup.subTables) {\n        this.applyLookup(lookup.lookupType, table);\n      }\n    }\n\n    this.glyphIterator.index = glyphIndex;\n    return true;\n  }\n\n  coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (let range of coverage.rangeRecords) {\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  }\n\n  match(sequenceIndex, sequence, fn, matched) {\n    let pos = this.glyphIterator.index;\n    let glyph = this.glyphIterator.increment(sequenceIndex);\n    let idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph.id)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  }\n\n  sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (component, glyph) => component === glyph);\n  }\n\n  sequenceMatchIndices(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (component, glyph) => component === glyph, []);\n  }\n\n  coverageSequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (coverage, glyph) =>\n      this.coverageIndex(coverage, glyph) >= 0\n    );\n  }\n\n  getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1: // Class array\n        let i = glyph - classDef.startGlyph;\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (let range of classDef.classRangeRecord) {\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  }\n\n  classSequenceMatches(sequenceIndex, sequence, classDef) {\n    return this.match(sequenceIndex, sequence, (classID, glyph) =>\n      classID === this.getClassID(glyph, classDef)\n    );\n  }\n\n  applyContext(table) {\n    switch (table.version) {\n      case 1:\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        let set = table.ruleSets[index];\n        for (let rule of set) {\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.classSet[index];\n        for (let rule of set) {\n          if (this.classSequenceMatches(1, rule.classes, table.classDef)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  }\n\n  applyChainingContext(table) {\n    switch (table.version) {\n      case 1:\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        let set = table.chainRuleSets[index];\n        for (let rule of set) {\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack)\n              && this.sequenceMatches(1, rule.input)\n              && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        let rules = table.chainClassSet[index];\n        if (!rules) {\n          return false;\n        }\n\n        for (let rule of rules) {\n          if (this.classSequenceMatches(-rule.backtrack.length, rule.backtrack, table.backtrackClassDef) &&\n              this.classSequenceMatches(1, rule.input, table.inputClassDef) &&\n              this.classSequenceMatches(1 + rule.input.length, rule.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) &&\n            this.coverageSequenceMatches(0, table.inputCoverage) &&\n            this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  }\n}\n","import unicode from 'unicode-properties';\nimport OTProcessor from './OTProcessor';\n\nexport default class GlyphInfo {\n  constructor(font, id, codePoints = [], features = []) {\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n\n    this.features = {};\n    if (Array.isArray(features)) {\n      for (let i = 0; i < features.length; i++) {\n        let feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if (typeof features === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.ligated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(id) {\n    this._id = id;\n    this.substituted = true;\n\n    if (this._font.GDEF && this._font.GDEF.glyphClassDef) {\n      // TODO: clean this up\n      let classID = OTProcessor.prototype.getClassID(id, this._font.GDEF.glyphClassDef);\n      this.isMark = classID === 3;\n      this.isLigature = classID === 2;\n    } else {\n      this.isMark = this.codePoints.every(unicode.isMark);\n      this.isLigature = this.codePoints.length > 1;\n    }\n  }\n}\n","import DefaultShaper from './DefaultShaper';\nimport GlyphInfo from '../GlyphInfo';\n\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\nexport default class HangulShaper extends DefaultShaper {\n  static zeroMarkWidths = 'NONE';\n  static planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    let state = 0;\n    let i = 0;\n    while (i < glyphs.length) {\n      let action;\n      let glyph = glyphs[i];\n      let code = glyph.codePoints[0];\n      let type = getType(code);\n\n      [ action, state ] = STATE_TABLE[state][type];\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  }\n}\n\nconst HANGUL_BASE  = 0xac00;\nconst HANGUL_END   = 0xd7a4;\nconst HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nconst L_BASE  = 0x1100; // lead\nconst V_BASE  = 0x1161; // vowel\nconst T_BASE  = 0x11a7; // trail\nconst L_COUNT = 19;\nconst V_COUNT = 21;\nconst T_COUNT = 28;\nconst L_END   = L_BASE + L_COUNT - 1;\nconst V_END   = V_BASE + V_COUNT - 1;\nconst T_END   = T_BASE + T_COUNT - 1;\nconst DOTTED_CIRCLE = 0x25cc;\n\nconst isL    = code => 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\nconst isV    = code => 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\nconst isT    = code => 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\nconst isTone = code => 0x302e <= code && code <= 0x302f;\nconst isLVT  = code => HANGUL_BASE <= code && code <= HANGUL_END;\nconst isLV   = code => (code - HANGUL_BASE) < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\nconst isCombiningL = code => L_BASE <= code && code <= L_END;\nconst isCombiningV = code => V_BASE <= code && code <= V_END;\nconst isCombiningT = code => T_BASE + 1 && 1 <= code && code <= T_END;\n\n// Character categories\nconst X   = 0; // Other character\nconst L   = 1; // Leading consonant\nconst V   = 2; // Medial vowel\nconst T   = 3; // Trailing consonant\nconst LV  = 4; // Composed <LV> syllable\nconst LVT = 5; // Composed <LVT> syllable\nconst M   = 6; // Tone mark\n\n// This function classifies a character using the above categories.\nfunction getType(code) {\n  if (isL(code))    { return L; }\n  if (isV(code))    { return V; }\n  if (isT(code))    { return T; }\n  if (isLV(code))   { return LV; }\n  if (isLVT(code))  { return LVT; }\n  if (isTone(code)) { return M; }\n  return X;\n}\n\n// State machine actions\nconst NO_ACTION = 0;\nconst DECOMPOSE = 1;\nconst COMPOSE   = 2;\nconst TONE_MARK = 4;\nconst INVALID   = 5;\n\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nconst STATE_TABLE = [\n  //       X                 L                 V                T                  LV                LVT               M\n  // State 0: start state\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [  INVALID, 0  ] ],\n\n  // State 1: <L>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [  COMPOSE, 2  ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [  INVALID, 0  ] ],\n\n  // State 2: <L,V> or <LV>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [  COMPOSE, 3  ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [ TONE_MARK, 0 ] ],\n\n  // State 3: <L,V,T> or <LVT>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [ TONE_MARK, 0 ] ]\n];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyph.codePoints[0];\n\n  let s = code - HANGUL_BASE;\n  let t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  let l = L_BASE + s / V_COUNT | 0;\n  let v = V_BASE + s % V_COUNT;\n\n  // Don't decompose if all of the components are not available\n  if (!font.hasGlyphForCodePoint(l) ||\n      !font.hasGlyphForCodePoint(v) ||\n      (t !== T_BASE && !font.hasGlyphForCodePoint(t))) {\n    return i;\n  }\n\n  // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n  let ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n\n  let vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n\n  let insert = [ ljmo, vjmo ];\n\n  if (t > T_BASE) {\n    let tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice(i, 1, ...insert);\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n  let type = getType(code);\n\n  let prev = glyphs[i - 1].codePoints[0];\n  let prevType = getType(prev);\n\n  // Figure out what type of syllable we're dealing with\n  let lv, ljmo, vjmo, tjmo;\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    let l = ljmo.codePoints[0];\n    let v = vjmo.codePoints[0];\n\n    // Make sure L and V are combining characters\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  let t = (tjmo && tjmo.codePoints[0]) || T_BASE;\n  if ((lv != null) && (t === T_BASE || isCombiningT(t))) {\n    let s = lv + (t - T_BASE);\n\n    // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n    if (font.hasGlyphForCodePoint(s)) {\n      let del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  }\n\n  // Didn't compose (either a non-combining component or unsupported by font).\n  if (ljmo) { ljmo.features.ljmo = true; }\n  if (vjmo) { vjmo.features.vjmo = true; }\n  if (tjmo) { tjmo.features.tjmo = true; }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n    case V:\n      return 2;\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n\n  // Move tone mark to the beginning of the previous syllable, unless it is zero width\n  if (font.glyphForCodePoint(code).advanceWidth === 0) { return; }\n\n  let prev = glyphs[i - 1].codePoints[0];\n  let len = getLength(prev);\n\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    let dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features);\n\n    // If the tone mark is zero width, insert the dotted circle before, otherwise after\n    let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n","import DefaultShaper from './DefaultShaper';\nimport StateMachine from 'dfa';\nimport UnicodeTrie from 'unicode-trie';\nimport GlyphInfo from '../GlyphInfo';\nimport useData from './use.json';\n\nconst {categories, decompositions} = useData;\nconst trie = new UnicodeTrie(require('fs').readFileSync(__dirname + '/use.trie'));\nconst stateMachine = new StateMachine(useData);\n\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\nexport default class UniversalShaper extends DefaultShaper {\n  static zeroMarkWidths = 'BEFORE_GPOS';\n  static planFeatures(plan) {\n    plan.addStage(setupSyllables);\n\n    // Default glyph pre-processing group\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']);\n\n    // Reordering group\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref);\n\n    // Orthographic unit shaping group\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder);\n\n    // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n\n    // Standard topographic presentation and positional feature application\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (let i = glyphs.length - 1; i >= 0; i--) {\n      let codepoint = glyphs[i].codePoints[0];\n      if (decompositions[codepoint]) {\n        let decomposed = decompositions[codepoint].map(c => {\n          let g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice(i, 1, ...decomposed);\n      }\n    }\n  }\n}\n\nfunction useCategory(glyph) {\n  return trie.get(glyph.codePoints[0]);\n}\n\nclass USEInfo {\n  constructor(category, syllableType, syllable) {\n    this.category = category;\n    this.syllableType = syllableType;\n    this.syllable = syllable;\n  }\n}\n\nfunction setupSyllables(font, glyphs) {\n  let syllable = 0;\n  for (let [start, end, tags] of stateMachine.match(glyphs.map(useCategory))) {\n    ++syllable;\n\n    // Create shaper info\n    for (let i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories[useCategory(glyphs[i])], tags[0], syllable);\n    }\n\n    // Assign rphf feature\n    let limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n    for (let i = start; i < start + limit; i++) {\n      glyphs[i].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (let glyph of glyphs) {\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (let glyph of glyphs) {\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (let glyph of glyphs) {\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (let start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    let i, j;\n    let info = glyphs[start].shaperInfo;\n    let type = info.syllableType;\n\n    // Only a few syllable types need reordering.\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    }\n\n    // Insert a dotted circle glyph in broken clusters.\n    if (type === 'broken_cluster' && dottedCircle) {\n      let g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info;\n\n      // Insert after possible Repha.\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++);\n      glyphs.splice(++i, 0, g);\n      end++;\n    }\n\n    // Move things forward.\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);\n          break;\n        }\n      }\n    }\n\n    // Move things back.\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));\n      }\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  let syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n","import DefaultShaper from './DefaultShaper';\nimport ArabicShaper from './ArabicShaper';\nimport HangulShaper from './HangulShaper';\nimport UniversalShaper from './UniversalShaper';\n\nconst SHAPERS = {\n  arab: ArabicShaper,    // Arabic\n  mong: ArabicShaper,    // Mongolian\n  syrc: ArabicShaper,    // Syriac\n  'nko ': ArabicShaper,  // N'Ko\n  phag: ArabicShaper,    // Phags Pa\n  mand: ArabicShaper,    // Mandaic\n  mani: ArabicShaper,    // Manichaean\n  phlp: ArabicShaper,    // Psalter Pahlavi\n\n  hang: HangulShaper,    // Hangul\n\n  bali: UniversalShaper, // Balinese\n  batk: UniversalShaper, // Batak\n  brah: UniversalShaper, // Brahmi\n  bugi: UniversalShaper, // Buginese\n  buhd: UniversalShaper, // Buhid\n  cakm: UniversalShaper, // Chakma\n  cham: UniversalShaper, // Cham\n  dupl: UniversalShaper, // Duployan\n  egyp: UniversalShaper, // Egyptian Hieroglyphs\n  gran: UniversalShaper, // Grantha\n  hano: UniversalShaper, // Hanunoo\n  java: UniversalShaper, // Javanese\n  kthi: UniversalShaper, // Kaithi\n  kali: UniversalShaper, // Kayah Li\n  khar: UniversalShaper, // Kharoshthi\n  khoj: UniversalShaper, // Khojki\n  sind: UniversalShaper, // Khudawadi\n  lepc: UniversalShaper, // Lepcha\n  limb: UniversalShaper, // Limbu\n  mahj: UniversalShaper, // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper, // Meitei Mayek\n  modi: UniversalShaper, // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper, // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper, // Rejang\n  saur: UniversalShaper, // Saurashtra\n  shrd: UniversalShaper, // Sharada\n  sidd: UniversalShaper, // Siddham\n  sinh: UniversalShaper, // Sinhala\n  sund: UniversalShaper, // Sundanese\n  sylo: UniversalShaper, // Syloti Nagri\n  tglg: UniversalShaper, // Tagalog\n  tagb: UniversalShaper, // Tagbanwa\n  tale: UniversalShaper, // Tai Le\n  lana: UniversalShaper, // Tai Tham\n  tavt: UniversalShaper, // Tai Viet\n  takr: UniversalShaper, // Takri\n  tibt: UniversalShaper, // Tibetan\n  tfng: UniversalShaper, // Tifinagh\n  tirh: UniversalShaper, // Tirhuta\n\n  latn: DefaultShaper,   // Latin\n  DFLT: DefaultShaper    // Default\n};\n\nexport function choose(script) {\n  let shaper = SHAPERS[script];\n  if (shaper) { return shaper; }\n\n  return DefaultShaper;\n}\n","import OTProcessor from './OTProcessor';\nimport GlyphInfo from './GlyphInfo';\n\nexport default class GSUBProcessor extends OTProcessor {\n  applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1: { // Single Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        let glyph = this.glyphIterator.cur;\n        switch (table.version) {\n          case 1:\n            glyph.id = (glyph.id + table.deltaGlyphID) & 0xffff;\n            break;\n\n          case 2:\n            glyph.id = table.substitute.get(index);\n            break;\n        }\n\n        return true;\n      }\n\n      case 2: { // Multiple Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index !== -1) {\n          let sequence = table.sequences.get(index);\n          this.glyphIterator.cur.id = sequence[0];\n          this.glyphIterator.cur.ligatureComponent = 0;\n\n          let features = this.glyphIterator.cur.features;\n          let curGlyph = this.glyphIterator.cur;\n          let replacement = sequence.slice(1).map((gid, i) => {\n            let glyph = new GlyphInfo(this.font, gid, undefined, features);\n            glyph.shaperInfo = curGlyph.shaperInfo;\n            glyph.isLigated = curGlyph.isLigated;\n            glyph.ligatureComponent = i + 1;\n            glyph.substituted = true;\n            return glyph;\n          });\n\n          this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);\n          return true;\n        }\n\n        return false;\n      }\n\n      case 3: { // Alternate Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index !== -1) {\n          let USER_INDEX = 0; // TODO\n          this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];\n          return true;\n        }\n\n        return false;\n      }\n\n      case 4: { // Ligature Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        for (let ligature of table.ligatureSets.get(index)) {\n          let matched = this.sequenceMatchIndices(1, ligature.components);\n          if (!matched) {\n            continue;\n          }\n\n          let curGlyph = this.glyphIterator.cur;\n\n          // Concatenate all of the characters the new ligature will represent\n          let characters = curGlyph.codePoints.slice();\n          for (let index of matched) {\n            characters.push(...this.glyphs[index].codePoints);\n          }\n\n          // Create the replacement ligature glyph\n          let ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, curGlyph.features);\n          ligatureGlyph.shaperInfo = curGlyph.shaperInfo;\n          ligatureGlyph.isLigated = true;\n          ligatureGlyph.substituted = true;\n\n          // From Harfbuzz:\n          // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n          //   the ligature to keep its old ligature id.  This will allow it to attach to\n          //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n          //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n          //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n          //   later, we don't want them to lose their ligature id/component, otherwise\n          //   GPOS will fail to correctly position the mark ligature on top of the\n          //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n          //\n          // - If a ligature is formed of components that some of which are also ligatures\n          //   themselves, and those ligature components had marks attached to *their*\n          //   components, we have to attach the marks to the new ligature component\n          //   positions!  Now *that*'s tricky!  And these marks may be following the\n          //   last component of the whole sequence, so we should loop forward looking\n          //   for them and update them.\n          //\n          //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n          //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n          //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n          //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n          //   the new ligature with a component value of 2.\n          //\n          //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n          let isMarkLigature = curGlyph.isMark;\n          for (let i = 0; i < matched.length && isMarkLigature; i++) {\n            isMarkLigature = this.glyphs[matched[i]].isMark;\n          }\n\n          ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n\n          let lastLigID = curGlyph.ligatureID;\n          let lastNumComps = curGlyph.codePoints.length;\n          let curComps = lastNumComps;\n          let idx = this.glyphIterator.index + 1;\n\n          // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n          // This allows GPOS to attach marks to the correct ligature components.\n          for (let matchIndex of matched) {\n            // Don't assign new ligature components for mark ligatures (see above)\n            if (isMarkLigature) {\n              idx = matchIndex;\n            } else {\n              while (idx < matchIndex) {\n                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                this.glyphs[idx].ligatureComponent = ligatureComponent;\n                idx++;\n              }\n            }\n\n            lastLigID = this.glyphs[idx].ligatureID;\n            lastNumComps = this.glyphs[idx].codePoints.length;\n            curComps += lastNumComps;\n            idx++; // skip base glyph\n          }\n\n          // Adjust ligature components for any marks following\n          if (lastLigID && !isMarkLigature) {\n            for (let i = idx; i < this.glyphs.length; i++) {\n              if (this.glyphs[i].ligatureID === lastLigID) {\n                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i].ligatureComponent || 1, lastNumComps);\n                this.glyphs[i].ligatureComponent = ligatureComponent;\n              } else {\n                break;\n              }\n            }\n          }\n\n          // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n          for (let i = matched.length - 1; i >= 0; i--) {\n            this.glyphs.splice(matched[i], 1);\n          }\n\n          this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n          return true;\n        }\n\n        return false;\n      }\n\n      case 5: // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6: // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7: // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(`GSUB lookupType ${lookupType} is not supported`);\n    }\n  }\n}\n","import OTProcessor from './OTProcessor';\n\nexport default class GPOSProcessor extends OTProcessor {\n  applyPositionValue(sequenceIndex, value) {\n    let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    }\n\n    // TODO: device tables\n  }\n\n  applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1: { // Single positioning value\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        switch (table.version) {\n          case 1:\n            this.applyPositionValue(0, table.value);\n            break;\n\n          case 2:\n            this.applyPositionValue(0, table.values.get(index));\n            break;\n        }\n\n        return true;\n      }\n\n      case 2: { // Pair Adjustment Positioning\n        let nextGlyph = this.glyphIterator.peek();\n        if (!nextGlyph) {\n          return false;\n        }\n\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        switch (table.version) {\n          case 1: // Adjustments for glyph pairs\n            let set = table.pairSets.get(index);\n\n            for (let pair of set) {\n              if (pair.secondGlyph === nextGlyph.id) {\n                this.applyPositionValue(0, pair.value1);\n                this.applyPositionValue(1, pair.value2);\n                return true;\n              }\n            }\n\n            return false;\n\n          case 2: // Class pair adjustment\n            let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n            let class2 = this.getClassID(nextGlyph.id, table.classDef2);\n            if (class1 === -1 || class2 === -1) {\n              return false;\n            }\n\n            var pair = table.classRecords.get(class1).get(class2);\n            this.applyPositionValue(0, pair.value1);\n            this.applyPositionValue(1, pair.value2);\n            return true;\n        }\n      }\n\n      case 3: { // Cursive Attachment Positioning\n        let nextIndex = this.glyphIterator.peekIndex();\n        let nextGlyph = this.glyphs[nextIndex];\n        if (!nextGlyph) {\n          return false;\n        }\n\n        let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n        if (!curRecord || !curRecord.exitAnchor) {\n          return false;\n        }\n\n        let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];\n        if (!nextRecord || !nextRecord.entryAnchor) {\n          return false;\n        }\n\n        let entry = this.getAnchor(nextRecord.entryAnchor);\n        let exit = this.getAnchor(curRecord.exitAnchor);\n\n        let cur = this.positions[this.glyphIterator.index];\n        let next = this.positions[nextIndex];\n\n        switch (this.direction) {\n          case 'ltr':\n            cur.xAdvance = exit.x + cur.xOffset;\n\n            let d = entry.x + next.xOffset;\n            next.xAdvance -= d;\n            next.xOffset -= d;\n            break;\n\n          case 'rtl':\n            d = exit.x + cur.xOffset;\n            cur.xAdvance -= d;\n            cur.xOffset -= d;\n            next.xAdvance = entry.x + next.xOffset;\n            break;\n        }\n\n        if (this.glyphIterator.flags.rightToLeft) {\n          this.glyphIterator.cur.cursiveAttachment = nextIndex;\n          cur.yOffset = entry.y - exit.y;\n        } else {\n          nextGlyph.cursiveAttachment = this.glyphIterator.index;\n          cur.yOffset = exit.y - entry.y;\n        }\n\n        return true;\n      }\n\n      case 4: { // Mark to base positioning\n        let markIndex = this.coverageIndex(table.markCoverage);\n        if (markIndex === -1) {\n          return false;\n        }\n\n        // search backward for a base glyph\n        let baseGlyphIndex = this.glyphIterator.index;\n        while (--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n\n        if (baseGlyphIndex < 0) {\n          return false;\n        }\n\n        let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n        if (baseIndex === -1) {\n          return false;\n        }\n\n        let markRecord = table.markArray[markIndex];\n        let baseAnchor = table.baseArray[baseIndex][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n        return true;\n      }\n\n      case 5: { // Mark to ligature positioning\n        let markIndex = this.coverageIndex(table.markCoverage);\n        if (markIndex === -1) {\n          return false;\n        }\n\n        // search backward for a base glyph\n        let baseGlyphIndex = this.glyphIterator.index;\n        while (--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n\n        if (baseGlyphIndex < 0) {\n          return false;\n        }\n\n        let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);\n        if (ligIndex === -1) {\n          return false;\n        }\n\n        let ligAttach = table.ligatureArray[ligIndex];\n        let markGlyph = this.glyphIterator.cur;\n        let ligGlyph = this.glyphs[baseGlyphIndex];\n        let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && (markGlyph.ligatureComponent != null)\n          ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1\n          : ligGlyph.codePoints.length - 1;\n\n        let markRecord = table.markArray[markIndex];\n        let baseAnchor = ligAttach[compIndex][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n        return true;\n      }\n\n      case 6: { // Mark to mark positioning\n        let mark1Index = this.coverageIndex(table.mark1Coverage);\n        if (mark1Index === -1) {\n          return false;\n        }\n\n        // get the previous mark to attach to\n        let prevIndex = this.glyphIterator.peekIndex(-1);\n        let prev = this.glyphs[prevIndex];\n        if (!prev || !prev.isMark) {\n          return false;\n        }\n\n        let cur = this.glyphIterator.cur;\n\n        // The following logic was borrowed from Harfbuzz\n        let good = false;\n        if (cur.ligatureID === prev.ligatureID) {\n          if (!cur.ligatureID) { // Marks belonging to the same base\n            good = true;\n          } else if (cur.ligatureComponent === prev.ligatureComponent) { // Marks belonging to the same ligature component\n            good = true;\n          }\n        } else {\n          // If ligature ids don't match, it may be the case that one of the marks\n          // itself is a ligature, in which case match.\n          if ((cur.ligatureID && !cur.ligatureComponent) || (prev.ligatureID && !prev.ligatureComponent)) {\n            good = true;\n          }\n        }\n\n        if (!good) {\n          return false;\n        }\n\n        let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n        if (mark2Index === -1) {\n          return false;\n        }\n\n        let markRecord = table.mark1Array[mark1Index];\n        let baseAnchor = table.mark2Array[mark2Index][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, prevIndex);\n        return true;\n      }\n\n      case 7: // Contextual positioning\n        return this.applyContext(table);\n\n      case 8: // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9: // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(`Unsupported GPOS table: ${lookupType}`);\n    }\n  }\n\n  applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    let baseCoords = this.getAnchor(baseAnchor);\n    let markCoords = this.getAnchor(markRecord.markAnchor);\n\n    let basePos = this.positions[baseGlyphIndex];\n    let markPos = this.positions[this.glyphIterator.index];\n\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  }\n\n  getAnchor(anchor) {\n    // TODO: contour point, device tables\n    return {\n      x: anchor.xCoordinate,\n      y: anchor.yCoordinate\n    };\n  }\n\n  applyFeatures(userFeatures, glyphs, advances) {\n    super.applyFeatures(userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  }\n\n  fixCursiveAttachment(i) {\n    let glyph = this.glyphs[i];\n    if (glyph.cursiveAttachment != null) {\n      let j = glyph.cursiveAttachment;\n\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  }\n\n  fixMarkAttachment() {\n    for (let i = 0; i < this.glyphs.length; i++) {\n      let glyph = this.glyphs[i];\n      if (glyph.markAttachment != null) {\n        let j = glyph.markAttachment;\n\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (let k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        }\n      }\n    }\n  }\n}\n","import ShapingPlan from './ShapingPlan';\nimport * as Shapers from './shapers';\nimport GlyphInfo from './GlyphInfo';\nimport GSUBProcessor from './GSUBProcessor';\nimport GPOSProcessor from './GPOSProcessor';\n\nexport default class OTLayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  setup(glyphs, features, script, language) {\n    // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n    this.glyphInfos = glyphs.map(glyph => new GlyphInfo(this.font, glyph.id, [...glyph.codePoints]));\n\n    // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n    this.shaper = Shapers.choose(script);\n    this.plan = new ShapingPlan(this.font, script, language);\n    return this.shaper.plan(this.plan, this.glyphInfos, features);\n  }\n\n  substitute(glyphs) {\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos);\n\n      // Map glyph infos back to normal Glyph objects\n      glyphs = this.glyphInfos.map(glyphInfo => this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints));\n    }\n\n    return glyphs;\n  }\n\n  position(glyphs, positions) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(positions);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, this.glyphInfos, positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(positions);\n    }\n\n    // Reverse the glyphs and positions if the script is right-to-left\n    if (this.plan.direction === 'rtl') {\n      glyphs.reverse();\n      positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  }\n\n  zeroMarkAdvances(positions) {\n    for (let i = 0; i < this.glyphInfos.length; i++) {\n      if (this.glyphInfos[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  }\n\n  cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  }\n\n  getAvailableFeatures(script, language) {\n    let features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push(...Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push(...Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  }\n}\n","import KernProcessor from './KernProcessor';\nimport UnicodeLayoutEngine from './UnicodeLayoutEngine';\nimport GlyphRun from './GlyphRun';\nimport GlyphPosition from './GlyphPosition';\nimport * as Script from './Script';\nimport unicode from 'unicode-properties';\nimport AATLayoutEngine from '../aat/AATLayoutEngine';\nimport OTLayoutEngine from '../opentype/OTLayoutEngine';\n\nexport default class LayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null;\n\n    // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  layout(string, features = [], script, language) {\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      script = features;\n      language = script;\n      features = [];\n    }\n\n    // Map string to glyphs if needed\n    if (typeof string === 'string') {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) {\n        script = Script.forString(string);\n      }\n\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        let codePoints = [];\n        for (let glyph of string) {\n          codePoints.push(...glyph.codePoints);\n        }\n\n        script = Script.forCodePoints(codePoints);\n      }\n\n      var glyphs = string;\n    }\n\n    // Return early if there are no glyphs\n    if (glyphs.length === 0) {\n      return new GlyphRun(glyphs, []);\n    }\n\n    // Setup the advanced layout engine\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphs, features, script, language);\n    }\n\n    // Substitute and position the glyphs\n    glyphs = this.substitute(glyphs, features, script, language);\n    let positions = this.position(glyphs, features, script, language);\n\n    // Let the layout engine clean up any state it might have\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    return new GlyphRun(glyphs, positions);\n  }\n\n  substitute(glyphs, features, script, language) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      glyphs = this.engine.substitute(glyphs, features, script, language);\n    }\n\n    return glyphs;\n  }\n\n  position(glyphs, features, script, language) {\n    // Get initial glyph positions\n    let positions = glyphs.map(glyph => new GlyphPosition(glyph.advanceWidth));\n    let positioned = null;\n\n    // Call the advanced layout engine. Returns the features applied.\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphs, positions, features, script, language);\n    }\n\n    // if there is no GPOS table, use unicode properties to position marks.\n    if (!positioned) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphs, positions);\n    }\n\n    // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n    if ((!positioned || !positioned.kern) && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphs, positions);\n    }\n\n    return positions;\n  }\n\n  getAvailableFeatures(script, language) {\n    let features = [];\n\n    if (this.engine) {\n      features.push(...this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  }\n\n  stringsForGlyph(gid) {\n    let result = new Set;\n\n    let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n    for (let codePoint of codePoints) {\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (let string of this.engine.stringsForGlyph(gid)) {\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  }\n}\n","import BBox from './BBox';\n\nconst SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\nexport default class Path {\n  constructor() {\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n  toFunction() {\n    let cmds = this.commands.map(c => `  ctx.${c.command}(${c.args.join(', ')});`);\n    return new Function('ctx', cmds.join('\\n'));\n  }\n\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n  toSVG() {\n    let cmds = this.commands.map(c => {\n      let args = c.args.map(arg => Math.round(arg * 100) / 100);\n      return `${SVG_COMMANDS[c.command]}${args.join(' ')}`;\n    });\n\n    return cmds.join('');\n  }\n\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n  get cbox() {\n    if (!this._cbox) {\n      let cbox = new BBox;\n      for (let command of this.commands) {\n        for (let i = 0; i < command.args.length; i += 2) {\n          cbox.addPoint(command.args[i], command.args[i + 1]);\n        }\n      }\n\n      this._cbox = Object.freeze(cbox);\n    }\n\n    return this._cbox;\n  }\n\n  /**\n   * Gets the exact bounding box of the path by evaluating curve segments.\n   * Slower to compute than the control box, but more accurate.\n   * @type {BBox}\n   */\n  get bbox() {\n    if (this._bbox) {\n      return this._bbox;\n    }\n\n    let bbox = new BBox;\n    let cx = 0, cy = 0;\n\n    let f = t => (\n      Math.pow(1 - t, 3) * p0[i]\n        + 3 * Math.pow(1 - t, 2) * t * p1[i]\n        + 3 * (1 - t) * Math.pow(t, 2) * p2[i]\n        + Math.pow(t, 3) * p3[i]\n    );\n\n    for (let c of this.commands) {\n      switch (c.command) {\n        case 'moveTo':\n        case 'lineTo':\n          let [x, y] = c.args;\n          bbox.addPoint(x, y);\n          cx = x;\n          cy = y;\n          break;\n\n        case 'quadraticCurveTo':\n        case 'bezierCurveTo':\n          if (c.command === 'quadraticCurveTo') {\n            // http://fontforge.org/bezier.html\n            var [qp1x, qp1y, p3x, p3y] = c.args;\n            var cp1x = cx + 2 / 3 * (qp1x - cx);    // CP1 = QP0 + 2/3 * (QP1-QP0)\n            var cp1y = cy + 2 / 3 * (qp1y - cy);\n            var cp2x = p3x + 2 / 3 * (qp1x - p3x);  // CP2 = QP2 + 2/3 * (QP1-QP2)\n            var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n          } else {\n            var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args;\n          }\n\n          // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n          bbox.addPoint(p3x, p3y);\n\n          var p0 = [cx, cy];\n          var p1 = [cp1x, cp1y];\n          var p2 = [cp2x, cp2y];\n          var p3 = [p3x, p3y];\n\n          for (var i = 0; i <= 1; i++) {\n            let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            c = 3 * p1[i] - 3 * p0[i];\n\n            if (a === 0) {\n              if (b === 0) {\n                continue;\n              }\n\n              let t = -c / b;\n              if (0 < t && t < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t));\n                }\n              }\n\n              continue;\n            }\n\n            let b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0) {\n              continue;\n            }\n\n            let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n              if (i === 0) {\n                bbox.addPoint(f(t1), bbox.maxY);\n              } else if (i === 1) {\n                bbox.addPoint(bbox.maxX, f(t1));\n              }\n            }\n\n            let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n              if (i === 0) {\n                bbox.addPoint(f(t2), bbox.maxY);\n              } else if (i === 1) {\n                bbox.addPoint(bbox.maxX, f(t2));\n              }\n            }\n          }\n\n          cx = p3x;\n          cy = p3y;\n          break;\n      }\n    }\n\n    return this._bbox = Object.freeze(bbox);\n  }\n}\n\nfor (let command of ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath']) {\n  Path.prototype[command] = function(...args) {\n    this._bbox = this._cbox = null;\n    this.commands.push({\n      command,\n      args\n    });\n\n    return this;\n  };\n}\n","export default [\n  '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n  'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n  'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n  'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n  'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n  'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n  'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n  'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n  'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n  'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n  'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n  'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n  'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n  'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n  'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n  'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n  'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n  'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n  'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n  'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n  'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n  'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n  'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n  'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n  'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'\n];\n","import { cache } from '../decorators';\nimport Path from './Path';\nimport unicode from 'unicode-properties';\nimport StandardNames from './StandardNames';\n\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\nexport default class Glyph {\n  constructor(id, codePoints, font) {\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n    this.codePoints = codePoints;\n    this._font = font;\n\n    // TODO: get this info from GDEF if available\n    this.isMark = this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  _getPath() {\n    return new Path();\n  }\n\n  _getCBox() {\n    return this.path.cbox;\n  }\n\n  _getBBox() {\n    return this.path.bbox;\n  }\n\n  _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    let metric = table.metrics.get(table.metrics.length - 1);\n    let res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n\n    return res;\n  }\n\n  _getMetrics(cbox) {\n    if (this._metrics) { return this._metrics; }\n\n    let {advance:advanceWidth, bearing:leftBearing} = this._getTableMetrics(this._font.hmtx);\n\n    // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n    if (this._font.vmtx) {\n      var {advance:advanceHeight, bearing:topBearing} = this._getTableMetrics(this._font.vmtx);\n\n    } else {\n      let os2;\n      if (typeof cbox === 'undefined' || cbox === null) { ({ cbox } = this); }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n\n      } else {\n        let { hhea } = this._font;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    return this._metrics = { advanceWidth, advanceHeight, leftBearing, topBearing };\n  }\n\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n  @cache\n  get cbox() {\n    return this._getCBox();\n  }\n\n  /**\n   * The glyph’s bounding box, i.e. the rectangle that encloses the\n   * glyph outline as tightly as possible.\n   * @type {BBox}\n   */\n  @cache\n  get bbox() {\n    return this._getBBox();\n  }\n\n  /**\n   * A vector Path object representing the glyph outline.\n   * @type {Path}\n   */\n  @cache\n  get path() {\n    // Cache the path so we only decode it once\n    // Decoding is actually performed by subclasses\n    return this._getPath();\n  }\n\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n  @cache\n  get advanceWidth() {\n    return this._getMetrics().advanceWidth;\n  }\n\n  /**\n   * The glyph's advance height.\n   * @type {number}\n   */\n  @cache\n  get advanceHeight() {\n    return this._getMetrics().advanceHeight;\n  }\n\n  get ligatureCaretPositions() {}\n\n  _getName() {\n    let { post } = this._font;\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        let id = post.glyphNameIndex[this.id];\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  }\n\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n  @cache\n  get name() {\n    return this._getName();\n  }\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n  render(ctx, size) {\n    ctx.save();\n\n    let scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n\n    let fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n\n    ctx.restore();\n  }\n}\n","import Glyph from './Glyph';\nimport Path from './Path';\nimport BBox from './BBox';\nimport r from 'restructure';\n\n// The header for both simple and composite glyphs\nlet GlyfHeader = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin:             r.int16,\n  yMin:             r.int16,\n  xMax:             r.int16,\n  yMax:             r.int16\n});\n\n// Flags for simple glyphs\nconst ON_CURVE        = 1 << 0;\nconst X_SHORT_VECTOR  = 1 << 1;\nconst Y_SHORT_VECTOR  = 1 << 2;\nconst REPEAT          = 1 << 3;\nconst SAME_X          = 1 << 4;\nconst SAME_Y          = 1 << 5;\n\n// Flags for composite glyphs\nconst ARG_1_AND_2_ARE_WORDS     = 1 << 0;\nconst ARGS_ARE_XY_VALUES        = 1 << 1;\nconst ROUND_XY_TO_GRID          = 1 << 2;\nconst WE_HAVE_A_SCALE           = 1 << 3;\nconst MORE_COMPONENTS           = 1 << 5;\nconst WE_HAVE_AN_X_AND_Y_SCALE  = 1 << 6;\nconst WE_HAVE_A_TWO_BY_TWO      = 1 << 7;\nconst WE_HAVE_INSTRUCTIONS      = 1 << 8;\nconst USE_MY_METRICS            = 1 << 9;\nconst OVERLAP_COMPOUND          = 1 << 10;\nconst SCALED_COMPONENT_OFFSET   = 1 << 11;\nconst UNSCALED_COMPONENT_OFFSET = 1 << 12;\n\n// Represents a point in a simple glyph\nexport class Point {\n  constructor(onCurve, endContour, x = 0, y = 0) {\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  }\n}\n\n// Represents a component in a composite glyph\nclass Component {\n  constructor(glyphID, dx, dy) {\n    this.glyphID = glyphID;\n    this.dx = dx;\n    this.dy = dy;\n    this.pos = 0;\n    this.scaleX = this.scaleY = 1;\n    this.scale01 = this.scale10 = 0;\n  }\n}\n\n/**\n * Represents a TrueType glyph.\n */\nexport default class TTFGlyph extends Glyph {\n  // Parses just the glyph header and returns the bounding box\n  _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    let stream = this._font._getTableStream('glyf');\n    stream.pos += this._font.loca.offsets[this.id];\n    let glyph = GlyfHeader.decode(stream);\n\n    let cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  }\n\n  // Parses a single glyph coordinate\n  _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  }\n\n  // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n  _decode() {\n    let glyfPos = this._font.loca.offsets[this.id];\n    let nextPos = this._font.loca.offsets[this.id + 1];\n\n    // Nothing to do if there is no data for this glyph\n    if (glyfPos === nextPos) { return null; }\n\n    let stream = this._font._getTableStream('glyf');\n    stream.pos += glyfPos;\n    let startPos = stream.pos;\n\n    let glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  }\n\n  _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n\n    let endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n\n    let flags = [];\n    let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag);\n\n      // check for repeat flag\n      if (flag & REPEAT) {\n        let count = stream.readUInt8();\n        for (let j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      let point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    let px = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);\n    }\n\n    let py = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      let points = glyph.points.slice();\n      points.push(...this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  }\n\n  _decodeComposite(glyph, stream, offset = 0) {\n    // this is a composite glyph\n    glyph.components = [];\n    let haveInstructions = false;\n    let flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      let gPos = stream.pos - offset;\n      let glyphID = stream.readUInt16BE();\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX =\n        component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX  = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scale01 = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scale10 = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scaleY  = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      let points = [];\n      for (let j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point(true, true, component.dx, component.dy));\n      }\n\n      points.push(...this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (let i = 0; i < points.length; i++) {\n        let point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  }\n\n  _getPhantomPoints(glyph) {\n    let cbox = this._getCBox(true);\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    let { advanceWidth, advanceHeight, leftBearing, topBearing } = this._metrics;\n\n    return [\n      new Point(false, true, glyph.xMin - leftBearing, 0),\n      new Point(false, true, glyph.xMin - leftBearing + advanceWidth, 0),\n      new Point(false, true, 0, glyph.yMax + topBearing),\n      new Point(false, true, 0, glyph.yMax + topBearing + advanceHeight)\n    ];\n  }\n\n  // Decodes font data, resolves composite glyphs, and returns an array of contours\n  _getContours() {\n    let glyph = this._decode();\n    if (!glyph) { return []; }\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      var points = [];\n      for (let component of glyph.components) {\n        glyph = this._font.getGlyph(component.glyphID)._decode();\n        // TODO transform\n        for (let point of glyph.points) {\n          points.push(new Point(point.onCurve, point.endContour, point.x + component.dx, point.y + component.dy));\n        }\n      }\n    } else {\n      var points = glyph.points || [];\n    }\n\n    // Recompute and cache metrics if we performed variation processing\n    if (glyph.phantomPoints) {\n      this._metrics.advanceWidth  = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing   = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing    = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    let contours = [];\n    let cur = [];\n    for (let k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  }\n\n  _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    let cbox = this._getCBox(true);\n    super._getMetrics(cbox);\n\n    if (this._font._variationProcessor) {\n      // Decode the font data (and cache for later).\n      // This triggers recomputation of metrics\n      this.path;\n    }\n\n    return this._metrics;\n  }\n\n  // Converts contours to a Path object that can be rendered\n  _getPath() {\n    let contours = this._getContours();\n    let path = new Path;\n\n    for (let i = 0; i < contours.length; i++) {\n      let contour = contours[i];\n      let firstPt = contour[0];\n      let lastPt = contour[contour.length - 1];\n      let start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (let j = start; j < contour.length; j++) {\n        let pt = contour[j];\n        let prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          let midX = (prevPt.x + pt.x) / 2;\n          let midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      }\n\n      // Connect the first and last points\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n      \n      path.closePath();\n    }\n\n    return path;\n  }\n}\n","import Glyph from './Glyph';\nimport Path from './Path';\n\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\nexport default class CFFGlyph extends Glyph {\n  _getName() {\n    return this._font['CFF '].getGlyphName(this.id);\n  }\n\n  bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  }\n\n  _getPath() {\n    let { stream } = this._font;\n    let { pos } = stream;\n\n    let cff = this._font['CFF '];\n    let str = cff.topDict.CharStrings[this.id];\n    let end = str.offset + str.length;\n    stream.pos = str.offset;\n\n    let path = new Path;\n    let stack = [];\n    let trans = [];\n\n    let width = null;\n    let nStems = 0;\n    let x = 0, y = 0;\n    let usedGsubrs;\n    let usedSubrs;\n    let open = false;\n\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n\n    let gsubrs = cff.globalSubrIndex || [];\n    let gsubrsBias = this.bias(gsubrs);\n\n    let privateDict = cff.privateDictForGlyph(this.id);\n    let subrs = privateDict.Subrs || [];\n    let subrsBias = this.bias(subrs);\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        if (width === null) {\n          width = stack.shift() + privateDict.nominalWidthX;\n        }\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n    \n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n      \n      path.moveTo(x, y);\n      open = true;\n    }\n\n    let parse = function() {\n      while (stream.pos < end) {\n        let op = stream.readUInt8();\n        if (op < 32) {\n          switch (op) {\n            case 1:  // hstem\n            case 3:  // vstem\n            case 18: // hstemhm\n            case 23: // vstemhm\n              parseStems();\n              break;\n\n            case 4: // vmoveto\n              if (stack.length > 1) {\n                if (typeof width === 'undefined' || width === null) { width = stack.shift() + privateDict.nominalWidthX; }\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5: // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n              break;\n\n            case 6: // hlineto\n            case 7: // vlineto\n              let phase = op === 6;\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 8: // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 10: // callsubr\n              let index = stack.pop() + subrsBias;\n              let subr = subrs[index];\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 11: // return\n              return;\n\n            case 14: // endchar\n              if (stack.length > 0) {\n                if (typeof width === 'undefined' || width === null) { width = stack.shift() + privateDict.nominalWidthX; }\n              }\n\n              path.closePath();\n              open = false;\n              break;\n\n            case 19: // hintmask\n            case 20: // cntrmask\n              parseStems();\n              stream.pos += (nStems + 7) >> 3;\n              break;\n\n            case 21: // rmoveto\n              if (stack.length > 2) {\n                if (typeof width === 'undefined' || width === null) { width = stack.shift() + privateDict.nominalWidthX; }\n                let haveWidth = true;\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22: // hmoveto\n              if (stack.length > 1) {\n                if (typeof width === 'undefined' || width === null) { width = stack.shift() + privateDict.nominalWidthX; }\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24: // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25: // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26: // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 27: // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 28: // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29: // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 30: // vhcurveto\n            case 31: // hvcurveto\n              phase = op === 31;\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n              switch (op) {\n                case 3: // and\n                  let a = stack.pop();\n                  let b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4: // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5: // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9: // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10: // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11: // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12: // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14: // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15: // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18: // drop\n                  stack.pop();\n                  break;\n\n                case 20: // put\n                  let val = stack.pop();\n                  let idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21: // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22: // ifelse\n                  let s1 = stack.pop();\n                  let s2 = stack.pop();\n                  let v1 = stack.pop();\n                  let v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23: // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24: // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26: // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27: // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28: // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29: // index\n                  idx = stack.pop();\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30: // roll\n                  let n = stack.pop();\n                  let j = stack.pop();\n\n                  if (j >= 0) {\n                    while (j > 0) {\n                      var t = stack[n - 1];\n                      for (let i = n - 2; i >= 0; i--) {\n                        stack[i + 1] = stack[i];\n                      }\n\n                      stack[0] = t;\n                      j--;\n                    }\n                  } else {\n                    while (j < 0) {\n                      var t = stack[0];\n                      for (let i = 0; i <= n; i++) {\n                        stack[i] = stack[i + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      j++;\n                    }\n                  }\n                  break;\n\n                case 34: // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  let c3x = c2x + stack.shift();\n                  let c3y = c2y;\n                  let c4x = c3x + stack.shift();\n                  let c4y = c3y;\n                  let c5x = c4x + stack.shift();\n                  let c5y = c4y;\n                  let c6x = c5x + stack.shift();\n                  let c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35: // flex\n                  let pts = [];\n                  \n                  for (let i = 0; i <= 5; i++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo(...pts.slice(0, 6));\n                  path.bezierCurveTo(...pts.slice(6));\n                  stack.shift(); // fd\n                  break;\n\n                case 36: // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37: // flex1\n                  let startx = x;\n                  let starty = y;\n\n                  pts = [];\n                  for (let i = 0; i <= 4; i++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) { // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo(...pts.slice(0, 6));\n                  path.bezierCurveTo(...pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error(`Unknown op: 12 ${op}`);\n              }\n              break;\n\n            default:\n              throw new Error(`Unknown op: ${op}`);\n          }\n\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n    return path;\n  }\n}\n","import TTFGlyph from './TTFGlyph';\nimport r from 'restructure';\n\nlet SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(t => t.parent.buflen - t._currentOffset)\n});\n\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\nexport default class SBIXGlyph extends TTFGlyph {\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n  getImageForSize(size) {\n    for (let i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n      if (table.ppem >= size) { break; }\n    }\n\n    let offsets = table.imageOffsets;\n    let start = offsets[this.id];\n    let end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {buflen: end - start});\n  }\n\n  render(ctx, size) {\n    let img = this.getImageForSize(size);\n    if (img != null) {\n      let scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {height: size, x: img.originX, y: (this.bbox.minY - img.originY) * scale});\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      super.render(ctx, size);\n    }\n  }\n}\n","import Glyph from './Glyph';\nimport BBox from './BBox';\n\nclass COLRLayer {\n  constructor(glyph, color) {\n    this.glyph = glyph;\n    this.color = color;\n  }\n}\n\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\nexport default class COLRGlyph extends Glyph {\n  _getBBox() {\n    let bbox = new BBox;\n    for (let i = 0; i < this.layers.length; i++) {\n      let layer = this.layers[i];\n      let b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  }\n\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n  get layers() {\n    let cpal = this._font.CPAL;\n    let colr = this._font.COLR;\n    let low = 0;\n    let high = colr.baseGlyphRecord.length - 1;\n\n    while (low <= high) {\n      let mid = (low + high) >> 1;\n      var rec = colr.baseGlyphRecord[mid];\n\n      if (this.id < rec.gid) {\n        high = mid - 1;\n      } else if (this.id > rec.gid) {\n        low = mid + 1;\n      } else {\n        var baseLayer = rec;\n        break;\n      }\n    }\n\n    // if base glyph not found in COLR table,\n    // default to normal glyph from glyf or CFF\n    if (baseLayer == null) {\n      var g = this._font._getBaseGlyph(this.id);\n      var color = {\n        red: 0,\n        green: 0,\n        blue: 0,\n        alpha: 255\n      };\n\n      return [new COLRLayer(g, color)];\n    }\n\n    // otherwise, return an array of all the layers\n    let layers = [];\n    for (let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n      var rec = colr.layerRecords[i];\n      var color = cpal.colorRecords[rec.paletteIndex];\n      var g = this._font._getBaseGlyph(rec.gid);\n      layers.push(new COLRLayer(g, color));\n    }\n\n    return layers;\n  }\n\n  render(ctx, size) {\n    for (let {glyph, color} of this.layers) {\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  }\n}\n","const TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nconst TUPLE_COUNT_MASK           = 0x0fff;\nconst EMBEDDED_TUPLE_COORD       = 0x8000;\nconst INTERMEDIATE_TUPLE         = 0x4000;\nconst PRIVATE_POINT_NUMBERS      = 0x2000;\nconst TUPLE_INDEX_MASK           = 0x0fff;\nconst POINTS_ARE_WORDS           = 0x80;\nconst POINT_RUN_COUNT_MASK       = 0x7f;\nconst DELTAS_ARE_ZERO            = 0x80;\nconst DELTAS_ARE_WORDS           = 0x40;\nconst DELTA_RUN_COUNT_MASK       = 0x3f;\n\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\nexport default class GlyphVariationProcessor {\n  constructor(font, coords) {\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n  }\n\n  normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    let normalized = [];\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      let axis = this.font.fvar.axis[i];\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue) / (axis.defaultValue - axis.minValue));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue) / (axis.maxValue - axis.defaultValue));\n      }\n    }\n\n    // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        let segment = this.font.avar.segment[i];\n        for (let j = 0; j < segment.correspondence.length; j++) {\n          let pair = segment.correspondence[j];\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            let prev = segment.correspondence[j - 1];\n            normalized[i] = (normalized[i] - prev.fromCoord) *\n              (pair.toCoord - prev.toCoord) / (pair.fromCoord - prev.fromCoord) +\n              prev.toCoord;\n\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  }\n\n  transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) { return; }\n\n    let { gvar } = this.font;\n    if (gid >= gvar.glyphCount) { return; }\n\n    let offset = gvar.offsets[gid];\n    if (offset === gvar.offsets[gid + 1]) { return; }\n\n    // Read the gvar data for this glyph\n    let { stream } = this.font;\n    stream.pos = offset;\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    let tupleCount = stream.readUInt16BE();\n    let offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    let origPoints = glyphPoints.map(pt => pt.copy());\n\n    tupleCount &= TUPLE_COUNT_MASK;\n    for (let i = 0; i < tupleCount; i++) {\n      let tupleDataSize = stream.readUInt16BE();\n      let tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      }\n\n      // Get the factor at which to apply this tuple\n      let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      }\n\n      // points.length = 0 means there are deltas for all points\n      let nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      let xDeltas = this.decodeDeltas(nPoints);\n      let yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) { // all points\n        for (let i = 0; i < glyphPoints.length; i++) {\n          var point = glyphPoints[i];\n          point.x += Math.round(xDeltas[i] * factor);\n          point.y += Math.round(yDeltas[i] * factor);\n        }\n      } else {\n        let outPoints = origPoints.map(pt => pt.copy());\n        let hasDelta = glyphPoints.map(() => false);\n\n        for (let i = 0; i < points.length; i++) {\n          let idx = points[i];\n          if (idx < glyphPoints.length) {\n            let point = outPoints[idx];\n            hasDelta[idx] = true;\n\n            point.x += Math.round(xDeltas[i] * factor);\n            point.y += Math.round(yDeltas[i] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (let i = 0; i < glyphPoints.length; i++) {\n          let deltaX = outPoints[i].x - origPoints[i].x;\n          let deltaY = outPoints[i].y - origPoints[i].y;\n\n          glyphPoints[i].x += deltaX;\n          glyphPoints[i].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  }\n\n  decodePoints() {\n    let stream = this.font.stream;\n    let count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    let points = new Uint16Array(count);\n    let i = 0;\n    let point = 0;\n    while (i < count) {\n      let run = stream.readUInt8();\n      let runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      let fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (let j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  }\n\n  decodeDeltas(count) {\n    let stream = this.font.stream;\n    let i = 0;\n    let deltas = new Int16Array(count);\n\n    while (i < count) {\n      let run = stream.readUInt8();\n      let runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n\n      } else {\n        let fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n        for (let j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  }\n\n  tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    let normalized = this.normalizedCoords;\n    let { gvar } = this.font;\n    let factor = 1;\n\n    for (let i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if ((normalized[i] < Math.min(0, tupleCoords[i])) ||\n            (normalized[i] > Math.max(0, tupleCoords[i]))) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i]) / tupleCoords[i];\n      } else {\n        if ((normalized[i] < startCoords[i]) ||\n            (normalized[i] > endCoords[i])) {\n          return 0;\n\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = (factor * (normalized[i] - startCoords[i])) / (tupleCoords[i] - startCoords[i]);\n\n        } else {\n          factor = (factor * (endCoords[i] - normalized[i]) / (endCoords[i] - tupleCoords[i]));\n        }\n      }\n    }\n\n    return factor;\n  }\n\n  // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n  interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    let point = 0;\n    while (point < points.length) {\n      let firstPoint = point;\n\n      // find the end point of the contour\n      let endPoint = point;\n      let pt = points[endPoint];\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      }\n\n      // find the first point that has a delta\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      let firstDelta = point;\n      let curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      }\n\n      // shift contour if we only have a single delta\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  }\n\n  deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    let iterable = ['x', 'y'];\n    for (let i = 0; i < iterable.length; i++) {\n      let k = iterable[i];\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      let in1 = inPoints[ref1][k];\n      let in2 = inPoints[ref2][k];\n      let out1 = outPoints[ref1][k];\n      let out2 = outPoints[ref2][k];\n\n      let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n      for (let p = p1; p <= p2; p++) {\n        let out = inPoints[p][k];\n\n        if (out <= in1) {\n          out += out1 - in1;\n        } else if (out >= in2) {\n          out += out2 - in2;\n        } else {\n          out = out1 + (out - in1) * scale;\n        }\n\n        outPoints[p][k] = out;\n      }\n    }\n  }\n\n  deltaShift(p1, p2, ref, inPoints, outPoints) {\n    let deltaX = outPoints[ref].x - inPoints[ref].x;\n    let deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (let p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  }\n}\n","import r from 'restructure';\n\nexport default class Subset {\n  constructor(font) {\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {};\n\n    // always include the missing glyph\n    this.includeGlyph(0);\n  }\n\n  includeGlyph(glyph) {\n    if (typeof glyph === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  }\n\n  encodeStream() {\n    let s = new r.EncodeStream();\n\n    process.nextTick(() => {\n      this.encode(s);\n      return s.end();\n    });\n\n    return s;\n  }\n}\n","import r from 'restructure';\n\n// Flags for simple glyphs\nconst ON_CURVE        = 1 << 0;\nconst X_SHORT_VECTOR  = 1 << 1;\nconst Y_SHORT_VECTOR  = 1 << 2;\nconst REPEAT          = 1 << 3;\nconst SAME_X          = 1 << 4;\nconst SAME_Y          = 1 << 5;\n\nclass Point {\n  static size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  }\n  \n  static encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  }\n}\n\nlet Glyf = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point, 0),\n  yPoints: new r.Array(Point, 0)\n});\n\n/**\n * Encodes TrueType glyph outlines\n */\nexport default class TTFGlyphEncoder {\n  encodeSimple(path, instructions = []) {\n    let endPtsOfContours = [];\n    let xPoints = [];\n    let yPoints = [];\n    let flags = [];\n    let same = 0;\n    let lastX = 0, lastY = 0, lastFlag = 0;\n    let pointCount = 0;\n    \n    for (let i = 0; i < path.commands.length; i++) {\n      let c = path.commands[i];\n      \n      for (let j = 0; j < c.args.length; j += 2) {\n        let x = c.args[j];\n        let y = c.args[j + 1];\n        let flag = 0;\n        \n        // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          let next = path.commands[i + 1];\n          if (next && next.command === 'quadraticCurveTo') {\n            let midX = (lastX + next.args[0]) / 2;\n            let midY = (lastY + next.args[1]) / 2;\n            \n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        }\n        \n        // All points except control points are on curve.\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE;\n        }\n        \n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR, SAME_X);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR, SAME_Y);\n        \n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n      \n          flags.push(flag);\n          lastFlag = flag;\n        }\n        \n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n  \n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    }\n\n    // Close the path if the last command didn't already\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n    \n    let bbox = path.bbox;\n    let glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    \n    let size = Glyf.size(glyf);\n    let tail = 4 - (size % 4);\n    \n    let stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf);\n    \n    // Align to 4-byte length\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n    \n    return stream.buffer;\n  }\n  \n  _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    let diff = value - last;\n    \n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n      \n      points.push(diff);\n    }\n    \n    return flag;\n  }\n}\n","import cloneDeep from 'clone';\nimport Subset from './Subset';\nimport Directory from '../tables/directory';\nimport Tables from '../tables';\nimport TTFGlyphEncoder from '../glyph/TTFGlyphEncoder';\n\nexport default class TTFSubset extends Subset {\n  constructor(font) {\n    super(font);\n    this.glyphEncoder = new TTFGlyphEncoder;\n  }\n  \n  _addGlyph(gid) {\n    let glyph = this.font.getGlyph(gid);\n    let glyf = glyph._decode();\n\n    // get the offset to the glyph from the loca table\n    let curOffset = this.font.loca.offsets[gid];\n    let nextOffset = this.font.loca.offsets[gid + 1];\n\n    let stream = this.font._getTableStream('glyf');\n    stream.pos += curOffset;\n\n    let buffer = stream.readBuffer(nextOffset - curOffset);\n\n    // if it is a compound glyph, include its components\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = new Buffer(buffer);\n      for (let component of glyf.components) {\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n    \n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  }\n\n  encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: []\n    };\n\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    };\n\n    // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n    let i = 0;\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    let maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n\n    this.loca.offsets.push(this.offset);\n    Tables.loca.preEncode.call(this.loca);\n\n    let head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n\n    let hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length;\n\n    // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n\n    // TODO: subset prep, cvt, fpgm?\n    Directory.encode(stream, {\n      tables: {\n        head,\n        hhea,\n        loca: this.loca,\n        maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm\n\n        // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n      }\n    });\n  }\n}\n","import Subset from './Subset';\nimport CFFTop from '../cff/CFFTop';\nimport CFFPrivateDict from '../cff/CFFPrivateDict';\nimport standardStrings from '../cff/CFFStandardStrings';\n\nexport default class CFFSubset extends Subset {\n  constructor(font) {\n    super(font);\n\n    this.cff = this.font['CFF '];\n    if (!this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n  }\n\n  subsetCharstrings() {\n    this.charstrings = [];\n    let gsubrs = {};\n\n    for (let gid of this.glyphs) {\n      this.charstrings.push(this.cff.getCharString(gid));\n\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  }\n\n  subsetSubrs(subrs, used) {\n    let res = [];\n    for (let i = 0; i < subrs.length; i++) {\n      let subr = subrs[i];\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(new Buffer([11])); // return\n      }\n    }\n\n    return res;\n  }\n\n  subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n\n    let used_fds = {};\n    let used_subrs = [];\n    for (let gid of this.glyphs) {\n      let fd = this.cff.fdForGlyph(gid);\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n      for (let subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (let i = 0; i < topDict.FDArray.length; i++) {\n      let dict = topDict.FDArray[i];\n      delete dict.FontName;\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  }\n\n  createCIDFontdict(topDict) {\n    let used_subrs = {};\n    for (let gid of this.glyphs) {\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    let privateDict = Object.assign({}, this.cff.topDict.Private);\n    privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n\n    topDict.FDArray = [{ Private: privateDict }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{ first: 0, fd: 0 }],\n      sentinel: this.charstrings.length\n    };\n  }\n\n  addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  }\n\n  encode(stream) {\n    this.subsetCharstrings();\n\n    let charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{ first: 1, nLeft: this.charstrings.length - 2 }]\n    };\n\n    let topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    for (let key of ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName']) {\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    let top = {\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n\n    CFFTop.encode(stream, top);\n  }\n}\n","import r from 'restructure';\nimport { cache } from './decorators';\nimport fontkit from './base';\nimport Directory from './tables/directory';\nimport tables from './tables';\nimport CmapProcessor from './CmapProcessor';\nimport LayoutEngine from './layout/LayoutEngine';\nimport TTFGlyph from './glyph/TTFGlyph';\nimport CFFGlyph from './glyph/CFFGlyph';\nimport SBIXGlyph from './glyph/SBIXGlyph';\nimport COLRGlyph from './glyph/COLRGlyph';\nimport GlyphVariationProcessor from './glyph/GlyphVariationProcessor';\nimport TTFSubset from './subset/TTFSubset';\nimport CFFSubset from './subset/CFFSubset';\nimport BBox from './glyph/BBox';\n\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\nexport default class TTFFont {\n  static probe(buffer) {\n    let format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  }\n\n  constructor(stream, variationCoords = null) {\n    this.stream = stream;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n    this._decodeDirectory();\n\n    // define properties for each table to lazily parse\n    for (let tag in this.directory.tables) {\n      let table = this.directory.tables[tag];\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n\n    if (variationCoords) {\n      this._variationProcessor = new GlyphVariationProcessor(this, variationCoords);\n    }\n  }\n\n  _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit.logErrors) {\n          console.error(`Error decoding table ${table.tag}`);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  }\n\n  _getTableStream(tag) {\n    let table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  }\n\n  _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {_startOffset: 0});\n  }\n\n  _decodeTable(table) {\n    let pos = this.stream.pos;\n\n    let stream = this._getTableStream(table.tag);\n    let result = tables[table.tag].decode(stream, this, table.length);\n\n    this.stream.pos = pos;\n    return result;\n  }\n\n  /**\n   * The unique PostScript name for this font\n   * @type {string}\n   */\n  get postscriptName() {\n    let name = this.name.records.postscriptName;\n    let lang = Object.keys(name)[0];\n    return name[lang];\n  }\n\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  getName(key, lang = 'en') {\n    let record = this.name.records[key];\n    if (record) {\n      return record[lang];\n    }\n\n    return null;\n  }\n\n  /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */\n  get fullName() {\n    return this.getName('fullName');\n  }\n\n  /**\n   * The font's family name, e.g. \"Helvetica\"\n   * @type {string}\n   */\n  get familyName() {\n    return this.getName('fontFamily');\n  }\n\n  /**\n   * The font's sub-family, e.g. \"Bold\".\n   * @type {string}\n   */\n  get subfamilyName() {\n    return this.getName('fontSubfamily');\n  }\n\n  /**\n   * The font's copyright information\n   * @type {string}\n   */\n  get copyright() {\n    return this.getName('copyright');\n  }\n\n  /**\n   * The font's version number\n   * @type {string}\n   */\n  get version() {\n    return this.getName('version');\n  }\n\n  /**\n   * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n   * @type {number}\n   */\n  get ascent() {\n    return this.hhea.ascent;\n  }\n\n  /**\n   * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n   * @type {number}\n   */\n  get descent() {\n    return this.hhea.descent;\n  }\n\n  /**\n   * The amount of space that should be included between lines\n   * @type {number}\n   */\n  get lineGap() {\n    return this.hhea.lineGap;\n  }\n\n  /**\n   * The offset from the normal underline position that should be used\n   * @type {number}\n   */\n  get underlinePosition() {\n    return this.post.underlinePosition;\n  }\n\n  /**\n   * The weight of the underline that should be used\n   * @type {number}\n   */\n  get underlineThickness() {\n    return this.post.underlineThickness;\n  }\n\n  /**\n   * If this is an italic font, the angle the cursor should be drawn at to match the font design\n   * @type {number}\n   */\n  get italicAngle() {\n    return this.post.italicAngle;\n  }\n\n  /**\n   * The height of capital letters above the baseline.\n   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n   * @type {number}\n   */\n  get capHeight() {\n    let os2 = this['OS/2'];\n    return os2 ? os2.capHeight : this.ascent;\n  }\n\n  /**\n   * The height of lower case letters in the font.\n   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n   * @type {number}\n   */\n  get xHeight() {\n    let os2 = this['OS/2'];\n    return os2 ? os2.xHeight : 0;\n  }\n\n  /**\n   * The number of glyphs in the font.\n   * @type {number}\n   */\n  get numGlyphs() {\n    return this.maxp.numGlyphs;\n  }\n\n  /**\n   * The size of the font’s internal coordinate grid\n   * @type {number}\n   */\n  get unitsPerEm() {\n    return this.head.unitsPerEm;\n  }\n\n  /**\n   * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n   * @type {BBox}\n   */\n  @cache\n  get bbox() {\n    return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n  }\n\n  @cache\n  get _cmapProcessor() {\n    return new CmapProcessor(this.cmap);\n  }\n\n  /**\n   * An array of all of the unicode code points supported by the font.\n   * @type {number[]}\n   */\n  @cache\n  get characterSet() {\n    return this._cmapProcessor.getCharacterSet();\n  }\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n  hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  }\n\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n  glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  }\n\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n  glyphsForString(string) {\n    let glyphs = [];\n    let len = string.length;\n    let idx = 0;\n    let last = -1;\n    let state = -1;\n\n    while (idx <= len) {\n      let code = 0;\n      let nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          let next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n\n        // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n        nextState = ((0xfe00 <= code && code <= 0xfe0f) || (0xe0100 <= code && code <= 0xe01ef)) ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  }\n\n  @cache\n  get _layoutEngine() {\n    return new LayoutEngine(this);\n  }\n\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @return {GlyphRun}\n   */\n  layout(string, userFeatures, script, language) {\n    return this._layoutEngine.layout(string, userFeatures, script, language);\n  }\n\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n  stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  }\n\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n  get availableFeatures() {\n    return this._layoutEngine.getAvailableFeatures();\n  }\n\n  _getBaseGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n\n      } else if (this.directory.tables['CFF ']) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n  getGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n\n      } else if ((this.directory.tables.COLR) && (this.directory.tables.CPAL)) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n  createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  }\n\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n  get variationAxes() {\n    let res = {};\n    if (!this.fvar) {\n      return res;\n    }\n\n    for (let axis of this.fvar.axis) {\n      res[axis.axisTag.trim()] = {\n        name: axis.name.en,\n        min: axis.minValue,\n        default: axis.defaultValue,\n        max: axis.maxValue\n      };\n    }\n\n    return res;\n  }\n\n  /**\n   * Returns an object describing the named variation instances\n   * that the font designer has specified. Keys are variation names\n   * and values are the variation settings for this instance.\n   *\n   * @type {object}\n   */\n  get namedVariations() {\n    let res = {};\n    if (!this.fvar) {\n      return res;\n    }\n\n    for (let instance of this.fvar.instance) {\n      let settings = {};\n      for (let i = 0; i < this.fvar.axis.length; i++) {\n        let axis = this.fvar.axis[i];\n        settings[axis.axisTag.trim()] = instance.coord[i];\n      }\n\n      res[instance.name.en] = settings;\n    }\n\n    return res;\n  }\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n  getVariation(settings) {\n    if (!this.directory.tables.fvar || !this.directory.tables.gvar || !this.directory.tables.glyf) {\n      throw new Error('Variations require a font with the fvar, gvar, and glyf tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if (typeof settings !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    }\n\n    // normalize the coordinates\n    let coords = this.fvar.axis.map((axis, i) => {\n      let axisTag = axis.axisTag.trim();\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n\n    let stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n\n    let font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n\n    return font;\n  }\n\n  // Standardized format plugin API\n  getFont(name) {\n    return this.getVariation(name);\n  }\n}\n","import r from 'restructure';\nimport tables from './';\n\nlet WOFFDirectoryEntry = new r.Struct({\n  tag:          new r.String(4),\n  offset:       new r.Pointer(r.uint32, 'void', {type: 'global'}),\n  compLength:   r.uint32,\n  length:       r.uint32,\n  origChecksum: r.uint32\n});\n\nlet WOFFDirectory = new r.Struct({\n  tag:            new r.String(4), // should be 'wOFF'\n  flavor:         r.uint32,\n  length:         r.uint32,\n  numTables:      r.uint16,\n  reserved:       new r.Reserved(r.uint16),\n  totalSfntSize:  r.uint32,\n  majorVersion:   r.uint16,\n  minorVersion:   r.uint16,\n  metaOffset:     r.uint32,\n  metaLength:     r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset:     r.uint32,\n  privLength:     r.uint32,\n  tables:         new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function() {\n  let tables = {};\n  for (let table of this.tables) {\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nexport default WOFFDirectory;\n","import TTFFont from './TTFFont';\nimport WOFFDirectory from './tables/WOFFDirectory';\nimport tables from './tables';\nimport inflate from 'tiny-inflate';\nimport r from 'restructure';\n\nexport default class WOFFFont extends TTFFont {\n  static probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  }\n\n  _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, { _startOffset: 0 });\n  }\n\n  _getTableStream(tag) {\n    let table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n        let outBuffer = new Buffer(table.length);\n        let buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  }\n}\n","import TTFGlyph from './TTFGlyph';\n\n/**\n * Represents a TrueType glyph in the WOFF2 format, which compresses glyphs differently.\n */\nexport default class WOFF2Glyph extends TTFGlyph {\n  _decode() {\n    // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n    return this._font._transformedGlyphs[this.id];\n  }\n\n  _getCBox() {\n    return this.path.bbox;\n  }\n}\n","import r from 'restructure';\n\nconst Base128 = {\n  decode(stream) {\n    let result = 0;\n    let iterable = [0, 1, 2, 3, 4];\n    for (let j = 0; j < iterable.length; j++) {\n      let i = iterable[j];\n      let code = stream.readUInt8();\n\n      // If any of the top seven bits are set then we're about to overflow.\n      if (result & 0xe0000000) {\n        throw new Error('Overflow');\n      }\n\n      result = (result << 7) | (code & 0x7f);\n      if ((code & 0x80) === 0) {\n        return result;\n      }\n    }\n\n    throw new Error('Bad base 128 number');\n  }\n};\n\nlet knownTags = [\n  'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'OS/2', 'post', 'cvt ',\n  'fpgm', 'glyf', 'loca', 'prep', 'CFF ', 'VORG', 'EBDT', 'EBLC', 'gasp',\n  'hdmx', 'kern', 'LTSH', 'PCLT', 'VDMX', 'vhea', 'vmtx', 'BASE', 'GDEF',\n  'GPOS', 'GSUB', 'EBSC', 'JSTF', 'MATH', 'CBDT', 'CBLC', 'COLR', 'CPAL',\n  'SVG ', 'sbix', 'acnt', 'avar', 'bdat', 'bloc', 'bsln', 'cvar', 'fdsc',\n  'feat', 'fmtx', 'fvar', 'gvar', 'hsty', 'just', 'lcar', 'mort', 'morx',\n  'opbd', 'prop', 'trak', 'Zapf', 'Silf', 'Glat', 'Gloc', 'Feat', 'Sill'\n];\n\nlet WOFF2DirectoryEntry = new r.Struct({\n  flags: r.uint8,\n  customTag: new r.Optional(new r.String(4), t => (t.flags & 0x3f) === 0x3f),\n  tag: t => t.customTag || knownTags[t.flags & 0x3f],// || (() => { throw new Error(`Bad tag: ${flags & 0x3f}`); })(); },\n  length: Base128,\n  transformVersion: t => (t.flags >>> 6) & 0x03,\n  transformed: t => (t.tag === 'glyf' || t.tag === 'loca') ? t.transformVersion === 0 : t.transformVersion !== 0,\n  transformLength: new r.Optional(Base128, t => t.transformed)\n});\n\nlet WOFF2Directory = new r.Struct({\n  tag: new r.String(4), // should be 'wOF2'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  totalCompressedSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFF2DirectoryEntry, 'numTables')\n});\n\nWOFF2Directory.process = function() {\n  let tables = {};\n  for (let i = 0; i < this.tables.length; i++) {\n    let table = this.tables[i];\n    tables[table.tag] = table;\n  }\n\n  return this.tables = tables;\n};\n\nexport default WOFF2Directory;\n","import r from 'restructure';\nimport brotli from 'brotli/decompress';\nimport TTFFont from './TTFFont';\nimport TTFGlyph, { Point } from './glyph/TTFGlyph';\nimport WOFF2Glyph from './glyph/WOFF2Glyph';\nimport WOFF2Directory from './tables/WOFF2Directory';\n\n/**\n * Subclass of TTFFont that represents a TTF/OTF font compressed by WOFF2\n * See spec here: http://www.w3.org/TR/WOFF2/\n */\nexport default class WOFF2Font extends TTFFont {\n  static probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOF2';\n  }\n\n  _decodeDirectory() {\n    this.directory = WOFF2Directory.decode(this.stream);\n    this._dataPos = this.stream.pos;\n  }\n\n  _decompress() {\n    // decompress data and setup table offsets if we haven't already\n    if (!this._decompressed) {\n      this.stream.pos = this._dataPos;\n      let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n\n      let decompressedSize = 0;\n      for (let tag in this.directory.tables) {\n        let entry = this.directory.tables[tag];\n        entry.offset = decompressedSize;\n        decompressedSize += (entry.transformLength != null) ? entry.transformLength : entry.length;\n      }\n\n      let decompressed = brotli(buffer, decompressedSize);\n      if (!decompressed) {\n        throw new Error('Error decoding compressed data in WOFF2');\n      }\n\n      this.stream = new r.DecodeStream(new Buffer(decompressed));\n      this._decompressed = true;\n    }\n  }\n\n  _decodeTable(table) {\n    this._decompress();\n    return super._decodeTable(table);\n  }\n\n  // Override this method to get a glyph and return our\n  // custom subclass if there is a glyf table.\n  _getBaseGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n        if (!this._transformedGlyphs) { this._transformGlyfTable(); }\n        return this._glyphs[glyph] = new WOFF2Glyph(glyph, characters, this);\n\n      } else {\n        return super._getBaseGlyph(glyph, characters);\n      }\n    }\n  }\n\n  _transformGlyfTable() {\n    this._decompress();\n    this.stream.pos = this.directory.tables.glyf.offset;\n    let table = GlyfTable.decode(this.stream);\n    let glyphs = [];\n\n    for (let index = 0; index < table.numGlyphs; index++) {\n      let glyph = {};\n      let nContours = table.nContours.readInt16BE();\n      glyph.numberOfContours = nContours;\n\n      if (nContours > 0) { // simple glyph\n        let nPoints = [];\n        let totalPoints = 0;\n\n        for (let i = 0; i < nContours; i++) {\n          let r = read255UInt16(table.nPoints);\n          nPoints.push(r);\n          totalPoints += r;\n        }\n\n        glyph.points = decodeTriplet(table.flags, table.glyphs, totalPoints);\n        for (let i = 0; i < nContours; i++) {\n          glyph.points[nPoints[i] - 1].endContour = true;\n        }\n\n        var instructionSize = read255UInt16(table.glyphs);\n\n      } else if (nContours < 0) { // composite glyph\n        let haveInstructions = TTFGlyph.prototype._decodeComposite.call({ _font: this }, glyph, table.composites);\n        if (haveInstructions) {\n          var instructionSize = read255UInt16(table.glyphs);\n        }\n      }\n\n      glyphs.push(glyph);\n    }\n\n    this._transformedGlyphs = glyphs;\n  }\n}\n\n// Special class that accepts a length and returns a sub-stream for that data\nclass Substream {\n  constructor(length) {\n    this.length = length;\n    this._buf = new r.Buffer(length);\n  }\n\n  decode(stream, parent) {\n    return new r.DecodeStream(this._buf.decode(stream, parent));\n  }\n}\n\n// This struct represents the entire glyf table\nlet GlyfTable = new r.Struct({\n  version: r.uint32,\n  numGlyphs: r.uint16,\n  indexFormat: r.uint16,\n  nContourStreamSize: r.uint32,\n  nPointsStreamSize: r.uint32,\n  flagStreamSize: r.uint32,\n  glyphStreamSize: r.uint32,\n  compositeStreamSize: r.uint32,\n  bboxStreamSize: r.uint32,\n  instructionStreamSize: r.uint32,\n  nContours: new Substream('nContourStreamSize'),\n  nPoints: new Substream('nPointsStreamSize'),\n  flags: new Substream('flagStreamSize'),\n  glyphs: new Substream('glyphStreamSize'),\n  composites: new Substream('compositeStreamSize'),\n  bboxes: new Substream('bboxStreamSize'),\n  instructions: new Substream('instructionStreamSize')\n});\n\nconst WORD_CODE = 253;\nconst ONE_MORE_BYTE_CODE2 = 254;\nconst ONE_MORE_BYTE_CODE1 = 255;\nconst LOWEST_U_CODE = 253;\n\nfunction read255UInt16(stream) {\n  let code = stream.readUInt8();\n\n  if (code === WORD_CODE) {\n    return stream.readUInt16BE();\n  }\n\n  if (code === ONE_MORE_BYTE_CODE1) {\n    return stream.readUInt8() + LOWEST_U_CODE;\n  }\n\n  if (code === ONE_MORE_BYTE_CODE2) {\n    return stream.readUInt8() + LOWEST_U_CODE * 2;\n  }\n\n  return code;\n}\n\nfunction withSign(flag, baseval) {\n  return flag & 1 ? baseval : -baseval;\n}\n\nfunction decodeTriplet(flags, glyphs, nPoints) {\n  let y;\n  let x = y = 0;\n  let res = [];\n\n  for (let i = 0; i < nPoints; i++) {\n    let dx = 0, dy = 0;\n    let flag = flags.readUInt8();\n    let onCurve = !(flag >> 7);\n    flag &= 0x7f;\n\n    if (flag < 10) {\n      dx = 0;\n      dy = withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n\n    } else if (flag < 20) {\n      dx = withSign(flag, (((flag - 10) & 14) << 7) + glyphs.readUInt8());\n      dy = 0;\n\n    } else if (flag < 84) {\n      var b0 = flag - 20;\n      var b1 = glyphs.readUInt8();\n      dx = withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n      dy = withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n\n    } else if (flag < 120) {\n      var b0 = flag - 84;\n      dx = withSign(flag, 1 + ((b0 / 12) << 8) + glyphs.readUInt8());\n      dy = withSign(flag >> 1, 1 + (((b0 % 12) >> 2) << 8) + glyphs.readUInt8());\n\n    } else if (flag < 124) {\n      var b1 = glyphs.readUInt8();\n      let b2 = glyphs.readUInt8();\n      dx = withSign(flag, (b1 << 4) + (b2 >> 4));\n      dy = withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n\n    } else {\n      dx = withSign(flag, glyphs.readUInt16BE());\n      dy = withSign(flag >> 1, glyphs.readUInt16BE());\n    }\n\n    x += dx;\n    y += dy;\n    res.push(new Point(onCurve, false, x, y));\n  }\n\n  return res;\n}\n","import r from 'restructure';\nimport TTFFont from './TTFFont';\nimport Directory from './tables/directory';\nimport tables from './tables';\n\nlet TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts:   r.uint32,\n    offsets:    new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts:   r.uint32,\n    offsets:    new r.Array(r.uint32, 'numFonts'),\n    dsigTag:    r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nexport default class TrueTypeCollection {\n  static probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  }\n\n  constructor(stream) {\n    this.stream = stream;\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  getFont(name) {\n    for (let offset of this.header.offsets) {\n      let stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      let font = new TTFFont(stream);\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  }\n\n  get fonts() {\n    let fonts = [];\n    for (let offset of this.header.offsets) {\n      let stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      fonts.push(new TTFFont(stream));\n    }\n\n    return fonts;\n  }\n}\n","import r from 'restructure';\nimport TTFFont from './TTFFont';\n\nlet DFontName = new r.String(r.uint8);\nlet DFontData = new r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\n\nlet Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\n\nlet Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, t => t.maxTypeIndex + 1), { type: 'parent' })\n});\n\nlet TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, t => t.length + 1)\n});\n\nlet DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\n\nlet DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nexport default class DFont {\n  static probe(buffer) {\n    let stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (let type of header.map.typeList.types) {\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  constructor(stream) {\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (let type of this.header.map.typeList.types) {\n      for (let ref of type.refList) {\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (let ref of this.sfnt.refList) {\n      let pos = this.header.dataOffset + ref.dataOffset + 4;\n      let stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      let font = new TTFFont(stream);\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  }\n\n  get fonts() {\n    let fonts = [];\n    for (let ref of this.sfnt.refList) {\n      let pos = this.header.dataOffset + ref.dataOffset + 4;\n      let stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      fonts.push(new TTFFont(stream));\n    }\n\n    return fonts;\n  }\n}\n","import fontkit from './base';\nimport TTFFont from './TTFFont';\nimport WOFFFont from './WOFFFont';\nimport WOFF2Font from './WOFF2Font';\nimport TrueTypeCollection from './TrueTypeCollection';\nimport DFont from './DFont';\n\n// Register font formats\nfontkit.registerFormat(TTFFont);\nfontkit.registerFormat(WOFFFont);\nfontkit.registerFormat(WOFF2Font);\nfontkit.registerFormat(TrueTypeCollection);\nfontkit.registerFormat(DFont);\n\nexport default fontkit;\n"],"names":["fs","require","fontkit","logErrors","formats","registerFormat","format","push","openSync","filename","postscriptName","buffer","readFileSync","create","open","callback","readFile","err","font","e","i","length","probe","r","DecodeStream","getFont","Error","cache","target","key","descriptor","get","value","call","fn","memoized","args","has","result","apply","set","SubHeader","Struct","uint16","int16","CmapGroup","uint32","UnicodeValueRange","uint24","uint8","UVSMapping","DefaultUVS","Array","NonDefaultUVS","VarSelectorRecord","Pointer","type","CmapSubtable","VersionedStruct","LazyArray","Math","max","t","subHeaderKeys","segCountX2","Reserved","_currentOffset","CmapEntry","lazy","int32","Bitfield","HmtxEntry","parent","hhea","numberOfMetrics","maxp","numGlyphs","getEncoding","platformID","encodingID","languageID","MAC_LANGUAGE_ENCODINGS","ENCODINGS","LANGUAGES","NameRecord","String","relativeTo","allowNull","LangTagRecord","NameTable","NAMES","process","stream","records","record","language","langTags","tag","nameID","obj","string","preEncode","isArray","version","val","indexOf","Buffer","byteLength","en","count","stringOffset","size","OS2","versions","fixed32","loca","offsets","CFFIndex","decode","readUInt16BE","offSize","readUInt8","offsetType","pos","ret","startPos","start","end","arr","offset","item","encode","writeUInt16BE","sizes","s","writeUInt8","FLOAT_EOF","FLOAT_LOOKUP","FLOAT_ENCODE_LOOKUP","CFFOperand","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","c1","c2","writeInt16BE","CFFDict","ops","fields","field","decodeOperands","operands","map","op","encodeOperands","ctx","PropertyDescriptor","dict","includePointers","startOffset","len","k","isEqual","pointerSize","pointerOffset","pointers","ptr","CFFPointer","options","Ptr","valueOf","StandardEncoding","ExpertEncoding","ISOAdobeCharset","ExpertCharset","ExpertSubsetCharset","PredefinedOp","predefinedOps","index","CFFEncodingVersion","Range1","Range2","CFFCustomEncoding","CFFEncoding","RangeArray","resolveLength","res","range","nLeft","CFFCustomCharset","CharStrings","CFFCharset","FDRange","FDSelect","CFFPrivateDict","CFFPrivateOp","FontDict","CFFTopDict","CFFHeader","CFFTop","CFFFont","top","topDictIndex","isCIDFont","topDict","ROS","sid","standardStrings","stringIndex","getCharString","glyph","readBuffer","getGlyphName","gid","charset","glyphs","ranges","first","fdForGlyph","fds","low","high","mid","fd","privateDictForGlyph","FDArray","Private","nameIndex","FullName","FamilyName","VerticalOrigin","BigMetrics","int8","SmallMetrics","EBDTComponent","ByteAligned","BitAligned","SBitLineMetrics","CodeOffsetPair","IndexSubtable","lastGlyphIndex","firstGlyphIndex","IndexSubtableArray","BitmapSizeTable","ImageTable","LayerRecord","BaseGlyphRecord","ColorRecord","LangSysTable","LangSysRecord","Script","ScriptRecord","ScriptList","Feature","FeatureRecord","FeatureList","LookupFlags","LookupList","SubTable","Lookup","RangeRecord","Coverage","ClassRangeRecord","ClassDef","Device","LookupRecord","Rule","glyphCount","RuleSet","ClassRule","ClassSet","Context","ChainRule","inputGlyphCount","ChainRuleSet","ChainingContext","BaseCoord","BaseValues","FeatMinMaxRecord","MinMax","BaseLangSysRecord","BaseScript","BaseScriptRecord","BaseScriptList","BaseTagList","Axis","AttachPoint","AttachList","CaretValue","LigGlyph","LigCaretList","MarkGlyphSetsDef","ValueFormat","types","ValueRecord","buildStruct","struct","rel","_startOffset","PairValueRecord","PairSet","Class2Record","Anchor","EntryExitRecord","MarkRecord","MarkArray","BaseRecord","classCount","BaseArray","ComponentRecord","LigatureAttach","LigatureArray","GPOSLookup","extension","Sequence","AlternateSet","Ligature","compCount","LigatureSet","GSUBLookup","JstfGSUBModList","JstfPriority","JstfLangSys","JstfLangSysRecord","JstfScript","JstfScriptRecord","Signature","SignatureBlock","GaspRange","DeviceRecord","KernPair","ClassTable","Kern2Array","leftTable","off","rowWidth","KernSubtable","leftClassCount","rightClassCount","KernTable","Ratio","vTable","VdmxGroup","VmtxEntry","vhea","shortFrac","Fixed","Correspondence","Segment","UnboundedArrayAccessor","base","_items","getItem","inspect","constructor","name","UnboundedArray","LookupTable","ValueType","Shadow","BinarySearchHeader","LookupSegmentSingle","LookupSegmentArray","lastGlyph","firstGlyph","LookupSingle","binarySearchHeader","nUnits","StateTable","entryData","lookupType","entry","Entry","StateArray","nClasses","StateHeader","StateTable1","ClassLookupTable","newStateOffset","stateArray","StateHeader1","BslnSubtable","Setting","fontFeatures","FeatureName","Instance","axisCount","Offset","flags","readUInt32BE","gvar","WidthDeltaRecord","WidthDeltaCluster","ActionData","Action","actionLength","PostcompensationAction","PostCompensationTable","JustificationTable","LigatureData","ContextualData","InsertionData","SubstitutionTable","SubtableData","Subtable","FeatureEntry","MorxChain","OpticalBounds","tables","cmap","head","hmtx","post","fpgm","prep","cvt","glyf","VORG","EBLC","CBLC","sbix","COLR","CPAL","BASE","GDEF","GPOS","GSUB","JSTF","DSIG","gasp","hdmx","kern","LTSH","PCLT","VDMX","vmtx","avar","bsln","feat","fvar","just","morx","opbd","TableEntry","Directory","table","VoidPointer","Tables","numTables","searchRange","floor","log","LN2","entrySelector","rangeShift","binarySearch","cmp","min","iconv","CmapProcessor","cmapTable","encoding","findSubtable","encodingExists","uvs","pairs","lookup","codepoint","variationSelector","buf","getVariationSelector","codeMap","segCount","startCode","endCode","rangeOffset","idRangeOffset","idDelta","glyphIndexArray","glyphIndices","firstCode","nGroups","group","groups","startCharCode","endCharCode","glyphID","selectors","varSelectors","toArray","x","varSelector","sel","defaultUVS","startUnicodeValue","additionalCount","nonDefaultUVS","unicodeValue","getCharacterSet","endCodes","tail","codePointsForGlyph","delta","c","g","KernProcessor","positions","glyphIndex","left","id","right","xAdvance","getKerning","coverage","crossStream","horizontal","vertical","variation","subtable","pairIdx","pair","leftOffset","rightOffset","nGlyphs","array","rightTable","values","kernValue","kernIndex","leftClass","rightClass","override","UnicodeLayoutEngine","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","width","xOffset","yOffset","yGap","unitsPerEm","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","height","yAdvance","codePoint","unicode","BBox","Infinity","addPoint","y","GlyphRun","bbox","p","GlyphPosition","UNICODE_SCRIPTS","forString","idx","code","charCodeAt","next","script","getScript","Unknown","forCodePoints","RTL","direction","features","feature","selector","OTMapping","slice","characterAlternatives","AATMapping","ot","aat","mapOTToAAT","mapFeatureStrings","f","setting","isNaN","typeCode","settingCode","mapAATToOT","AATLookupTable","seg","segments","glyphsForValue","classValue","segment","START_OF_TEXT_STATE","END_OF_TEXT_CLASS","OUT_OF_BOUNDS_CLASS","DELETED_GLYPH_CLASS","DONT_ADVANCE","AATStateMachine","stateTable","lookupTable","classTable","reverse","processEntry","currentState","dir","classCode","shouldAdvance","row","entryIndex","entryTable","newState","traverse","opts","state","visited","add","enter","exit","MARK_FIRST","MARK_LAST","VERB","SET_MARK","SET_COMPONENT","PERFORM_ACTION","LAST_MASK","STORE_MASK","OFFSET_MASK","REVERSE_DIRECTION","CURRENT_INSERT_BEFORE","MARKED_INSERT_BEFORE","CURRENT_INSERT_COUNT","MARKED_INSERT_COUNT","AATMorxProcessor","processIndicRearragement","bind","processContextualSubstitution","processLigature","processNoncontextualSubstitutions","processGlyphInsertion","inputCache","chains","chain","defaultFlags","featureType","featureSetting","disableFlags","enableFlags","subtables","subFeatureFlags","processSubtable","splice","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","subsitutions","substitutionTable","items","markIndex","getGlyph","currentIndex","actions","ligatureActions","components","ligatureList","actionIndex","action","last","ligatureIndex","ligatureGlyphs","componentGlyph","pop","unshift","store","component","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","insertions","insertionActions","markedInsertIndex","currentInsertIndex","getSupportedFeatures","generateInputs","generateInputCache","generateInputsForSubtable","input","stack","found","swap","rangeA","rangeB","reverseA","reverseB","reorderGlyphs","verb","AATLayoutEngine","morxProcessor","substitute","isRTL","AATFeatureMap","getAvailableFeatures","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","ShapingPlan","stages","globalFeatures","allFeatures","_addFeatures","stage","_addGlobal","arg","global","concat","local","addStage","assignGlobalFeatures","processor","selectScript","applyFeatures","COMMON_FEATURES","FRACTIONAL_FEATURES","HORIZONTAL_FEATURES","DIRECTIONAL_FEATURES","DefaultShaper","plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","isDigit","numr","frac","dnom","zeroMarkWidths","trie","UnicodeTrie","__dirname","FEATURES","ShapingClasses","ISOL","FINA","FIN2","FIN3","MEDI","MED2","INIT","NONE","STATE_TABLE","ArabicShaper","prev","curAction","prevAction","getShapingClass","Transparent","category","getCategory","Non_Joining","GlyphIterator","reset","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","ignoreLigatures","isLigature","move","peek","increment","peekIndex","abs","DEFAULT_SCRIPTS","OTProcessor","scriptTag","languageTag","lookups","ligatureID","findScript","scriptList","changed","langugeTag","langSysRecords","lang","langSys","defaultLangSys","featureIndexes","featureIndex","featureList","lookupsForFeatures","exclude","lookupListIndexes","lookupIndex","lookupList","sort","a","advances","applyLookups","glyphIterator","cur","subTables","applyLookup","applyLookupList","lookupRecords","lookupRecord","sequenceIndex","lookupListIndex","coverageIndex","rangeRecords","startCoverageIndex","match","sequence","matched","sequenceMatches","sequenceMatchIndices","coverageSequenceMatches","getClassID","classDef","startGlyph","classValueArray","classRangeRecord","class","classSequenceMatches","classID","applyContext","ruleSets","rule","classSet","classes","coverages","applyChainingContext","chainRuleSets","backtrack","lookahead","inputClassDef","rules","chainClassSet","backtrackClassDef","lookaheadClassDef","backtrackGlyphCount","backtrackCoverage","inputCoverage","lookaheadCoverage","GlyphInfo","_font","ligatureComponent","ligated","cursiveAttachment","markAttachment","shaperInfo","substituted","_id","glyphClassDef","prototype","every","HangulShaper","getType","DECOMPOSE","hasGlyphForCodePoint","decompose","COMPOSE","compose","TONE_MARK","INVALID","insertDottedCircle","HANGUL_BASE","HANGUL_END","HANGUL_COUNT","L_BASE","V_BASE","T_BASE","L_COUNT","V_COUNT","T_COUNT","L_END","V_END","T_END","DOTTED_CIRCLE","isL","isV","isT","isTone","isLVT","isLV","isCombiningL","isCombiningV","isCombiningT","X","L","V","T","LV","LVT","M","NO_ACTION","glyphForCodePoint","l","v","ljmo","vjmo","insert","tjmo","prevType","lv","del","getLength","reorderToneMark","advanceWidth","dottedCircle","categories","useData","decompositions","StateMachine","UniversalShaper","setupSyllables","clearSubstitutionFlags","recordRphf","recordPref","reorder","decomposed","useCategory","USEInfo","syllableType","syllable","tags","limit","rphf","nextSyllable","j","info","isBase","isHalant","isLigated","SHAPERS","choose","shaper","GSUBProcessor","deltaGlyphID","sequences","curGlyph","replacement","undefined","USER_INDEX","alternateSet","ligatureSets","ligature","characters","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","GPOSProcessor","applyPositionValue","xPlacement","yPlacement","nextGlyph","pairSets","secondGlyph","value1","value2","class1","classDef1","class2","classDef2","classRecords","nextIndex","curRecord","entryExitRecords","exitAnchor","nextRecord","entryAnchor","getAnchor","d","rightToLeft","markCoverage","baseGlyphIndex","baseIndex","baseCoverage","markRecord","markArray","baseAnchor","baseArray","applyAnchor","ligIndex","ligatureCoverage","ligAttach","ligatureArray","markGlyph","ligGlyph","compIndex","mark1Index","mark1Coverage","prevIndex","good","mark2Index","mark2Coverage","mark1Array","mark2Array","baseCoords","markCoords","markAnchor","basePos","markPos","anchor","xCoordinate","yCoordinate","fixCursiveAttachment","fixMarkAttachment","OTLayoutEngine","glyphInfos","setup","Shapers","glyphInfo","zeroMarkAdvances","cleanup","LayoutEngine","unicodeLayoutEngine","kernProcessor","engine","layout","glyphsForString","positioned","SVG_COMMANDS","Path","commands","_bbox","_cbox","toFunction","cmds","command","join","Function","toSVG","round","cx","cy","pow","p0","p1","p2","p3","qp1x","qp1y","p3x","p3y","cp1x","cp1y","cp2x","cp2y","b2ac","t1","sqrt","t2","Glyph","_getPath","_getCBox","path","_getBBox","_getTableMetrics","metrics","metric","advance","bearings","_getMetrics","_metrics","leftBearing","bearing","advanceHeight","topBearing","os2","typoAscender","typoDescender","ascent","descent","_getName","StandardNames","glyphNameIndex","names","fromCharCode","render","save","scale","fill","restore","GlyfHeader","ON_CURVE","X_SHORT_VECTOR","Y_SHORT_VECTOR","REPEAT","SAME_X","SAME_Y","ARG_1_AND_2_ARE_WORDS","WE_HAVE_A_SCALE","MORE_COMPONENTS","WE_HAVE_AN_X_AND_Y_SCALE","WE_HAVE_A_TWO_BY_TWO","WE_HAVE_INSTRUCTIONS","Point","onCurve","endContour","Component","dx","dy","scaleX","scaleY","scale01","scale10","TTFGlyph","internal","_variationProcessor","_getTableStream","xMin","yMin","xMax","yMax","_parseGlyphCoord","short","same","_decode","glyfPos","nextPos","numberOfContours","_decodeSimple","_decodeComposite","points","endPtsOfContours","instructions","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_getContours","contours","contour","firstPt","lastPt","curvePt","moveTo","pt","prevPt","lineTo","midX","midY","quadraticCurveTo","closePath","CFFGlyph","bias","cff","trans","nStems","usedGsubrs","usedSubrs","_usedGsubrs","_usedSubrs","gsubrs","globalSubrIndex","gsubrsBias","privateDict","subrs","Subrs","subrsBias","parseStems","shift","nominalWidthX","parse","phase","c1x","c1y","c2x","c2y","bezierCurveTo","subr","haveWidth","s1","s2","v1","v2","random","n","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","SBIXImage","buflen","SBIXGlyph","getImageForSize","imageTables","ppem","imageOffsets","img","image","data","originX","originY","renderOutlines","COLRLayer","color","COLRGlyph","layers","layer","fillColor","red","green","blue","alpha","cpal","colr","baseGlyphRecord","rec","baseLayer","_getBaseGlyph","firstLayerIndex","numLayers","layerRecords","colorRecords","paletteIndex","TUPLES_SHARE_POINT_NUMBERS","TUPLE_COUNT_MASK","EMBEDDED_TUPLE_COORD","INTERMEDIATE_TUPLE","PRIVATE_POINT_NUMBERS","TUPLE_INDEX_MASK","POINTS_ARE_WORDS","POINT_RUN_COUNT_MASK","DELTAS_ARE_ZERO","DELTAS_ARE_WORDS","DELTA_RUN_COUNT_MASK","GlyphVariationProcessor","coords","normalizedCoords","normalizeCoords","normalized","axis","defaultValue","minValue","maxValue","correspondence","fromCoord","toCoord","glyphPoints","tupleCount","offsetToData","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleIndex","tupleCoords","globalCoordCount","globalCoords","startCoords","endCoords","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","deltas","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","out","ref","Subset","mapping","includeGlyph","encodeStream","EncodeStream","nextTick","Glyf","TTFGlyphEncoder","encodeSimple","xPoints","yPoints","lastX","lastY","lastFlag","pointCount","_encodePoint","shortFlag","sameFlag","diff","TTFSubset","glyphEncoder","_addGlyph","curOffset","nextOffset","cloneDeep","indexToLocFormat","CFFSubset","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","FontName","createCIDFontdict","addString","Encoding","CIDCount","header","TTFFont","toString","variationCoords","_directoryPos","_tables","_glyphs","_decodeDirectory","directory","_getTable","_decodeTable","error","getName","nextState","_layoutEngine","createSubset","getVariation","settings","namedVariations","axisTag","trim","lineGap","underlinePosition","underlineThickness","italicAngle","capHeight","xHeight","instance","coord","WOFFDirectoryEntry","WOFFDirectory","WOFFFont","compLength","outBuffer","inflate","WOFF2Glyph","_transformedGlyphs","Base128","knownTags","WOFF2DirectoryEntry","Optional","customTag","transformVersion","transformed","WOFF2Directory","WOFF2Font","_dataPos","_decompress","_decompressed","totalCompressedSize","decompressedSize","transformLength","decompressed","brotli","_transformGlyfTable","GlyfTable","nContours","totalPoints","read255UInt16","decodeTriplet","instructionSize","composites","Substream","_buf","WORD_CODE","ONE_MORE_BYTE_CODE2","ONE_MORE_BYTE_CODE1","LOWEST_U_CODE","withSign","baseval","b0","b2","TTCHeader","TrueTypeCollection","readString","fonts","DFontName","DFontData","Ref","Type","maxTypeIndex","TypeList","DFontMap","DFontHeader","DFont","typeList","refList","nameOffset","nameListOffset","sfnt","dataOffset"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEA,IAAIC,UAAU,EAAd;AACA,AAEAA,QAAQC,SAAR,GAAoB,KAApB;;AAEA,IAAIC,UAAU,EAAd;AACAF,QAAQG,cAAR,GAAyB,UAASC,MAAT,EAAiB;UAChCC,IAAR,CAAaD,MAAb;CADF;;AAIAJ,QAAQM,QAAR,GAAmB,UAASC,QAAT,EAAmBC,cAAnB,EAAmC;MAChDC,SAASX,GAAGY,YAAH,CAAgBH,QAAhB,CAAb;SACOP,QAAQW,MAAR,CAAeF,MAAf,EAAuBD,cAAvB,CAAP;CAFF;;AAKAR,QAAQY,IAAR,GAAe,UAASL,QAAT,EAAmBC,cAAnB,EAAmCK,QAAnC,EAA6C;MACtD,OAAOL,cAAP,KAA0B,UAA9B,EAA0C;eAC7BA,cAAX;qBACiB,IAAjB;;;KAGCM,QAAH,CAAYP,QAAZ,EAAsB,UAASQ,GAAT,EAAcN,MAAd,EAAsB;QACtCM,GAAJ,EAAS;aAASF,SAASE,GAAT,CAAP;;;QAEP;UACEC,OAAOhB,QAAQW,MAAR,CAAeF,MAAf,EAAuBD,cAAvB,CAAX;KADF,CAEE,OAAOS,CAAP,EAAU;aACHJ,SAASI,CAAT,CAAP;;;WAGKJ,SAAS,IAAT,EAAeG,IAAf,CAAP;GATF;;;CANF;;AAqBAhB,QAAQW,MAAR,GAAiB,UAASF,MAAT,EAAiBD,cAAjB,EAAiC;OAC3C,IAAIU,IAAI,CAAb,EAAgBA,IAAIhB,QAAQiB,MAA5B,EAAoCD,GAApC,EAAyC;QACnCd,SAASF,QAAQgB,CAAR,CAAb;QACId,OAAOgB,KAAP,CAAaX,MAAb,CAAJ,EAA0B;UACpBO,OAAO,IAAIZ,MAAJ,CAAW,IAAIiB,EAAEC,YAAN,CAAmBb,MAAnB,CAAX,CAAX;UACID,cAAJ,EAAoB;eACXQ,KAAKO,OAAL,CAAaf,cAAb,CAAP;;;aAGKQ,IAAP;;;;QAIE,IAAIQ,KAAJ,CAAU,qBAAV,CAAN;CAbF;;ACvCA;;;;;AAKA,AAAO,SAASC,KAAT,CAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,UAA5B,EAAwC;MACzCA,WAAWC,GAAf,EAAoB;;UACdA,MAAMD,WAAWC,GAArB;iBACWA,GAAX,GAAiB,YAAW;YACtBC,QAAQD,IAAIE,IAAJ,CAAS,IAAT,CAAZ;+BACsB,IAAtB,EAA4BJ,GAA5B,EAAiC,EAAEG,YAAF,EAAjC;eACOA,KAAP;OAHF;;GAFF,MAOO,IAAI,OAAOF,WAAWE,KAAlB,KAA4B,UAAhC,EAA4C;;UAC7CE,KAAKJ,WAAWE,KAApB;;;WAEO;aAAA,iBACC;gBACAL,QAAQ,UAAZ;qBACSQ,QAAT,GAA2B;gDAANC,IAAM;oBAAA;;;kBACrBP,MAAMO,KAAKf,MAAL,GAAc,CAAd,GAAkBe,KAAK,CAAL,CAAlB,GAA4B,OAAtC;kBACIT,MAAMU,GAAN,CAAUR,GAAV,CAAJ,EAAoB;uBACXF,MAAMI,GAAN,CAAUF,GAAV,CAAP;;;kBAGES,SAASJ,GAAGK,KAAH,CAAS,IAAT,EAAeH,IAAf,CAAb;oBACMI,GAAN,CAAUX,GAAV,EAAeS,MAAf;qBACOA,MAAP;;;mCAGoB,IAAtB,EAA4BT,GAA5B,EAAiC,EAACG,OAAOG,QAAR,EAAjC;mBACOA,QAAP;;;;;;;;;;AC7BR,IAAIM,YAAY,IAAIlB,EAAEmB,MAAN,CAAa;aACXnB,EAAEoB,MADS;cAEXpB,EAAEoB,MAFS;WAGXpB,EAAEqB,KAHS;iBAIXrB,EAAEoB;CAJJ,CAAhB;;AAOA,IAAIE,YAAY,IAAItB,EAAEmB,MAAN,CAAa;iBACXnB,EAAEuB,MADS;eAEXvB,EAAEuB,MAFS;WAGXvB,EAAEuB;CAHJ,CAAhB;;AAMA,IAAIC,oBAAoB,IAAIxB,EAAEmB,MAAN,CAAa;qBACfnB,EAAEyB,MADa;mBAEfzB,EAAE0B;CAFA,CAAxB;;AAKA,IAAIC,aAAa,IAAI3B,EAAEmB,MAAN,CAAa;gBACdnB,EAAEyB,MADY;WAEdzB,EAAEoB;CAFD,CAAjB;;AAKA,IAAIQ,aAAa,IAAI5B,EAAE6B,KAAN,CAAYL,iBAAZ,EAA+BxB,EAAEuB,MAAjC,CAAjB;AACA,IAAIO,gBAAgB,IAAI9B,EAAE6B,KAAN,CAAYF,UAAZ,EAAwB3B,EAAEuB,MAA1B,CAApB;;AAEA,IAAIQ,oBAAoB,IAAI/B,EAAEmB,MAAN,CAAa;eACnBnB,EAAEyB,MADiB;cAEnB,IAAIzB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwBK,UAAxB,EAAoC,EAACK,MAAM,QAAP,EAApC,CAFmB;iBAGnB,IAAIjC,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwBO,aAAxB,EAAuC,EAACG,MAAM,QAAP,EAAvC;CAHM,CAAxB;;AAMA,IAAIC,eAAe,IAAIlC,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;KAC9C;YACWpB,EAAEoB,MADb;cAEWpB,EAAEoB,MAFb;aAGW,IAAIpB,EAAEoC,SAAN,CAAgBpC,EAAE0B,KAAlB,EAAyB,GAAzB;GAJmC;;KAO9C;YACiB1B,EAAEoB,MADnB;cAEiBpB,EAAEoB,MAFnB;mBAGiB,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,GAAtB,CAHjB;oBAIiB;aAAKiB,KAAKC,GAAL,CAAStB,KAAT,CAAeqB,IAAf,EAAqBE,EAAEC,aAAvB,CAAL;KAJjB;gBAKiB,IAAIxC,EAAEoC,SAAN,CAAgBlB,SAAhB,EAA2B,gBAA3B,CALjB;qBAMiB,IAAIlB,EAAEoC,SAAN,CAAgBpC,EAAEoB,MAAlB,EAA0B,gBAA1B;GAb6B;;KAgB9C;YACiBpB,EAAEoB,MADnB;cAEiBpB,EAAEoB,MAFnB;gBAGiBpB,EAAEoB,MAHnB;cAIiB;aAAKmB,EAAEE,UAAF,IAAgB,CAArB;KAJjB;iBAKiBzC,EAAEoB,MALnB;mBAMiBpB,EAAEoB,MANnB;gBAOiBpB,EAAEoB,MAPnB;aAQiB,IAAIpB,EAAEoC,SAAN,CAAgBpC,EAAEoB,MAAlB,EAA0B,UAA1B,CARjB;iBASiB,IAAIpB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CATjB;eAUiB,IAAIpB,EAAEoC,SAAN,CAAgBpC,EAAEoB,MAAlB,EAA0B,UAA1B,CAVjB;aAWiB,IAAIpB,EAAEoC,SAAN,CAAgBpC,EAAEqB,KAAlB,EAAyB,UAAzB,CAXjB;mBAYiB,IAAIrB,EAAEoC,SAAN,CAAgBpC,EAAEoB,MAAlB,EAA0B,UAA1B,CAZjB;qBAaiB,IAAIpB,EAAEoC,SAAN,CAAgBpC,EAAEoB,MAAlB,EAA0B;aAAK,CAACmB,EAAEzC,MAAF,GAAWyC,EAAEI,cAAd,IAAgC,CAArC;KAA1B;GA7B6B;;KAgC9C;YACe3C,EAAEoB,MADjB;cAEepB,EAAEoB,MAFjB;eAGepB,EAAEoB,MAHjB;gBAIepB,EAAEoB,MAJjB;kBAKe,IAAIpB,EAAEoC,SAAN,CAAgBpC,EAAEoB,MAAlB,EAA0B,YAA1B;GArC+B;;KAwC9C;cACS,IAAIpB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CADT;YAESpB,EAAEuB,MAFX;cAGSvB,EAAEoB,MAHX;UAIS,IAAIpB,EAAEoC,SAAN,CAAgBpC,EAAE0B,KAAlB,EAAyB,IAAzB,CAJT;aAKS1B,EAAEuB,MALX;YAMS,IAAIvB,EAAEoC,SAAN,CAAgBd,SAAhB,EAA2B,SAA3B;GA9CqC;;MAiD7C;cACc,IAAItB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CADd;YAEcpB,EAAEuB,MAFhB;cAGcvB,EAAEuB,MAHhB;eAIcvB,EAAEuB,MAJhB;gBAKcvB,EAAEuB,MALhB;kBAMc,IAAIvB,EAAEoC,SAAN,CAAgBpC,EAAEoB,MAAlB,EAA0B,UAA1B;GAvD+B;;MA0D7C;cACQ,IAAIpB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CADR;YAEQpB,EAAEuB,MAFV;cAGQvB,EAAEuB,MAHV;aAIQvB,EAAEuB,MAJV;YAKQ,IAAIvB,EAAEoC,SAAN,CAAgBd,SAAhB,EAA2B,SAA3B;GA/DqC;;MAkE7C;cACQ,IAAItB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CADR;YAEQpB,EAAEuB,MAFV;cAGQvB,EAAEuB,MAHV;aAIQvB,EAAEuB,MAJV;YAKQ,IAAIvB,EAAEoC,SAAN,CAAgBd,SAAhB,EAA2B,SAA3B;GAvEqC;;MA0E7C;YACYtB,EAAEuB,MADd;gBAEYvB,EAAEuB,MAFd;kBAGY,IAAIvB,EAAEoC,SAAN,CAAgBL,iBAAhB,EAAmC,YAAnC;;CA7EC,CAAnB;;AAiFA,IAAIa,YAAY,IAAI5C,EAAEmB,MAAN,CAAa;cACdnB,EAAEoB,MADY;cAEdpB,EAAEoB,MAFY;SAGd,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwBW,YAAxB,EAAsC,EAACD,MAAM,QAAP,EAAiBY,MAAM,IAAvB,EAAtC;CAHC,CAAhB;;;AAOA,WAAe,IAAI7C,EAAEmB,MAAN,CAAa;WACZnB,EAAEoB,MADU;gBAEZpB,EAAEoB,MAFU;UAGZ,IAAIpB,EAAE6B,KAAN,CAAYe,SAAZ,EAAuB,cAAvB;CAHD,CAAf;;ACxHA;AACA,WAAe,IAAI5C,EAAEmB,MAAN,CAAa;WACNnB,EAAE8C,KADI;YAEN9C,EAAE8C,KAFI;sBAGN9C,EAAEuB,MAHI;eAINvB,EAAEuB,MAJI;SAKNvB,EAAEoB,MALI;cAMNpB,EAAEoB,MANI;WAON,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAE8C,KAAd,EAAqB,CAArB,CAPM;YAQN,IAAI9C,EAAE6B,KAAN,CAAY7B,EAAE8C,KAAd,EAAqB,CAArB,CARM;QASN9C,EAAEqB,KATI;QAUNrB,EAAEqB,KAVI;QAWNrB,EAAEqB,KAXI;QAYNrB,EAAEqB,KAZI;YAaN,IAAIrB,EAAE+C,QAAN,CAAe/C,EAAEoB,MAAjB,EAAyB,CAC3C,MAD2C,EACnC,QADmC,EACzB,WADyB,EACZ,SADY,EAE3C,QAF2C,EAEjC,WAFiC,EAEpB,UAFoB,CAAzB,CAbM;iBAiBNpB,EAAEoB,MAjBI;qBAkBNpB,EAAEqB,KAlBI;oBAmBNrB,EAAEqB,KAnBI;mBAoBNrB,EAAEqB,KApBI;CAAb,CAAf;;ACDA;AACA,WAAe,IAAIrB,EAAEmB,MAAN,CAAa;WACJnB,EAAE8C,KADE;UAEJ9C,EAAEqB,KAFE;WAGJrB,EAAEqB,KAHE;WAIJrB,EAAEqB,KAJE;mBAKJrB,EAAEoB,MALE;sBAMJpB,EAAEqB,KANE;uBAOJrB,EAAEqB,KAPE;cAQJrB,EAAEqB,KARE;kBASJrB,EAAEqB,KATE;iBAUJrB,EAAEqB,KAVE;eAWJrB,EAAEqB,KAXE;YAYJ,IAAIrB,EAAE0C,QAAN,CAAe1C,EAAEqB,KAAjB,EAAwB,CAAxB,CAZI;oBAaJrB,EAAEqB,KAbE;mBAcJrB,EAAEoB,MAdE;CAAb,CAAf;;ACDA,IAAI4B,YAAY,IAAIhD,EAAEmB,MAAN,CAAa;WAClBnB,EAAEoB,MADgB;WAElBpB,EAAEqB;CAFG,CAAhB;;AAKA,WAAe,IAAIrB,EAAEmB,MAAN,CAAa;WACd,IAAInB,EAAEoC,SAAN,CAAgBY,SAAhB,EAA2B;WAAKT,EAAEU,MAAF,CAASC,IAAT,CAAcC,eAAnB;GAA3B,CADc;YAEd,IAAInD,EAAEoC,SAAN,CAAgBpC,EAAEqB,KAAlB,EAAyB;WAAKkB,EAAEU,MAAF,CAASG,IAAT,CAAcC,SAAd,GAA0Bd,EAAEU,MAAF,CAASC,IAAT,CAAcC,eAA7C;GAAzB;CAFC,CAAf;;ACLA;AACA,WAAe,IAAInD,EAAEmB,MAAN,CAAa;WACFnB,EAAE8C,KADA;aAEF9C,EAAEoB,MAFA;aAGFpB,EAAEoB,MAHA;eAIFpB,EAAEoB,MAJA;sBAKFpB,EAAEoB,MALA;wBAMFpB,EAAEoB,MANA;YAOFpB,EAAEoB,MAPA;qBAQFpB,EAAEoB,MARA;cASFpB,EAAEoB,MATA;mBAUFpB,EAAEoB,MAVA;sBAWFpB,EAAEoB,MAXA;oBAYFpB,EAAEoB,MAZA;yBAaFpB,EAAEoB,MAbA;wBAcFpB,EAAEoB,MAdA;qBAeFpB,EAAEoB,MAfA;CAAb,CAAf;;ACHA;;;;AAIA,AAAO,SAASkC,WAAT,CAAqBC,UAArB,EAAiCC,UAAjC,EAA6D;MAAhBC,UAAgB,uEAAH,CAAG;;MAC9DF,eAAe,CAAf,IAAoBG,uBAAuBD,UAAvB,CAAxB,EAA4D;WACnDC,uBAAuBD,UAAvB,CAAP;;;SAGKE,UAAUJ,UAAV,EAAsBC,UAAtB,CAAP;;;;AAIF,AAAO,IAAMG,YAAY;;AAEvB,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CAFuB;;;;;;;;;;;;;;;;;;;;;AAuBvB,CAAC,UAAD,EAAa,WAAb,EAA0B,MAA1B,EAAkC,QAAlC,EAA4C,YAA5C,EAA0D,YAA1D,EACC,UADD,EACa,aADb,EAC4B,QAD5B,EACsC,YADtC,EACoD,UADpD,EACgE,UADhE,EAEC,OAFD,EAEU,SAFV,EAEqB,OAFrB,EAE8B,QAF9B,EAEwC,SAFxC,EAEmD,WAFnD,EAEgE,WAFhE,EAGC,SAHD,EAGY,OAHZ,EAGqB,SAHrB,EAGgC,SAHhC,EAG2C,UAH3C,EAGuD,UAHvD,EAGmE,YAHnE,EAIC,SAJD,EAIY,WAJZ,EAIyB,MAJzB,EAIiC,aAJjC,EAIgD,YAJhD,EAI8D,QAJ9D,CAvBuB;;;AA8BvB,CAAC,OAAD,CA9BuB;;;;AAkCvB,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC,SAAnC,EAA8C,MAA9C,EAAsD,SAAtD,EAAiE,OAAjE,EAA0E,IAA1E,EAAgF,IAAhF,EAAsF,IAAtF,EAA4F,SAA5F,CAlCuB,CAAlB;;;;AAuCP,AAAO,IAAMD,yBAAyB;MAChC,YADgC;MAEhC,YAFgC;MAGhC,aAHgC;MAIhC,aAJgC;MAKhC,aALgC;MAMhC,aANgC;MAOhC,aAPgC;MAQhC,aARgC;MAShC,YATgC;MAUhC,YAVgC;MAWhC,aAXgC;MAYhC,aAZgC;MAahC,aAbgC;OAc/B,UAd+B;OAe/B,WAf+B;CAA/B;;;AAmBP,AAAO,IAAME,YAAY;;AAEvB,EAFuB,EAIvB;KACK,IADL,EACkB,IAAI,IADtB,EACkC,IAAI,IADtC,EACkD,IAAI,IADtD;KAEK,IAFL,EAEkB,IAAI,IAFtB,EAEkC,IAAI,IAFtC,EAEkD,IAAI,IAFtD;KAGK,IAHL,EAGkB,IAAI,IAHtB,EAGkC,IAAI,IAHtC,EAGkD,IAAI,IAHtD;KAIK,IAJL,EAIkB,IAAI,IAJtB,EAIkC,IAAI,IAJtC,EAIkD,IAAI,IAJtD;KAKK,IALL,EAKkB,IAAI,OALtB,EAKkC,IAAI,IALtC,EAKkD,IAAI,IALtD;KAMK,IANL,EAMkB,IAAI,IANtB,EAMkC,IAAI,IANtC,EAMkD,KAAK,IANvD;KAOK,IAPL,EAOkB,IAAI,IAPtB,EAOkC,IAAI,IAPtC,EAOkD,KAAK,IAPvD;KAQK,IARL,EAQkB,IAAI,IARtB,EAQkC,IAAI,IARtC,EAQkD,KAAK,IARvD;KASK,IATL,EASkB,IAAI,IATtB,EASkC,IAAI,IATtC,EASkD,KAAK,IATvD;KAUK,IAVL,EAUkB,IAAI,IAVtB,EAUkC,IAAI,IAVtC,EAUkD,KAAK,IAVvD;MAWM,IAXN,EAWkB,IAAI,IAXtB,EAWkC,IAAI,IAXtC,EAWkD,KAAK,IAXvD;MAYM,IAZN,EAYkB,IAAI,IAZtB,EAYkC,IAAI,IAZtC,EAYkD,KAAK,IAZvD;MAaM,IAbN,EAakB,IAAI,IAbtB,EAakC,IAAI,IAbtC,EAakD,KAAK,IAbvD;MAcM,IAdN,EAckB,IAAI,IAdtB,EAckC,IAAI,IAdtC,EAckD,KAAK,IAdvD;MAeM,IAfN,EAekB,IAAI,IAftB,EAekC,IAAI,IAftC,EAekD,KAAK,IAfvD;MAgBM,IAhBN,EAgBkB,IAAI,IAhBtB,EAgBkC,IAAI,IAhBtC,EAgBkD,KAAK,IAhBvD;MAiBM,IAjBN,EAiBkB,IAAI,IAjBtB,EAiBkC,IAAI,IAjBtC,EAiBkD,KAAK,IAjBvD;MAkBM,IAlBN,EAkBkB,IAAI,IAlBtB,EAkBkC,IAAI,IAlBtC,EAkBkD,KAAK,IAlBvD;MAmBM,IAnBN,EAmBkB,IAAI,IAnBtB,EAmBkC,IAAI,IAnBtC,EAmBkD,KAAK,IAnBvD;MAoBM,SApBN,EAoBkB,IAAI,SApBtB,EAoBkC,IAAI,IApBtC,EAoBkD,KAAK,IApBvD;MAqBM,IArBN,EAqBkB,IAAI,SArBtB,EAqBkC,IAAI,IArBtC,EAqBkD,KAAK,IArBvD;MAsBM,IAtBN,EAsBkB,IAAI,IAtBtB,EAsBkC,IAAI,IAtBtC,EAsBkD,KAAK,IAtBvD;MAuBM,IAvBN,EAuBkB,IAAI,IAvBtB,EAuBkC,IAAI,IAvBtC,EAuBkD,KAAK,IAvBvD;MAwBM,IAxBN,EAwBkB,IAAI,IAxBtB,EAwBkC,IAAI,IAxBtC,EAwBkD,KAAK,IAxBvD;MAyBM,IAzBN,EAyBkB,IAAI,IAzBtB,EAyBkC,IAAI,SAzBtC,EAyBkD,KAAK,IAzBvD;MA0BM,IA1BN,EA0BkB,IAAI,IA1BtB,EA0BkC,IAAI,IA1BtC,EA0BkD,KAAK,YA1BvD;MA2BM,IA3BN,EA2BkB,IAAI,IA3BtB,EA2BkC,IAAI,IA3BtC,EA2BkD,KAAK,IA3BvD;MA4BM,IA5BN,EA4BkB,IAAI,OA5BtB,EA4BkC,IAAI,IA5BtC,EA4BkD,KAAK,IA5BvD;MA6BM,IA7BN,EA6BkB,IAAI,IA7BtB,EA6BkC,IAAI,IA7BtC,EA6BkD,KAAK,IA7BvD;MA8BM,IA9BN,EA8BkB,IAAI,IA9BtB,EA8BkC,IAAI;CAlCf;;;AAsCvB,EAtCuB,EAwCvB;UACU,IADV,EACsB,QAAQ,OAD9B,EAC0C,QAAQ,IADlD,EACiE,QAAQ,IADzE;UAEU,IAFV,EAEsB,QAAQ,OAF9B,EAE0C,QAAQ,IAFlD,EAEiE,QAAQ,IAFzE;UAGU,KAHV,EAGsB,QAAQ,OAH9B,EAG0C,QAAQ,KAHlD,EAGiE,QAAQ,IAHzE;UAIU,IAJV,EAIsB,QAAQ,OAJ9B,EAI0C,QAAQ,IAJlD,EAIiE,QAAQ,IAJzE;UAKU,OALV,EAKsB,QAAQ,OAL9B,EAK0C,QAAQ,IALlD,EAKiE,QAAQ,OALzE;UAMU,OANV,EAMsB,QAAQ,OAN9B,EAM0C,QAAQ,IANlD,EAMiE,QAAQ,OANzE;UAOU,IAPV,EAOsB,QAAQ,OAP9B,EAO0C,QAAQ,IAPlD,EAOiE,QAAQ,OAPzE;UAQU,OARV,EAQsB,QAAQ,OAR9B,EAQ0C,QAAQ,IARlD,EAQiE,QAAQ,OARzE;UASU,OATV,EASsB,QAAQ,OAT9B,EAS0C,QAAQ,KATlD,EASiE,QAAQ,OATzE;UAUU,OAVV,EAUsB,QAAQ,OAV9B,EAU0C,QAAQ,IAVlD,EAUiE,QAAQ,OAVzE;UAWU,OAXV,EAWsB,QAAQ,IAX9B,EAW0C,QAAQ,IAXlD,EAWiE,QAAQ,OAXzE;UAYU,OAZV,EAYsB,QAAQ,OAZ9B,EAY0C,QAAQ,OAZlD,EAYiE,QAAQ,OAZzE;UAaU,KAbV,EAasB,QAAQ,IAb9B,EAa0C,QAAQ,IAblD,EAaiE,QAAQ,OAbzE;UAcU,OAdV,EAcsB,QAAQ,IAd9B,EAc0C,QAAQ,IAdlD,EAciE,QAAQ,OAdzE;UAeU,OAfV,EAesB,QAAQ,KAf9B,EAe0C,QAAQ,IAflD,EAeiE,QAAQ,OAfzE;UAgBU,OAhBV,EAgBsB,QAAQ,IAhB9B,EAgB0C,QAAQ,IAhBlD,EAgBiE,QAAQ,OAhBzE;UAiBU,OAjBV,EAiBsB,QAAQ,OAjB9B,EAiB0C,QAAQ,KAjBlD,EAiBiE,QAAQ,OAjBzE;UAkBU,KAlBV,EAkBsB,QAAQ,OAlB9B,EAkB0C,QAAQ,IAlBlD,EAkBiE,QAAQ,OAlBzE;UAmBU,OAnBV,EAmBsB,QAAQ,IAnB9B,EAmB0C,QAAQ,KAnBlD,EAmBiE,QAAQ,OAnBzE;UAoBU,OApBV,EAoBsB,QAAQ,OApB9B,EAoB0C,QAAQ,IApBlD,EAoBiE,QAAQ,OApBzE;UAqBU,IArBV,EAqBsB,QAAQ,OArB9B,EAqB0C,QAAQ,OArBlD,EAqBiE,QAAQ,IArBzE;UAsBU,IAtBV,EAsBsB,QAAQ,OAtB9B,EAsB0C,QAAQ,IAtBlD,EAsBiE,QAAQ,IAtBzE;UAuBU,SAvBV,EAuBsB,QAAQ,IAvB9B,EAuB0C,QAAQ,IAvBlD,EAuBiE,QAAQ,OAvBzE;UAwBU,IAxBV,EAwBsB,QAAQ,IAxB9B,EAwB0C,QAAQ,IAxBlD,EAwBiE,QAAQ,OAxBzE;UAyBU,IAzBV,EAyBsB,QAAQ,IAzB9B,EAyB0C,QAAQ,IAzBlD,EAyBiE,QAAQ,OAzBzE;UA0BU,IA1BV,EA0BsB,QAAQ,OA1B9B,EA0B0C,QAAQ,IA1BlD,EA0BiE,QAAQ,OA1BzE;UA2BU,IA3BV,EA2BsB,QAAQ,IA3B9B,EA2B0C,QAAQ,IA3BlD,EA2BiE,QAAQ,IA3BzE;UA4BU,IA5BV,EA4BsB,QAAQ,OA5B9B,EA4B0C,QAAQ,IA5BlD,EA4BiE,QAAQ,KA5BzE;UA6BU,OA7BV,EA6BsB,QAAQ,OA7B9B,EA6B0C,QAAQ,IA7BlD,EA6BiE,QAAQ,IA7BzE;UA8BU,SA9BV,EA8BsB,QAAQ,OA9B9B,EA8B0C,QAAQ,OA9BlD,EA8BiE,QAAQ,KA9BzE;UA+BU,IA/BV,EA+BsB,QAAQ,IA/B9B,EA+B0C,QAAQ,IA/BlD,EA+BiE,QAAQ,IA/BzE;UAgCU,IAhCV,EAgCsB,QAAQ,IAhC9B,EAgC0C,QAAQ,OAhClD,EAgCiE,QAAQ,IAhCzE;UAiCU,IAjCV,EAiCsB,QAAQ,IAjC9B,EAiC0C,QAAQ,OAjClD,EAiCiE,QAAQ,IAjCzE;UAkCU,IAlCV,EAkCsB,QAAQ,IAlC9B,EAkC0C,QAAQ,IAlClD,EAkCiE,QAAQ,IAlCzE;UAmCU,OAnCV,EAmCsB,QAAQ,IAnC9B,EAmC0C,QAAQ,IAnClD,EAmCiE,QAAQ,IAnCzE;UAoCU,OApCV,EAoCsB,QAAQ,IApC9B,EAoC0C,QAAQ,IApClD,EAoCiE,QAAQ,IApCzE;UAqCU,IArCV,EAqCsB,QAAQ,IArC9B,EAqC0C,QAAQ,IArClD,EAqCiE,QAAQ,IArCzE;UAsCU,OAtCV,EAsCsB,QAAQ,IAtC9B,EAsC0C,QAAQ,KAtClD,EAsCiE,QAAQ,IAtCzE;UAuCU,OAvCV,EAuCsB,QAAQ,IAvC9B,EAuC0C,QAAQ,QAvClD,EAuCiE,QAAQ,IAvCzE;UAwCU,IAxCV,EAwCsB,QAAQ,IAxC9B,EAwC0C,QAAQ,KAxClD,EAwCiE,QAAQ,KAxCzE;UAyCU,IAzCV,EAyCsB,QAAQ,IAzC9B,EAyC0C,QAAQ,OAzClD,EAyCiE,QAAQ,IAzCzE;UA0CU,OA1CV,EA0CsB,QAAQ,SA1C9B,EA0C0C,QAAQ,IA1ClD,EA0CiE,QAAQ,SA1CzE;UA2CU,IA3CV,EA2CsB,QAAQ,IA3C9B,EA2C0C,QAAQ,OA3ClD,EA2CiE,QAAQ,IA3CzE;UA4CU,IA5CV,EA4CsB,QAAQ,IA5C9B,EA4C0C,QAAQ,KA5ClD,EA4CiE,QAAQ,IA5CzE;UA6CU,KA7CV,EA6CsB,QAAQ,IA7C9B,EA6C0C,QAAQ,QA7ClD,EA6CiE,QAAQ,IA7CzE;UA8CU,IA9CV,EA8CsB,QAAQ,IA9C9B,EA8C0C,QAAQ,KA9ClD,EA8CiE,QAAQ,IA9CzE;UA+CU,OA/CV,EA+CsB,QAAQ,OA/C9B,EA+C0C,QAAQ,IA/ClD,EA+CiE,QAAQ,KA/CzE;UAgDU,IAhDV,EAgDsB,QAAQ,IAhD9B,EAgD0C,QAAQ,YAhDlD,EAgDiE,QAAQ,IAhDzE;UAiDU,OAjDV,EAiDsB,QAAQ,IAjD9B,EAiD0C,QAAQ,IAjDlD,EAiDiE,QAAQ,IAjDzE;UAkDU,OAlDV,EAkDsB,QAAQ,IAlD9B,EAkD0C,QAAQ,YAlDlD;UAmDU,OAnDV,EAmDsB,QAAQ,IAnD9B,EAmD0C,QAAQ,SAnDlD;UAoDU,QApDV,EAoDsB,QAAQ,KApD9B,EAoD0C,QAAQ;CA5F3B,CAAlB;;ACpEP,IAAIC,aAAa,IAAI7D,EAAEmB,MAAN,CAAa;cAChBnB,EAAEoB,MADc;cAEhBpB,EAAEoB,MAFc;cAGhBpB,EAAEoB,MAHc;UAIhBpB,EAAEoB,MAJc;UAKhBpB,EAAEoB,MALc;UAMhB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EACV,IAAIpB,EAAE8D,MAAN,CAAa,QAAb,EAAuB;WAAKR,YAAYf,EAAEgB,UAAd,EAA0BhB,EAAEiB,UAA5B,EAAwCjB,EAAEkB,UAA1C,CAAL;GAAvB,CADU,EAEV,EAAExB,MAAM,QAAR,EAAkB8B,YAAY,qBAA9B,EAAqDC,WAAW,KAAhE,EAFU;CANG,CAAjB;;AAYA,IAAIC,gBAAgB,IAAIjE,EAAEmB,MAAN,CAAa;UACtBnB,EAAEoB,MADoB;OAEtB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB,IAAIpB,EAAE8D,MAAN,CAAa,QAAb,EAAuB,SAAvB,CAAxB,EAA2D,EAAC7B,MAAM,QAAP,EAAiB8B,YAAY,cAA7B,EAA3D;CAFS,CAApB;;AAKA,IAAIG,YAAY,IAAIlE,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;KAC3C;WACepB,EAAEoB,MADjB;kBAEepB,EAAEoB,MAFjB;aAGe,IAAIpB,EAAE6B,KAAN,CAAYgC,UAAZ,EAAwB,OAAxB;GAJ4B;KAM3C;WACe7D,EAAEoB,MADjB;kBAEepB,EAAEoB,MAFjB;aAGe,IAAIpB,EAAE6B,KAAN,CAAYgC,UAAZ,EAAwB,OAAxB,CAHf;kBAIe7D,EAAEoB,MAJjB;cAKe,IAAIpB,EAAE6B,KAAN,CAAYoC,aAAZ,EAA2B,cAA3B;;CAXJ,CAAhB;;AAeA,AAEA,IAAME,QAAQ,CACZ,WADY,EAEZ,YAFY,EAGZ,eAHY,EAIZ,iBAJY,EAKZ,UALY,EAMZ,SANY,EAOZ,gBAPY;AAQZ,WARY,EASZ,cATY,EAUZ,UAVY,EAWZ,aAXY,EAYZ,WAZY,EAaZ,aAbY,EAcZ,SAdY,EAeZ,YAfY,EAgBZ,IAhBY;AAiBZ,iBAjBY,EAkBZ,oBAlBY,EAmBZ,gBAnBY,EAoBZ,YApBY,EAqBZ,uBArBY,EAsBZ,eAtBY,EAuBZ,kBAvBY,CAAd;;AA0BAD,UAAUE,OAAV,GAAoB,UAASC,MAAT,EAAiB;MAC/BC,UAAU,EAAd;uBACmB,KAAKA,OAAxB,6GAAiC;;;;;;;;;;;;QAAxBC,MAAwB;;;QAE3BC,WAAWZ,UAAUW,OAAOhB,UAAjB,EAA6BgB,OAAOd,UAApC,CAAf;;QAEIe,YAAY,IAAZ,IAAoB,KAAKC,QAAL,IAAiB,IAArC,IAA6CF,OAAOd,UAAP,IAAqB,MAAtE,EAA8E;iBACjE,KAAKgB,QAAL,CAAcF,OAAOd,UAAP,GAAoB,MAAlC,EAA0CiB,GAArD;;;QAGEF,YAAY,IAAhB,EAAsB;iBACTD,OAAOhB,UAAP,GAAoB,GAApB,GAA0BgB,OAAOd,UAA5C;;;;QAIEnD,MAAMiE,OAAOI,MAAP,IAAiB,GAAjB,GAAuB,cAAvB,GAAyCR,MAAMI,OAAOI,MAAb,KAAwBJ,OAAOI,MAAlF;QACIL,QAAQhE,GAAR,KAAgB,IAApB,EAA0B;cAChBA,GAAR,IAAe,EAAf;;;QAGEsE,MAAMN,QAAQhE,GAAR,CAAV;QACIiE,OAAOI,MAAP,IAAiB,GAArB,EAA0B;YAClBC,IAAIL,OAAOI,MAAX,MAAuBC,IAAIL,OAAOI,MAAX,IAAqB,EAA5C,CAAN;;;QAGEH,QAAJ,IAAgBD,OAAOM,MAAvB;;;OAGGP,OAAL,GAAeA,OAAf;CA5BF;;AA+BAJ,UAAUY,SAAV,GAAsB,YAAW;MAC3BjD,MAAMkD,OAAN,CAAc,KAAKT,OAAnB,CAAJ,EAAiC;OAC5BU,OAAL,GAAe,CAAf;;MAEIV,UAAU,EAAd;OACK,IAAIhE,GAAT,IAAgB,KAAKgE,OAArB,EAA8B;QACxBW,MAAM,KAAKX,OAAL,CAAahE,GAAb,CAAV;QACIA,QAAQ,cAAZ,EAA4B;;YAEpBtB,IAAR,CAAa;kBACC,CADD;kBAEC,CAFD;kBAGC,KAHD;cAIHmF,MAAMe,OAAN,CAAc5E,GAAd,CAJG;cAKH6E,OAAOC,UAAP,CAAkBH,IAAII,EAAtB,EAA0B,SAA1B,CALG;cAMHJ,IAAII;KANd;;QASI/E,QAAQ,gBAAZ,EAA8B;cACpBtB,IAAR,CAAa;oBACC,CADD;oBAEC,CAFD;oBAGC,CAHD;gBAIHmF,MAAMe,OAAN,CAAc5E,GAAd,CAJG;gBAKH2E,IAAII,EAAJ,CAAOvF,MALJ;gBAMHmF,IAAII;OANd;;;;OAWCf,OAAL,GAAeA,OAAf;OACKgB,KAAL,GAAahB,QAAQxE,MAArB;OACKyF,YAAL,GAAoBrB,UAAUsB,IAAV,CAAe,IAAf,EAAqB,IAArB,EAA2B,KAA3B,CAApB;CAhCF;;AC5FA,IAAIC,MAAM,IAAIzF,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;UAChC;mBACkBpB,EAAEqB,KADpB;mBAEkBrB,EAAEoB,MAFpB;kBAGkBpB,EAAEoB,MAHpB;YAIkB,IAAIpB,EAAE+C,QAAN,CAAe/C,EAAEoB,MAAjB,EAAyB;QAAA,EACzC,aADyC,EAC1B,UAD0B,EACd,UADc,EACF,IADE,EAE/C,IAF+C,EAEzC,IAFyC,EAEnC,IAFmC,EAE7B,cAF6B,EAEb,YAFa,CAAzB,CAJlB;qBAQkBpB,EAAEqB,KARpB;qBASkBrB,EAAEqB,KATpB;uBAUkBrB,EAAEqB,KAVpB;uBAWkBrB,EAAEqB,KAXpB;uBAYkBrB,EAAEqB,KAZpB;uBAakBrB,EAAEqB,KAbpB;yBAckBrB,EAAEqB,KAdpB;yBAekBrB,EAAEqB,KAfpB;oBAgBkBrB,EAAEqB,KAhBpB;wBAiBkBrB,EAAEqB,KAjBpB;kBAkBkBrB,EAAEqB,KAlBpB;YAmBkB,IAAIrB,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB,EAArB,CAnBlB;iBAoBkB,IAAI1B,EAAE6B,KAAN,CAAY7B,EAAEuB,MAAd,EAAsB,CAAtB,CApBlB;cAqBkB,IAAIvB,EAAE8D,MAAN,CAAa,CAAb,CArBlB;iBAsBkB,IAAI9D,EAAE+C,QAAN,CAAe/C,EAAEoB,MAAjB,EAAyB;YAAA,EACrC,YADqC,EACvB,UADuB,EACX,UADW,EACC,WADD,EAE/C,MAF+C,EAEvC,SAFuC,EAE5B,gBAF4B,EAEV,KAFU,EAEH,SAFG,CAAzB,CAtBlB;sBA0BkBpB,EAAEoB,MA1BpB;qBA2BkBpB,EAAEoB,MA3BpB;GADgC;;;KAgCrC,EAhCqC;;KAkCrC;kBACmBpB,EAAEqB,KADrB;mBAEmBrB,EAAEqB,KAFrB;iBAGmBrB,EAAEqB,KAHrB;eAImBrB,EAAEoB,MAJrB;gBAKmBpB,EAAEoB,MALrB;mBAMmB,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEuB,MAAd,EAAsB,CAAtB;GAxCkB;;KA2CrC;;kBAEmBvB,EAAEqB,KAFrB;mBAGmBrB,EAAEqB,KAHrB;iBAImBrB,EAAEqB,KAJrB;eAKmBrB,EAAEoB,MALrB;gBAMmBpB,EAAEoB,MANrB;mBAOmB,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEuB,MAAd,EAAsB,CAAtB,CAPnB;;aASmBvB,EAAEqB,KATrB;eAUmBrB,EAAEqB,KAVrB;iBAWmBrB,EAAEoB,MAXrB;eAYmBpB,EAAEoB,MAZrB;gBAamBpB,EAAEoB;GAxDgB;;KA2DrC;kBACmBpB,EAAEqB,KADrB;mBAEmBrB,EAAEqB,KAFrB;iBAGmBrB,EAAEqB,KAHrB;eAImBrB,EAAEoB,MAJrB;gBAKmBpB,EAAEoB,MALrB;mBAMmB,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEuB,MAAd,EAAsB,CAAtB,CANnB;;aAQmBvB,EAAEqB,KARrB;eASmBrB,EAAEqB,KATrB;iBAUmBrB,EAAEoB,MAVrB;eAWmBpB,EAAEoB,MAXrB;gBAYmBpB,EAAEoB,MAZrB;;6BAcwBpB,EAAEoB,MAd1B;6BAewBpB,EAAEoB;;CA1ErB,CAAV;;AA8EA,IAAIsE,WAAWD,IAAIC,QAAnB;AACAA,SAAS,CAAT,IAAcA,SAAS,CAAT,IAAcA,SAAS,CAAT,CAA5B,CAEA;;ACjFA;AACA,WAAe,IAAI1F,EAAEmC,eAAN,CAAsBnC,EAAE2F,OAAxB,EAAiC;UACtC;iBACc3F,EAAE2F,OADhB;uBAEc3F,EAAEqB,KAFhB;wBAGcrB,EAAEqB,KAHhB;kBAIcrB,EAAEuB,MAJhB;kBAKcvB,EAAEuB,MALhB;kBAMcvB,EAAEuB,MANhB;iBAOcvB,EAAEuB,MAPhB;iBAQcvB,EAAEuB,MARhB;GADsC;;KAY3C,EAZ2C;;KAc3C;oBACevB,EAAEoB,MADjB;oBAEe,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,gBAAtB,CAFf;WAGe,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAE8D,MAAN,CAAa9D,EAAE0B,KAAf,CAAZ;GAjB4B;;OAoBzC;oBACa1B,EAAEoB,MADf;aAEa,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB,gBAArB;GAtB4B;;KAyB3C,EAzB2C;;KA2B3C;SACI,IAAI1B,EAAE6B,KAAN,CAAY7B,EAAEuB,MAAd,EAAsB;aAAKgB,EAAEU,MAAF,CAASG,IAAT,CAAcC,SAAnB;KAAtB;;CA5BM,CAAf;;ACDA;AACA,UAAe,IAAIrD,EAAEmB,MAAN,CAAa;iBACX,IAAInB,EAAE6B,KAAN,CAAY7B,EAAEqB,KAAd;CADF,CAAf;;ACDA;;;AAGA,WAAe,IAAIrB,EAAEmB,MAAN,CAAa;gBACZ,IAAInB,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd;CADD,CAAf;;ACHA,IAAIkE,OAAO,IAAI5F,EAAEmC,eAAN,CAAsB,uBAAtB,EAA+C;KACrD;aACQ,IAAInC,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd;GAF6C;KAIrD;aACQ,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEuB,MAAd;;CALF,CAAX;;AASAqE,KAAKxB,OAAL,GAAe,YAAW;MACpB,KAAKY,OAAL,KAAiB,CAArB,EAAwB;SACjB,IAAInF,IAAI,CAAb,EAAgBA,IAAI,KAAKgG,OAAL,CAAa/F,MAAjC,EAAyCD,GAAzC,EAA8C;WACvCgG,OAAL,CAAahG,CAAb,MAAoB,CAApB;;;CAHN;;AAQA+F,KAAKd,SAAL,GAAiB,YAAW;MACtB,KAAKE,OAAL,IAAgB,IAApB,EAA0B;;;OAGrBA,OAAL,GAAe,KAAKa,OAAL,CAAa,KAAKA,OAAL,CAAa/F,MAAb,GAAsB,CAAnC,IAAwC,MAAxC,GAAiD,CAAjD,GAAqD,CAApE;;MAEI,KAAKkF,OAAL,KAAiB,CAArB,EAAwB;SACjB,IAAInF,IAAI,CAAb,EAAgBA,IAAI,KAAKgG,OAAL,CAAa/F,MAAjC,EAAyCD,GAAzC,EAA8C;WACvCgG,OAAL,CAAahG,CAAb,OAAqB,CAArB;;;CARN,CAaA;;AC9BA;AACA,WAAe,IAAIG,EAAEmB,MAAN,CAAa;uBACL,IAAInB,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd;CADR,CAAf;;ACDA;AACA,WAAe,IAAI1B,EAAE6B,KAAN,CAAY,IAAI7B,EAAEmF,MAAN,EAAZ,CAAf;;ICDqBW;oBACP7D,IAAZ,EAAkB;;;SACXA,IAAL,GAAYA,IAAZ;;;qBAGF8D,yBAAO1B,QAAQpB,QAAQ;QACjBqC,QAAQjB,OAAO2B,YAAP,EAAZ;QACIV,UAAU,CAAd,EAAiB;aACR,EAAP;;;QAGEW,UAAU5B,OAAO6B,SAAP,EAAd;QACIC,mBAAJ;QACIF,YAAY,CAAhB,EAAmB;mBACJjG,EAAE0B,KAAf;KADF,MAEO,IAAIuE,YAAY,CAAhB,EAAmB;mBACXjG,EAAEoB,MAAf;KADK,MAEA,IAAI6E,YAAY,CAAhB,EAAmB;mBACXjG,EAAEyB,MAAf;KADK,MAEA,IAAIwE,YAAY,CAAhB,EAAmB;mBACXjG,EAAEuB,MAAf;KADK,MAEA;YACC,IAAIpB,KAAJ,mCAA0C8F,OAA1C,SAAqD5B,OAAO+B,GAA5D,CAAN;;;QAGEC,MAAM,EAAV;QACIC,WAAWjC,OAAO+B,GAAP,GAAc,CAACd,QAAQ,CAAT,IAAcW,OAA5B,GAAuC,CAAtD;;QAEIM,QAAQJ,WAAWJ,MAAX,CAAkB1B,MAAlB,CAAZ;SACK,IAAIxE,IAAI,CAAb,EAAgBA,IAAIyF,KAApB,EAA2BzF,GAA3B,EAAgC;UAC1B2G,MAAML,WAAWJ,MAAX,CAAkB1B,MAAlB,CAAV;;UAEI,KAAKpC,IAAL,IAAa,IAAjB,EAAuB;YACjBmE,MAAM/B,OAAO+B,GAAjB;eACOA,GAAP,GAAaE,WAAWC,KAAxB;;eAEOzG,MAAP,GAAgB0G,MAAMD,KAAtB;YACIvH,IAAJ,CAAS,KAAKiD,IAAL,CAAU8D,MAAV,CAAiB1B,MAAjB,EAAyBpB,MAAzB,CAAT;eACOmD,GAAP,GAAaA,GAAb;OANF,MAOO;YACDpH,IAAJ,CAAS;kBACCsH,WAAWC,KADZ;kBAECC,MAAMD;SAFhB;;;cAMMC,GAAR;;;WAGKJ,GAAP,GAAaE,WAAWC,KAAxB;WACOF,GAAP;;;qBAGFb,qBAAKiB,KAAKxD,QAAQ;QACZuC,OAAO,CAAX;QACIiB,IAAI3G,MAAJ,KAAe,CAAnB,EAAsB;aACb0F,IAAP;;;QAGEvD,OAAO,KAAKA,IAAL,IAAa,IAAIjC,EAAEmF,MAAN,EAAxB;;;QAGIuB,SAAS,CAAb;SACK,IAAI7G,IAAI,CAAb,EAAgBA,IAAI4G,IAAI3G,MAAxB,EAAgCD,GAAhC,EAAqC;UAC/B8G,OAAOF,IAAI5G,CAAJ,CAAX;gBACUoC,KAAKuD,IAAL,CAAUmB,IAAV,EAAgB1D,MAAhB,CAAV;;;QAGEkD,mBAAJ;QACIO,UAAU,IAAd,EAAoB;mBACL1G,EAAE0B,KAAf;KADF,MAEO,IAAIgF,UAAU,MAAd,EAAsB;mBACd1G,EAAEoB,MAAf;KADK,MAEA,IAAIsF,UAAU,QAAd,EAAwB;mBAChB1G,EAAEyB,MAAf;KADK,MAEA,IAAIiF,UAAU,UAAd,EAA0B;mBAClB1G,EAAEuB,MAAf;KADK,MAEA;YACC,IAAIpB,KAAJ,CAAU,wBAAV,CAAN;;;YAGM,IAAIgG,WAAWX,IAAX,MAAqBiB,IAAI3G,MAAJ,GAAa,CAAlC,CAAZ;YACQ4G,SAAS,CAAjB;;WAEOlB,IAAP;;;qBAGFoB,yBAAOvC,QAAQoC,KAAKxD,QAAQ;WACnB4D,aAAP,CAAqBJ,IAAI3G,MAAzB;QACI2G,IAAI3G,MAAJ,KAAe,CAAnB,EAAsB;;;;QAIlBmC,OAAO,KAAKA,IAAL,IAAa,IAAIjC,EAAEmF,MAAN,EAAxB;;;QAGI2B,QAAQ,EAAZ;QACIJ,SAAS,CAAb;yBACiBD,GAAjB,6GAAsB;;;;;;;;;;;;UAAbE,IAAa;;UAChBI,IAAI9E,KAAKuD,IAAL,CAAUmB,IAAV,EAAgB1D,MAAhB,CAAR;YACMjE,IAAN,CAAW+H,CAAX;gBACUA,CAAV;;;QAGEZ,mBAAJ;QACIO,UAAU,IAAd,EAAoB;mBACL1G,EAAE0B,KAAf;KADF,MAEO,IAAIgF,UAAU,MAAd,EAAsB;mBACd1G,EAAEoB,MAAf;KADK,MAEA,IAAIsF,UAAU,QAAd,EAAwB;mBAChB1G,EAAEyB,MAAf;KADK,MAEA,IAAIiF,UAAU,UAAd,EAA0B;mBAClB1G,EAAEuB,MAAf;KADK,MAEA;YACC,IAAIpB,KAAJ,CAAU,wBAAV,CAAN;;;;WAIK6G,UAAP,CAAkBb,WAAWX,IAAX,EAAlB;;;aAGS,CAAT;eACWoB,MAAX,CAAkBvC,MAAlB,EAA0BqC,MAA1B;;0BAEiBI,KAAjB,oHAAwB;;;;;;;;;;;;UAAftB,IAAe;;gBACZA,IAAV;iBACWoB,MAAX,CAAkBvC,MAAlB,EAA0BqC,MAA1B;;;0BAGeD,GAAjB,oHAAsB;;;;;;;;;;;;UAAbE,KAAa;;WACfC,MAAL,CAAYvC,MAAZ,EAAoBsC,KAApB,EAA0B1D,MAA1B;;;;;;;;;ACpIN,IAAMgE,YAAY,GAAlB;AACA,IAAMC,eAAe,CACnB,GADmB,EACd,GADc,EACT,GADS,EACJ,GADI,EACC,GADD,EACM,GADN,EACW,GADX,EACgB,GADhB,EAEnB,GAFmB,EAEd,GAFc,EAET,GAFS,EAEJ,GAFI,EAEC,IAFD,EAEO,IAFP,EAEa,GAFb,CAArB;;AAKA,IAAMC,sBAAsB;OACrB,EADqB;OAErB,EAFqB;QAGpB,EAHoB;OAIrB;CAJP;;IAOqBC;;;;;aACZrB,yBAAO1B,QAAQ5D,OAAO;QACvB,MAAMA,KAAN,IAAeA,SAAS,GAA5B,EAAiC;aACxBA,QAAQ,GAAf;;;QAGE,OAAOA,KAAP,IAAgBA,SAAS,GAA7B,EAAkC;aACzB,CAACA,QAAQ,GAAT,IAAgB,GAAhB,GAAsB4D,OAAO6B,SAAP,EAAtB,GAA2C,GAAlD;;;QAGE,OAAOzF,KAAP,IAAgBA,SAAS,GAA7B,EAAkC;aACzB,EAAEA,QAAQ,GAAV,IAAiB,GAAjB,GAAuB4D,OAAO6B,SAAP,EAAvB,GAA4C,GAAnD;;;QAGEzF,UAAU,EAAd,EAAkB;aACT4D,OAAOgD,WAAP,EAAP;;;QAGE5G,UAAU,EAAd,EAAkB;aACT4D,OAAOiD,WAAP,EAAP;;;QAGE7G,UAAU,EAAd,EAAkB;UACZ8G,MAAM,EAAV;aACO,IAAP,EAAa;YACPC,IAAInD,OAAO6B,SAAP,EAAR;;YAEIuB,KAAKD,KAAK,CAAd;YACIC,OAAOR,SAAX,EAAsB;;;eACfC,aAAaO,EAAb,CAAP;;YAEIC,KAAKF,IAAI,EAAb;YACIE,OAAOT,SAAX,EAAsB;;;eACfC,aAAaQ,EAAb,CAAP;;;aAGKC,WAAWJ,GAAX,CAAP;;;WAGK,IAAP;;;aAGK/B,qBAAK/E,OAAO;;;QAGbA,MAAMmH,UAAV,EAAsB;cACZ,KAAR;;;QAGE,CAACnH,QAAQ,CAAT,MAAgBA,KAApB,EAA2B;;UACrB8G,MAAM,KAAK9G,KAAf;aACO,IAAI4B,KAAKwF,IAAL,CAAU,CAACN,IAAIzH,MAAJ,GAAa,CAAd,IAAmB,CAA7B,CAAX;KAFF,MAIO,IAAI,CAAC,GAAD,IAAQW,KAAR,IAAiBA,SAAS,GAA9B,EAAmC;aACjC,CAAP;KADK,MAGA,IAAI,OAAOA,KAAP,IAAgBA,SAAS,IAAzB,IAAiC,CAAC,IAAD,IAASA,KAAT,IAAkBA,SAAS,CAAC,GAAjE,EAAsE;aACpE,CAAP;KADK,MAGA,IAAI,CAAC,KAAD,IAAUA,KAAV,IAAmBA,SAAS,KAAhC,EAAuC;aACrC,CAAP;KADK,MAGA;aACE,CAAP;;;;aAIGmG,yBAAOvC,QAAQ5D,OAAO;;;QAGvBwE,MAAM6C,OAAOrH,KAAP,CAAV;;QAEIA,MAAMmH,UAAV,EAAsB;aACbZ,UAAP,CAAkB,EAAlB;aACO3C,OAAO0D,YAAP,CAAoB9C,GAApB,CAAP;KAFF,MAIO,IAAI,CAACA,MAAM,CAAP,MAAcA,GAAlB,EAAuB;;aACrB+B,UAAP,CAAkB,EAAlB;;UAEIO,MAAM,KAAKtC,GAAf;WACK,IAAIpF,IAAI,CAAb,EAAgBA,IAAI0H,IAAIzH,MAAxB,EAAgCD,KAAK,CAArC,EAAwC;YAClCmI,KAAKT,IAAI1H,CAAJ,CAAT;YACI4H,KAAKN,oBAAoBa,EAApB,KAA2B,CAACA,EAArC;;YAEInI,MAAM0H,IAAIzH,MAAJ,GAAa,CAAvB,EAA0B;cACpB4H,KAAKT,SAAT;SADF,MAEO;cACDgB,KAAKV,IAAI1H,IAAI,CAAR,CAAT;cACI6H,KAAKP,oBAAoBc,EAApB,KAA2B,CAACA,EAArC;;;eAGKjB,UAAP,CAAmBS,MAAM,CAAP,GAAaC,KAAK,EAApC;;;UAGEA,OAAOT,SAAX,EAAsB;eACb5C,OAAO2C,UAAP,CAAmBC,aAAa,CAAhC,CAAP;;KAnBG,MAsBA,IAAI,CAAC,GAAD,IAAQhC,GAAR,IAAeA,OAAO,GAA1B,EAA+B;aAC7BZ,OAAO2C,UAAP,CAAkB/B,MAAM,GAAxB,CAAP;KADK,MAGA,IAAI,OAAOA,GAAP,IAAcA,OAAO,IAAzB,EAA+B;aAC7B,GAAP;aACO+B,UAAP,CAAkB,CAAC/B,OAAO,CAAR,IAAa,GAA/B;aACOZ,OAAO2C,UAAP,CAAkB/B,MAAM,IAAxB,CAAP;KAHK,MAKA,IAAI,CAAC,IAAD,IAASA,GAAT,IAAgBA,OAAO,CAAC,GAA5B,EAAiC;YAChC,CAACA,GAAD,GAAO,GAAb;aACO+B,UAAP,CAAkB,CAAC/B,OAAO,CAAR,IAAa,GAA/B;aACOZ,OAAO2C,UAAP,CAAkB/B,MAAM,IAAxB,CAAP;KAHK,MAKA,IAAI,CAAC,KAAD,IAAUA,GAAV,IAAiBA,OAAO,KAA5B,EAAmC;aACjC+B,UAAP,CAAkB,EAAlB;aACO3C,OAAO6D,YAAP,CAAoBjD,GAApB,CAAP;KAFK,MAIA;aACE+B,UAAP,CAAkB,EAAlB;aACO3C,OAAO0D,YAAP,CAAoB9C,GAApB,CAAP;;;;;;;IC7HekD;qBACG;QAAVC,GAAU,uEAAJ,EAAI;;;;SACfA,GAAL,GAAWA,GAAX;SACKC,MAAL,GAAc,EAAd;yBACkBD,GAAlB,6GAAuB;;;;;;;;;;;;UAAdE,KAAc;;UACjBhI,MAAMuB,MAAMkD,OAAN,CAAcuD,MAAM,CAAN,CAAd,IAA0BA,MAAM,CAAN,EAAS,CAAT,KAAe,CAAf,GAAmBA,MAAM,CAAN,EAAS,CAAT,CAA7C,GAA2DA,MAAM,CAAN,CAArE;WACKD,MAAL,CAAY/H,GAAZ,IAAmBgI,KAAnB;;;;oBAIJC,yCAAetG,MAAMoC,QAAQgC,KAAKmC,UAAU;;;QACtC3G,MAAMkD,OAAN,CAAc9C,IAAd,CAAJ,EAAyB;aAChBuG,SAASC,GAAT,CAAa,UAACC,EAAD,EAAK7I,CAAL;eAAW,MAAK0I,cAAL,CAAoBtG,KAAKpC,CAAL,CAApB,EAA6BwE,MAA7B,EAAqCgC,GAArC,EAA0C,CAACqC,EAAD,CAA1C,CAAX;OAAb,CAAP;KADF,MAEO,IAAIzG,KAAK8D,MAAL,IAAe,IAAnB,EAAyB;aACvB9D,KAAK8D,MAAL,CAAY1B,MAAZ,EAAoBgC,GAApB,EAAyBmC,QAAzB,CAAP;KADK,MAEA;cACGvG,IAAR;aACO,QAAL;aACK,QAAL;aACK,KAAL;iBACSuG,SAAS,CAAT,CAAP;aACG,SAAL;iBACS,CAAC,CAACA,SAAS,CAAT,CAAT;;iBAEOA,QAAP;;;;;oBAKRG,yCAAe1G,MAAMoC,QAAQuE,KAAKJ,UAAU;;;QACtC3G,MAAMkD,OAAN,CAAc9C,IAAd,CAAJ,EAAyB;aAChBuG,SAASC,GAAT,CAAa,UAACC,EAAD,EAAK7I,CAAL;eAAW,OAAK8I,cAAL,CAAoB1G,KAAKpC,CAAL,CAApB,EAA6BwE,MAA7B,EAAqCuE,GAArC,EAA0CF,EAA1C,EAA8C,CAA9C,CAAX;OAAb,CAAP;KADF,MAEO,IAAIzG,KAAK2E,MAAL,IAAe,IAAnB,EAAyB;aACvB3E,KAAK2E,MAAL,CAAYvC,MAAZ,EAAoBmE,QAApB,EAA8BI,GAA9B,CAAP;KADK,MAEA,IAAI,OAAOJ,QAAP,KAAoB,QAAxB,EAAkC;aAChC,CAACA,QAAD,CAAP;KADK,MAEA,IAAI,OAAOA,QAAP,KAAoB,SAAxB,EAAmC;aACjC,CAAC,CAACA,QAAF,CAAP;KADK,MAEA,IAAI3G,MAAMkD,OAAN,CAAcyD,QAAd,CAAJ,EAA6B;aAC3BA,QAAP;KADK,MAEA;aACE,CAACA,QAAD,CAAP;;;;oBAIJzC,yBAAO1B,QAAQpB,QAAQ;QACjBuD,MAAMnC,OAAO+B,GAAP,GAAanD,OAAOnD,MAA9B;QACIuG,MAAM,EAAV;QACImC,WAAW,EAAf;;;6BAGwBnC,GAAxB,EAA6B;cACX,EAAE5F,OAAOwC,MAAT,EADW;oBAEX,EAAExC,OAAO4D,OAAO+B,GAAhB;KAFlB;;;SAMK,IAAI9F,GAAT,IAAgB,KAAK+H,MAArB,EAA6B;UACvBC,QAAQ,KAAKD,MAAL,CAAY/H,GAAZ,CAAZ;UACIgI,MAAM,CAAN,CAAJ,IAAgBA,MAAM,CAAN,CAAhB;;;WAGKjE,OAAO+B,GAAP,GAAaI,GAApB,EAAyB;UACnBgB,IAAInD,OAAO6B,SAAP,EAAR;UACIsB,KAAK,EAAT,EAAa;YACPA,MAAM,EAAV,EAAc;cACPA,KAAK,CAAN,GAAWnD,OAAO6B,SAAP,EAAf;;;YAGEoC,SAAQ,KAAKD,MAAL,CAAYb,CAAZ,CAAZ;YACI,CAACc,MAAL,EAAY;gBACJ,IAAInI,KAAJ,uBAA8BqH,CAA9B,CAAN;;;YAGEvC,MAAM,KAAKsD,cAAL,CAAoBD,OAAM,CAAN,CAApB,EAA8BjE,MAA9B,EAAsCgC,GAAtC,EAA2CmC,QAA3C,CAAV;YACIvD,OAAO,IAAX,EAAiB;cACXA,eAAe4D,wCAAnB,EAAuC;mCACfxC,GAAtB,EAA2BiC,OAAM,CAAN,CAA3B,EAAqCrD,GAArC;WADF,MAEO;gBACDqD,OAAM,CAAN,CAAJ,IAAgBrD,GAAhB;;;;mBAIO,EAAX;OAnBF,MAoBO;iBACIjG,IAAT,CAAcoI,WAAWrB,MAAX,CAAkB1B,MAAlB,EAA0BmD,CAA1B,CAAd;;;;WAIGnB,GAAP;;;oBAGFb,qBAAKsD,MAAM7F,QAAgC;QAAxB8F,eAAwB,uEAAN,IAAM;;QACrCH,MAAM;oBAAA;WAEHE,IAFG;mBAGK,CAHL;mBAIK7F,OAAO+F,WAAP,IAAsB;KAJrC;;QAOIC,MAAM,CAAV;;SAEK,IAAIC,CAAT,IAAc,KAAKb,MAAnB,EAA2B;UACrBC,QAAQ,KAAKD,MAAL,CAAYa,CAAZ,CAAZ;UACIjE,MAAM6D,KAAKR,MAAM,CAAN,CAAL,CAAV;UACIrD,OAAO,IAAP,IAAekE,QAAQlE,GAAR,EAAaqD,MAAM,CAAN,CAAb,CAAnB,EAA2C;;;;UAIvCE,WAAW,KAAKG,cAAL,CAAoBL,MAAM,CAAN,CAApB,EAA8B,IAA9B,EAAoCM,GAApC,EAAyC3D,GAAzC,CAAf;4BACeuD,QAAf,oHAAyB;;;;;;;;;;;;YAAhBE,EAAgB;;eAChBtB,WAAW5B,IAAX,CAAgBkD,EAAhB,CAAP;;;UAGEpI,MAAMuB,MAAMkD,OAAN,CAAcuD,MAAM,CAAN,CAAd,IAA0BA,MAAM,CAAN,CAA1B,GAAqC,CAACA,MAAM,CAAN,CAAD,CAA/C;aACOhI,IAAIR,MAAX;;;QAGEiJ,eAAJ,EAAqB;aACZH,IAAIQ,WAAX;;;WAGKH,GAAP;;;oBAGFrC,yBAAOvC,QAAQyE,MAAM7F,QAAQ;QACvB2F,MAAM;gBACE,EADF;mBAEKvE,OAAO+B,GAFZ;oBAAA;WAIH0C,IAJG;mBAKK;KALf;;QAQIO,aAAJ,GAAoBhF,OAAO+B,GAAP,GAAa,KAAKZ,IAAL,CAAUsD,IAAV,EAAgBF,GAAhB,EAAqB,KAArB,CAAjC;;0BAEkB,KAAKR,GAAvB,oHAA4B;;;;;;;;;;;;UAAnBE,KAAmB;;UACtBrD,MAAM6D,KAAKR,MAAM,CAAN,CAAL,CAAV;UACIrD,OAAO,IAAP,IAAekE,QAAQlE,GAAR,EAAaqD,MAAM,CAAN,CAAb,CAAnB,EAA2C;;;;UAIvCE,WAAW,KAAKG,cAAL,CAAoBL,MAAM,CAAN,CAApB,EAA8BjE,MAA9B,EAAsCuE,GAAtC,EAA2C3D,GAA3C,CAAf;4BACeuD,QAAf,oHAAyB;;;;;;;;;;;;YAAhBE,EAAgB;;mBACZ9B,MAAX,CAAkBvC,MAAlB,EAA0BqE,EAA1B;;;UAGEpI,MAAMuB,MAAMkD,OAAN,CAAcuD,MAAM,CAAN,CAAd,IAA0BA,MAAM,CAAN,CAA1B,GAAqC,CAACA,MAAM,CAAN,CAAD,CAA/C;4BACehI,GAAf,oHAAoB;;;;;;;;;;;;YAAXoI,GAAW;;eACX1B,UAAP,CAAkB0B,GAAlB;;;;QAIA7I,IAAI,CAAR;WACOA,IAAI+I,IAAIU,QAAJ,CAAaxJ,MAAxB,EAAgC;UAC1ByJ,MAAMX,IAAIU,QAAJ,CAAazJ,GAAb,CAAV;UACIoC,IAAJ,CAAS2E,MAAT,CAAgBvC,MAAhB,EAAwBkF,IAAItE,GAA5B,EAAiCsE,IAAItG,MAArC;;;;;;;;;IC/JeuG;;;sBACPvH,IAAZ,EAAgC;QAAdwH,OAAc,uEAAJ,EAAI;;;;QAC1BA,QAAQxH,IAAR,IAAgB,IAApB,EAA0B;cAChBA,IAAR,GAAe,QAAf;;;4CAGF,sBAAM,IAAN,EAAYA,IAAZ,EAAkBwH,OAAlB,CAL8B;;;uBAQhC1D,yBAAO1B,QAAQpB,QAAQuF,UAAU;SAC1BrC,UAAL,GAAkB;cACR;eAAMqC,SAAS,CAAT,CAAN;;KADV;;WAIO,qBAAMzC,MAAN,YAAa1B,MAAb,EAAqBpB,MAArB,EAA6BuF,QAA7B,CAAP;;;uBAGF5B,yBAAOvC,QAAQ5D,OAAOmI,KAAK;QACrB,CAACvE,MAAL,EAAa;;WAEN8B,UAAL,GAAkB;cACV;iBAAM,CAAN;;OADR;;WAIKX,IAAL,CAAU/E,KAAV,EAAiBmI,GAAjB;aACO,CAAC,IAAIc,GAAJ,CAAQ,CAAR,CAAD,CAAP;;;QAGEH,MAAM,IAAV;SACKpD,UAAL,GAAkB;cACR,gBAAC9B,MAAD,EAASY,GAAT;eAAiBsE,MAAMtE,GAAvB;;KADV;;yBAIM2B,MAAN,YAAavC,MAAb,EAAqB5D,KAArB,EAA4BmI,GAA5B;WACO,CAAC,IAAIc,GAAJ,CAAQH,GAAR,CAAD,CAAP;;;;EAlCoCvJ,EAAEgC;;IAsCpC0H;eACQzE,GAAZ,EAAiB;;;SACVA,GAAL,GAAWA,GAAX;SACK2C,UAAL,GAAkB,IAAlB;;;gBAGF+B,6BAAU;WACD,KAAK1E,GAAZ;;;;;;AC3CJ,qBAAe,IAAIkD,OAAJ,CAAY;;AAEzB,CAAC,CAAD,EAAY,YAAZ,EAAoC,OAApC,EAAmF,IAAnF,CAFyB,EAGzB,CAAC,CAAD,EAAY,YAAZ,EAAoC,OAApC,EAAmF,IAAnF,CAHyB,EAIzB,CAAC,CAAD,EAAY,aAAZ,EAAoC,OAApC,EAAmF,IAAnF,CAJyB,EAKzB,CAAC,CAAD,EAAY,kBAAZ,EAAoC,OAApC,EAAmF,IAAnF,CALyB,EAMzB,CAAC,CAAC,EAAD,EAAK,CAAL,CAAD,EAAY,WAAZ,EAAoC,QAApC,EAAmF,QAAnF,CANyB,EAOzB,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,WAAZ,EAAoC,QAApC,EAAmF,CAAnF,CAPyB,EAQzB,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,UAAZ,EAAoC,QAApC,EAAmF,CAAnF,CARyB,EASzB,CAAC,EAAD,EAAY,OAAZ,EAAoC,QAApC,EAAmF,IAAnF,CATyB,EAUzB,CAAC,EAAD,EAAY,OAAZ,EAAoC,QAApC,EAAmF,IAAnF,CAVyB,EAWzB,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,WAAZ,EAAoC,OAApC,EAAmF,IAAnF,CAXyB,EAYzB,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,WAAZ,EAAoC,OAApC,EAAmF,IAAnF,CAZyB,EAazB,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,WAAZ,EAAoC,SAApC,EAAmF,KAAnF,CAbyB,EAczB,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,eAAZ,EAAoC,QAApC,EAAmF,CAAnF,CAdyB,EAezB,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,iBAAZ,EAAoC,QAApC,EAAmF,IAAnF,CAfyB,EAgBzB,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,mBAAZ,EAAoC,QAApC,EAAmF,CAAnF,CAhByB,EAiBzB,CAAC,EAAD,EAAY,eAAZ,EAAoC,QAApC,EAAmF,CAAnF,CAjByB,EAkBzB,CAAC,EAAD,EAAY,eAAZ,EAAoC,QAApC,EAAmF,CAAnF,CAlByB,EAmBzB,CAAC,EAAD,EAAY,OAAZ,EAAoC,IAAIqB,UAAJ,CAAe,IAAI1D,QAAJ,EAAf,EAA6B,EAAC7D,MAAM,OAAP,EAA7B,CAApC,EAAmF,IAAnF,CAnByB,CAAZ,CAAf;;ACJA;;AAEA,sBAAe,CACb,SADa,EACF,OADE,EACO,QADP,EACiB,UADjB,EAC6B,YAD7B,EAC2C,QAD3C,EAEb,SAFa,EAEF,WAFE,EAEW,YAFX,EAEyB,WAFzB,EAEsC,YAFtC,EAGb,UAHa,EAGD,MAHC,EAGO,OAHP,EAGgB,QAHhB,EAG0B,QAH1B,EAGoC,OAHpC,EAG6C,MAH7C,EAGqD,KAHrD,EAIb,KAJa,EAIN,OAJM,EAIG,MAJH,EAIW,MAJX,EAImB,KAJnB,EAI0B,OAJ1B,EAImC,OAJnC,EAI4C,MAJ5C,EAIoD,OAJpD,EAKb,WALa,EAKA,MALA,EAKQ,OALR,EAKiB,SALjB,EAK4B,UAL5B,EAKwC,IALxC,EAK8C,GAL9C,EAKmD,GALnD,EAKwD,GALxD,EAMb,GANa,EAMR,GANQ,EAMH,GANG,EAME,GANF,EAMO,GANP,EAMY,GANZ,EAMiB,GANjB,EAMsB,GANtB,EAM2B,GAN3B,EAMgC,GANhC,EAMqC,GANrC,EAM0C,GAN1C,EAM+C,GAN/C,EAMoD,GANpD,EAMyD,GANzD,EAOb,GAPa,EAOR,GAPQ,EAOH,GAPG,EAOE,GAPF,EAOO,GAPP,EAOY,GAPZ,EAOiB,GAPjB,EAOsB,GAPtB,EAO2B,aAP3B,EAO0C,WAP1C,EAQb,cARa,EAQG,aARH,EAQkB,YARlB,EAQgC,WARhC,EAQ6C,GAR7C,EAQkD,GARlD,EAQuD,GARvD,EASb,GATa,EASR,GATQ,EASH,GATG,EASE,GATF,EASO,GATP,EASY,GATZ,EASiB,GATjB,EASsB,GATtB,EAS2B,GAT3B,EASgC,GAThC,EASqC,GATrC,EAS0C,GAT1C,EAS+C,GAT/C,EASoD,GATpD,EASyD,GATzD,EAUb,GAVa,EAUR,GAVQ,EAUH,GAVG,EAUE,GAVF,EAUO,GAVP,EAUY,GAVZ,EAUiB,GAVjB,EAUsB,GAVtB,EAU2B,WAV3B,EAUwC,KAVxC,EAU+C,YAV/C,EAWb,YAXa,EAWC,YAXD,EAWe,MAXf,EAWuB,UAXvB,EAWmC,UAXnC,EAW+C,KAX/C,EAYb,QAZa,EAYH,SAZG,EAYQ,UAZR,EAYoB,aAZpB,EAYmC,cAZnC,EAab,eAba,EAaI,eAbJ,EAaqB,gBAbrB,EAauC,IAbvC,EAa6C,IAb7C,EAamD,QAbnD,EAcb,QAda,EAcH,WAdG,EAcU,gBAdV,EAc4B,WAd5B,EAcyC,QAdzC,EAeb,gBAfa,EAeK,cAfL,EAeqB,eAfrB,EAesC,gBAftC,EAgBb,UAhBa,EAgBD,aAhBC,EAgBc,cAhBd,EAgB8B,OAhB9B,EAgBuC,OAhBvC,EAgBgD,YAhBhD,EAiBb,OAjBa,EAiBJ,QAjBI,EAiBM,OAjBN,EAiBe,WAjBf,EAiB4B,UAjB5B,EAiBwC,MAjBxC,EAiBgD,SAjBhD,EAkBb,cAlBa,EAkBG,QAlBH,EAkBa,OAlBb,EAkBsB,QAlBtB,EAkBgC,IAlBhC,EAkBsC,aAlBtC,EAkBqD,QAlBrD,EAmBb,QAnBa,EAmBH,IAnBG,EAmBG,cAnBH,EAmBmB,IAnBnB,EAmByB,UAnBzB,EAmBqC,QAnBrC,EAmB+C,QAnB/C,EAmByD,IAnBzD,EAoBb,YApBa,EAoBC,aApBD,EAoBgB,YApBhB,EAoB8B,IApB9B,EAoBoC,WApBpC,EAoBiD,KApBjD,EAqBb,SArBa,EAqBF,WArBE,EAqBW,OArBX,EAqBoB,YArBpB,EAqBkC,QArBlC,EAqB4C,WArB5C,EAsBb,QAtBa,EAsBH,OAtBG,EAsBM,eAtBN,EAsBuB,aAtBvB,EAsBsC,YAtBtC,EAsBoD,OAtBpD,EAuBb,KAvBa,EAuBN,UAvBM,EAuBM,eAvBN,EAuBuB,WAvBvB,EAuBoC,QAvBpC,EAuB8C,aAvB9C,EAwBb,WAxBa,EAwBA,QAxBA,EAwBU,OAxBV,EAwBmB,QAxBnB,EAwB6B,UAxB7B,EAwByC,QAxBzC,EAyBb,aAzBa,EAyBE,WAzBF,EAyBe,QAzBf,EAyByB,QAzBzB,EAyBmC,aAzBnC,EAyBkD,WAzBlD,EA0Bb,QA1Ba,EA0BH,QA1BG,EA0BO,QA1BP,EA0BiB,aA1BjB,EA0BgC,WA1BhC,EA0B6C,QA1B7C,EA2Bb,QA3Ba,EA2BH,QA3BG,EA2BO,QA3BP,EA2BiB,aA3BjB,EA2BgC,WA3BhC,EA2B6C,QA3B7C,EA4Bb,QA5Ba,EA4BH,WA5BG,EA4BU,QA5BV,EA4BoB,QA5BpB,EA4B8B,aA5B9B,EA4B6C,WA5B7C,EA6Bb,QA7Ba,EA6BH,OA7BG,EA6BM,QA7BN,EA6BgB,UA7BhB,EA6B4B,QA7B5B,EA6BsC,aA7BtC,EA8Bb,WA9Ba,EA8BA,QA9BA,EA8BU,QA9BV,EA8BoB,aA9BpB,EA8BmC,WA9BnC,EA8BgD,QA9BhD,EA+Bb,QA/Ba,EA+BH,QA/BG,EA+BO,aA/BP,EA+BsB,WA/BtB,EA+BmC,QA/BnC,EA+B6C,QA/B7C,EAgCb,QAhCa,EAgCH,QAhCG,EAgCO,aAhCP,EAgCsB,WAhCtB,EAgCmC,QAhCnC,EAgC6C,QAhC7C,EAiCb,WAjCa,EAiCA,QAjCA,EAiCU,aAjCV,EAiCyB,mBAjCzB,EAkCb,gBAlCa,EAkCK,gBAlCL,EAkCuB,gBAlCvB,EAkCyC,YAlCzC,EAmCb,mBAnCa,EAmCQ,oBAnCR,EAmC8B,gBAnC9B,EAoCb,gBApCa,EAoCK,cApCL,EAoCqB,aApCrB,EAoCoC,aApCpC,EAqCb,eArCa,EAqCI,cArCJ,EAqCoB,cArCpB,EAqCoC,aArCpC,EAsCb,eAtCa,EAsCI,eAtCJ,EAsCqB,cAtCrB,EAsCqC,eAtCrC,EAuCb,qBAvCa,EAuCU,gBAvCV,EAuC4B,eAvC5B,EAuC6C,WAvC7C,EAwCb,WAxCa,EAwCA,cAxCA,EAwCgB,WAxChB,EAwC6B,WAxC7B,EAwC0C,WAxC1C,EAyCb,WAzCa,EAyCA,WAzCA,EAyCa,WAzCb,EAyC0B,WAzC1B,EAyCuC,WAzCvC,EA0Cb,WA1Ca,EA0CA,WA1CA,EA0Ca,IA1Cb,EA0CmB,KA1CnB,EA0C0B,KA1C1B,EA0CiC,mBA1CjC,EA2Cb,oBA3Ca,EA2CS,iBA3CT,EA2C4B,gBA3C5B,EA2C8C,YA3C9C,EA4Cb,QA5Ca,EA4CH,QA5CG,EA4CO,QA5CP,EA4CiB,QA5CjB,EA4C2B,QA5C3B,EA4CqC,QA5CrC,EA4C+C,QA5C/C,EA6Cb,QA7Ca,EA6CH,QA7CG,EA6CO,QA7CP,EA6CiB,QA7CjB,EA6C2B,QA7C3B,EA6CqC,QA7CrC,EA6C+C,QA7C/C,EA8Cb,QA9Ca,EA8CH,QA9CG,EA8CO,QA9CP,EA8CiB,QA9CjB,EA8C2B,QA9C3B,EA8CqC,QA9CrC,EA8C+C,QA9C/C,EA+Cb,QA/Ca,EA+CH,QA/CG,EA+CO,QA/CP,EA+CiB,QA/CjB,EA+C2B,QA/C3B,EA+CqC,eA/CrC,EAgDb,WAhDa,EAgDA,QAhDA,EAgDU,YAhDV,EAgDwB,iBAhDxB,EAgD2C,cAhD3C,EAiDb,aAjDa,EAiDE,aAjDF,EAiDiB,aAjDjB,EAiDgC,eAjDhC,EAiDiD,YAjDjD,EAkDb,YAlDa,EAkDC,gBAlDD,EAkDmB,aAlDnB,EAkDkC,YAlDlC,EAmDb,gBAnDa,EAmDK,aAnDL,EAmDoB,WAnDpB,EAmDiC,cAnDjC,EAoDb,mBApDa,EAoDQ,WApDR,EAoDqB,cApDrB,EAoDqC,aApDrC,EAqDb,cArDa,EAqDG,UArDH,EAqDe,WArDf,EAqD4B,cArD5B,EAqD4C,cArD5C,EAsDb,cAtDa,EAsDG,aAtDH,EAsDkB,eAtDlB,EAsDmC,eAtDnC,EAuDb,cAvDa,EAuDG,cAvDH,EAuDmB,aAvDnB,EAuDkC,aAvDlC,EAwDb,eAxDa,EAwDI,cAxDJ,EAwDoB,cAxDpB,EAwDoC,aAxDpC,EAyDb,eAzDa,EAyDI,eAzDJ,EAyDqB,cAzDrB,EAyDqC,cAzDrC,EA0Db,gBA1Da,EA0DK,gBA1DL,EA0DuB,eA1DvB,EA0DwC,aA1DxC,EA2Db,aA3Da,EA2DE,kBA3DF,EA2DsB,aA3DtB,EA2DqC,gBA3DrC,EA4Db,YA5Da,EA4DC,SA5DD,EA4DY,eA5DZ,EA4D6B,aA5D7B,EA4D4C,aA5D5C,EA6Db,kBA7Da,EA6DO,gBA7DP,EA6DyB,aA7DzB,EA6DwC,aA7DxC,EA8Db,kBA9Da,EA8DO,gBA9DP,EA8DyB,UA9DzB,EA8DqC,aA9DrC,EA+Db,aA/Da,EA+DE,aA/DF,EA+DiB,kBA/DjB,EA+DqC,aA/DrC,EAgEb,gBAhEa,EAgEK,SAhEL,EAgEgB,aAhEhB,EAgE+B,aAhE/B,EAgE8C,aAhE9C,EAiEb,kBAjEa,EAiEO,gBAjEP,EAiEyB,aAjEzB,EAiEwC,YAjExC,EAkEb,gBAlEa,EAkEK,SAlEL,EAkEgB,SAlEhB,EAkE2B,SAlE3B,EAkEsC,SAlEtC,EAkEiD,OAlEjD,EAmEb,MAnEa,EAmEL,MAnEK,EAmEG,OAnEH,EAmEY,QAnEZ,EAmEsB,SAnEtB,EAmEiC,OAnEjC,EAmE0C,UAnE1C,CAAf;;ACFO,IAAI2H,mBAAmB,CAC5B,EAD4B,EACxB,EADwB,EACpB,EADoB,EAChB,EADgB,EACZ,EADY,EACR,EADQ,EACJ,EADI,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,EADxB,EAC4B,EAD5B,EACgC,EADhC,EACoC,EADpC,EACwC,EADxC,EAC4C,EAD5C,EACgD,EADhD,EACoD,EADpD,EACwD,EADxD,EAC4D,EAD5D,EACgE,EADhE,EACoE,EADpE,EACwE,EADxE,EAC4E,EAD5E,EACgF,EADhF,EAE5B,EAF4B,EAExB,EAFwB,EAEpB,EAFoB,EAEhB,EAFgB,EAEZ,OAFY,EAEH,QAFG,EAEO,UAFP,EAEmB,YAFnB,EAEiC,QAFjC,EAE2C,SAF3C,EAEsD,WAFtD,EAEmE,YAFnE,EAG5B,WAH4B,EAGf,YAHe,EAGD,UAHC,EAGW,MAHX,EAGmB,OAHnB,EAG4B,QAH5B,EAGsC,QAHtC,EAGgD,OAHhD,EAGyD,MAHzD,EAGiE,KAHjE,EAGwE,KAHxE,EAI5B,OAJ4B,EAInB,MAJmB,EAIX,MAJW,EAIH,KAJG,EAII,OAJJ,EAIa,OAJb,EAIsB,MAJtB,EAI8B,OAJ9B,EAIuC,WAJvC,EAIoD,MAJpD,EAI4D,OAJ5D,EAIqE,SAJrE,EAK5B,UAL4B,EAKhB,IALgB,EAKV,GALU,EAKL,GALK,EAKA,GALA,EAKK,GALL,EAKU,GALV,EAKe,GALf,EAKoB,GALpB,EAKyB,GALzB,EAK8B,GAL9B,EAKmC,GALnC,EAKwC,GALxC,EAK6C,GAL7C,EAKkD,GALlD,EAKuD,GALvD,EAK4D,GAL5D,EAKiE,GALjE,EAKsE,GALtE,EAK2E,GAL3E,EAKgF,GALhF,EAM5B,GAN4B,EAMvB,GANuB,EAMlB,GANkB,EAMb,GANa,EAMR,GANQ,EAMH,GANG,EAME,GANF,EAMO,aANP,EAMsB,WANtB,EAMmC,cANnC,EAMmD,aANnD,EAMkE,YANlE,EAO5B,WAP4B,EAOf,GAPe,EAOV,GAPU,EAOL,GAPK,EAOA,GAPA,EAOK,GAPL,EAOU,GAPV,EAOe,GAPf,EAOoB,GAPpB,EAOyB,GAPzB,EAO8B,GAP9B,EAOmC,GAPnC,EAOwC,GAPxC,EAO6C,GAP7C,EAOkD,GAPlD,EAOuD,GAPvD,EAO4D,GAP5D,EAOiE,GAPjE,EAOsE,GAPtE,EAO2E,GAP3E,EAOgF,GAPhF,EAQ5B,GAR4B,EAQvB,GARuB,EAQlB,GARkB,EAQb,GARa,EAQR,GARQ,EAQH,GARG,EAQE,WARF,EAQe,KARf,EAQsB,YARtB,EAQoC,YARpC,EAQkD,EARlD,EAQsD,EARtD,EAQ0D,EAR1D,EAQ8D,EAR9D,EAQkE,EARlE,EAQsE,EARtE,EAQ0E,EAR1E,EAQ8E,EAR9E,EAS5B,EAT4B,EASxB,EATwB,EASpB,EAToB,EAShB,EATgB,EASZ,EATY,EASR,EATQ,EASJ,EATI,EASA,EATA,EASI,EATJ,EASQ,EATR,EASY,EATZ,EASgB,EAThB,EASoB,EATpB,EASwB,EATxB,EAS4B,EAT5B,EASgC,EAThC,EASoC,EATpC,EASwC,EATxC,EAS4C,EAT5C,EASgD,EAThD,EASoD,EATpD,EASwD,EATxD,EAS4D,EAT5D,EASgE,EAThE,EASoE,EATpE,EASwE,EATxE,EAU5B,YAV4B,EAUd,MAVc,EAUN,UAVM,EAUM,UAVN,EAUkB,KAVlB,EAUyB,QAVzB,EAUmC,SAVnC,EAU8C,UAV9C,EAU0D,aAV1D,EAW5B,cAX4B,EAWZ,eAXY,EAWK,eAXL,EAWsB,gBAXtB,EAWwC,IAXxC,EAW8C,IAX9C,EAWoD,EAXpD,EAWwD,QAXxD,EAWkE,QAXlE,EAY5B,WAZ4B,EAYf,gBAZe,EAYG,EAZH,EAYO,WAZP,EAYoB,QAZpB,EAY8B,gBAZ9B,EAYgD,cAZhD,EAYgE,eAZhE,EAa5B,gBAb4B,EAaV,UAbU,EAaE,aAbF,EAaiB,EAbjB,EAaqB,cAbrB,EAaqC,EAbrC,EAayC,OAbzC,EAakD,OAblD,EAa2D,YAb3D,EAayE,OAbzE,EAc5B,QAd4B,EAclB,OAdkB,EAcT,WAdS,EAcI,UAdJ,EAcgB,EAdhB,EAcoB,MAdpB,EAc4B,SAd5B,EAcuC,EAdvC,EAc2C,cAd3C,EAc2D,QAd3D,EAcqE,OAdrE,EAe5B,QAf4B,EAelB,EAfkB,EAed,EAfc,EAeV,EAfU,EAeN,EAfM,EAeF,EAfE,EAeE,EAfF,EAeM,EAfN,EAeU,EAfV,EAec,EAfd,EAekB,EAflB,EAesB,EAftB,EAe0B,EAf1B,EAe8B,EAf9B,EAekC,EAflC,EAesC,EAftC,EAe0C,EAf1C,EAe8C,IAf9C,EAeoD,EAfpD,EAewD,aAfxD,EAeuE,EAfvE,EAe2E,EAf3E,EAe+E,EAf/E,EAgB5B,EAhB4B,EAgBxB,QAhBwB,EAgBd,QAhBc,EAgBJ,IAhBI,EAgBE,cAhBF,EAgBkB,EAhBlB,EAgBsB,EAhBtB,EAgB0B,EAhB1B,EAgB8B,EAhB9B,EAgBkC,EAhBlC,EAgBsC,IAhBtC,EAgB4C,EAhB5C,EAgBgD,EAhBhD,EAgBoD,EAhBpD,EAgBwD,UAhBxD,EAgBoE,EAhBpE,EAgBwE,EAhBxE,EAiB5B,QAjB4B,EAiBlB,QAjBkB,EAiBR,IAjBQ,EAiBF,YAjBE,CAAvB;;AAoBP,AAAO,IAAIC,iBAAiB,CAC1B,EAD0B,EACtB,EADsB,EAClB,EADkB,EACd,EADc,EACV,EADU,EACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,EADV,EACc,EADd,EACkB,EADlB,EACsB,EADtB,EAC0B,EAD1B,EAC8B,EAD9B,EACkC,EADlC,EACsC,EADtC,EAC0C,EAD1C,EAC8C,EAD9C,EACkD,EADlD,EACsD,EADtD,EAC0D,EAD1D,EAC8D,EAD9D,EACkE,EADlE,EACsE,EADtE,EAC0E,EAD1E,EAC8E,EAD9E,EACkF,EADlF,EAE1B,EAF0B,EAEtB,EAFsB,EAElB,EAFkB,EAEd,EAFc,EAEV,OAFU,EAED,aAFC,EAEc,mBAFd,EAEmC,EAFnC,EAEuC,gBAFvC,EAEyD,gBAFzD,EAG1B,gBAH0B,EAGR,YAHQ,EAGM,mBAHN,EAG2B,oBAH3B,EAGiD,gBAHjD,EAGmE,gBAHnE,EAI1B,OAJ0B,EAIjB,QAJiB,EAIP,QAJO,EAIG,UAJH,EAIe,cAJf,EAI+B,aAJ/B,EAI8C,aAJ9C,EAI6D,eAJ7D,EAK1B,cAL0B,EAKV,cALU,EAKM,aALN,EAKqB,eALrB,EAKsC,eALtC,EAKuD,cALvD,EAKuE,OALvE,EAM1B,WAN0B,EAMb,eANa,EAMI,qBANJ,EAM2B,gBAN3B,EAM6C,eAN7C,EAM8D,EAN9D,EAMkE,WANlE,EAO1B,WAP0B,EAOb,cAPa,EAOG,WAPH,EAOgB,WAPhB,EAO6B,EAP7B,EAOiC,EAPjC,EAOqC,WAPrC,EAOkD,EAPlD,EAOsD,EAPtD,EAO0D,WAP1D,EAOuE,WAPvE,EAQ1B,WAR0B,EAQb,WARa,EAQA,EARA,EAQI,EARJ,EAQQ,WARR,EAQqB,WARrB,EAQkC,WARlC,EAQ+C,EAR/C,EAQmD,IARnD,EAQyD,IARzD,EAQ+D,IAR/D,EAQqE,KARrE,EAQ4E,KAR5E,EAS1B,mBAT0B,EASL,EATK,EASD,oBATC,EASqB,iBATrB,EASwC,gBATxC,EAS0D,YAT1D,EASwE,QATxE,EAU1B,QAV0B,EAUhB,QAVgB,EAUN,QAVM,EAUI,QAVJ,EAUc,QAVd,EAUwB,QAVxB,EAUkC,QAVlC,EAU4C,QAV5C,EAUsD,QAVtD,EAUgE,QAVhE,EAU0E,QAV1E,EAW1B,QAX0B,EAWhB,QAXgB,EAWN,QAXM,EAWI,QAXJ,EAWc,QAXd,EAWwB,QAXxB,EAWkC,QAXlC,EAW4C,QAX5C,EAWsD,QAXtD,EAWgE,QAXhE,EAW0E,QAX1E,EAY1B,QAZ0B,EAYhB,QAZgB,EAYN,QAZM,EAYI,eAZJ,EAYqB,WAZrB,EAYkC,QAZlC,EAY4C,YAZ5C,EAY0D,EAZ1D,EAY8D,EAZ9D,EAYkE,EAZlE,EAYsE,EAZtE,EAY0E,EAZ1E,EAY8E,EAZ9E,EAYkF,EAZlF,EAa1B,EAb0B,EAatB,EAbsB,EAalB,EAbkB,EAad,EAbc,EAaV,EAbU,EAaN,EAbM,EAaF,EAbE,EAaE,EAbF,EAaM,EAbN,EAaU,EAbV,EAac,EAbd,EAakB,EAblB,EAasB,EAbtB,EAa0B,EAb1B,EAa8B,EAb9B,EAakC,EAblC,EAasC,EAbtC,EAa0C,EAb1C,EAa8C,EAb9C,EAakD,EAblD,EAasD,EAbtD,EAa0D,EAb1D,EAa8D,EAb9D,EAakE,EAblE,EAasE,EAbtE,EAa0E,EAb1E,EAa8E,EAb9E,EAc1B,iBAd0B,EAcP,cAdO,EAcS,aAdT,EAcwB,EAdxB,EAc4B,EAd5B,EAcgC,aAdhC,EAc+C,aAd/C,EAc8D,eAd9D,EAe1B,YAf0B,EAeZ,YAfY,EAeE,EAfF,EAeM,gBAfN,EAewB,EAfxB,EAe4B,EAf5B,EAegC,aAfhC,EAe+C,EAf/C,EAemD,EAfnD,EAeuD,YAfvD,EAeqE,gBAfrE,EAgB1B,EAhB0B,EAgBtB,EAhBsB,EAgBlB,aAhBkB,EAgBH,WAhBG,EAgBU,cAhBV,EAgB0B,EAhB1B,EAgB8B,EAhB9B,EAgBkC,EAhBlC,EAgBsC,YAhBtC,EAgBoD,SAhBpD,EAgB+D,eAhB/D,EAiB1B,mBAjB0B,EAiBL,WAjBK,EAiBQ,cAjBR,EAiBwB,aAjBxB,EAiBuC,cAjBvC,EAiBuD,UAjBvD,EAiBmE,WAjBnE,EAiBgF,EAjBhF,EAkB1B,EAlB0B,EAkBtB,cAlBsB,EAkBN,aAlBM,EAkBS,aAlBT,EAkBwB,eAlBxB,EAkByC,cAlBzC,EAkByD,cAlBzD,EAmB1B,aAnB0B,EAmBX,eAnBW,EAmBM,eAnBN,EAmBuB,cAnBvB,EAmBuC,cAnBvC,EAmBuD,aAnBvD,EAmBsE,aAnBtE,EAoB1B,eApB0B,EAoBT,cApBS,EAoBO,cApBP,EAoBuB,aApBvB,EAoBsC,eApBtC,EAoBuD,eApBvD,EAqB1B,cArB0B,EAqBV,cArBU,EAqBM,gBArBN,EAqBwB,gBArBxB,EAqB0C,eArB1C,EAqB2D,aArB3D,EAsB1B,aAtB0B,EAsBX,kBAtBW,EAsBS,aAtBT,EAsBwB,gBAtBxB,EAsB0C,YAtB1C,EAsBwD,SAtBxD,EAsBmE,eAtBnE,EAuB1B,aAvB0B,EAuBX,aAvBW,EAuBI,kBAvBJ,EAuBwB,gBAvBxB,EAuB0C,aAvB1C,EAuByD,aAvBzD,EAwB1B,kBAxB0B,EAwBN,gBAxBM,EAwBY,UAxBZ,EAwBwB,aAxBxB,EAwBuC,aAxBvC,EAwBsD,aAxBtD,EAyB1B,kBAzB0B,EAyBN,aAzBM,EAyBS,gBAzBT,EAyB2B,SAzB3B,EAyBsC,aAzBtC,EAyBqD,aAzBrD,EAyBoE,aAzBpE,EA0B1B,kBA1B0B,EA0BN,gBA1BM,EA0BY,aA1BZ,EA0B2B,YA1B3B,EA0ByC,gBA1BzC,CAArB;;ACpBA,IAAIC,kBAAkB,CAC3B,SAD2B,EAChB,OADgB,EACP,QADO,EACG,UADH,EACe,YADf,EAC6B,QAD7B,EAE3B,SAF2B,EAEhB,WAFgB,EAEH,YAFG,EAEW,WAFX,EAEwB,YAFxB,EAG3B,UAH2B,EAGf,MAHe,EAGP,OAHO,EAGE,QAHF,EAGY,QAHZ,EAGsB,OAHtB,EAG+B,MAH/B,EAI3B,KAJ2B,EAIpB,KAJoB,EAIb,OAJa,EAIJ,MAJI,EAII,MAJJ,EAIY,KAJZ,EAImB,OAJnB,EAI4B,OAJ5B,EAK3B,MAL2B,EAKnB,OALmB,EAKV,WALU,EAKG,MALH,EAKW,OALX,EAKoB,SALpB,EAK+B,UAL/B,EAM3B,IAN2B,EAMrB,GANqB,EAMhB,GANgB,EAMX,GANW,EAMN,GANM,EAMD,GANC,EAMI,GANJ,EAMS,GANT,EAMc,GANd,EAMmB,GANnB,EAMwB,GANxB,EAM6B,GAN7B,EAMkC,GANlC,EAMuC,GANvC,EAO3B,GAP2B,EAOtB,GAPsB,EAOjB,GAPiB,EAOZ,GAPY,EAOP,GAPO,EAOF,GAPE,EAOG,GAPH,EAOQ,GAPR,EAOa,GAPb,EAOkB,GAPlB,EAOuB,GAPvB,EAO4B,GAP5B,EAOiC,GAPjC,EAQ3B,aAR2B,EAQZ,WARY,EAQC,cARD,EAQiB,aARjB,EAQgC,YARhC,EAS3B,WAT2B,EASd,GATc,EAST,GATS,EASJ,GATI,EASC,GATD,EASM,GATN,EASW,GATX,EASgB,GAThB,EASqB,GATrB,EAS0B,GAT1B,EAS+B,GAT/B,EASoC,GATpC,EASyC,GATzC,EAU3B,GAV2B,EAUtB,GAVsB,EAUjB,GAViB,EAUZ,GAVY,EAUP,GAVO,EAUF,GAVE,EAUG,GAVH,EAUQ,GAVR,EAUa,GAVb,EAUkB,GAVlB,EAUuB,GAVvB,EAU4B,GAV5B,EAUiC,GAVjC,EAUsC,GAVtC,EAW3B,WAX2B,EAWd,KAXc,EAWP,YAXO,EAWO,YAXP,EAWqB,YAXrB,EAWmC,MAXnC,EAY3B,UAZ2B,EAYf,UAZe,EAYH,KAZG,EAYI,QAZJ,EAYc,SAZd,EAYyB,UAZzB,EAa3B,aAb2B,EAaZ,cAbY,EAaI,eAbJ,EAaqB,eAbrB,EAc3B,gBAd2B,EAcT,IAdS,EAcH,IAdG,EAcG,QAdH,EAca,QAdb,EAcuB,WAdvB,EAe3B,gBAf2B,EAeT,WAfS,EAeI,QAfJ,EAec,gBAfd,EAgB3B,cAhB2B,EAgBX,eAhBW,EAgBM,gBAhBN,EAgBwB,UAhBxB,EAiB3B,aAjB2B,EAiBZ,cAjBY,EAiBI,OAjBJ,EAiBa,OAjBb,EAiBsB,YAjBtB,EAiBoC,OAjBpC,EAkB3B,QAlB2B,EAkBjB,OAlBiB,EAkBR,WAlBQ,EAkBK,UAlBL,EAkBiB,MAlBjB,EAkByB,SAlBzB,EAmB3B,cAnB2B,EAmBX,QAnBW,EAmBD,OAnBC,EAmBQ,QAnBR,EAmBkB,IAnBlB,EAmBwB,aAnBxB,EAoB3B,QApB2B,EAoBjB,QApBiB,EAoBP,IApBO,EAoBD,cApBC,EAoBe,IApBf,EAoBqB,UApBrB,EAoBiC,QApBjC,EAqB3B,QArB2B,EAqBjB,IArBiB,EAqBX,YArBW,EAqBG,aArBH,EAqBkB,YArBlB,EAqBgC,IArBhC,EAsB3B,WAtB2B,EAsBd,KAtBc,EAsBP,SAtBO,EAsBI,WAtBJ,EAsBiB,OAtBjB,EAsB0B,YAtB1B,EAuB3B,QAvB2B,EAuBjB,WAvBiB,EAuBJ,QAvBI,EAuBM,OAvBN,EAuBe,eAvBf,EAuBgC,aAvBhC,EAwB3B,YAxB2B,EAwBb,OAxBa,EAwBJ,KAxBI,EAwBG,UAxBH,EAwBe,eAxBf,EAwBgC,WAxBhC,EAyB3B,QAzB2B,EAyBjB,aAzBiB,EAyBF,WAzBE,EAyBW,QAzBX,EAyBqB,OAzBrB,EAyB8B,QAzB9B,EA0B3B,UA1B2B,EA0Bf,QA1Be,EA0BL,aA1BK,EA0BU,WA1BV,EA0BuB,QA1BvB,EA0BiC,QA1BjC,EA2B3B,aA3B2B,EA2BZ,WA3BY,EA2BC,QA3BD,EA2BW,QA3BX,EA2BqB,QA3BrB,EA2B+B,aA3B/B,EA4B3B,WA5B2B,EA4Bd,QA5Bc,EA4BJ,QA5BI,EA4BM,QA5BN,EA4BgB,QA5BhB,EA4B0B,aA5B1B,EA6B3B,WA7B2B,EA6Bd,QA7Bc,EA6BJ,QA7BI,EA6BM,WA7BN,EA6BmB,QA7BnB,EA6B6B,QA7B7B,EA8B3B,aA9B2B,EA8BZ,WA9BY,EA8BC,QA9BD,EA8BW,OA9BX,EA8BoB,QA9BpB,EA8B8B,UA9B9B,EA+B3B,QA/B2B,EA+BjB,aA/BiB,EA+BF,WA/BE,EA+BW,QA/BX,EA+BqB,QA/BrB,EA+B+B,aA/B/B,EAgC3B,WAhC2B,EAgCd,QAhCc,EAgCJ,QAhCI,EAgCM,QAhCN,EAgCgB,aAhChB,EAgC+B,WAhC/B,EAiC3B,QAjC2B,EAiCjB,QAjCiB,EAiCP,QAjCO,EAiCG,QAjCH,EAiCa,aAjCb,EAiC4B,WAjC5B,EAkC3B,QAlC2B,EAkCjB,QAlCiB,EAkCP,WAlCO,EAkCM,QAlCN,CAAtB;;AAqCP,AAAO,IAAIC,gBAAgB,CACzB,SADyB,EACd,OADc,EACL,aADK,EACU,mBADV,EAC+B,gBAD/B,EAEzB,gBAFyB,EAEP,gBAFO,EAEW,YAFX,EAEyB,mBAFzB,EAGzB,oBAHyB,EAGH,gBAHG,EAGe,gBAHf,EAGiC,OAHjC,EAIzB,QAJyB,EAIf,QAJe,EAIL,UAJK,EAIO,cAJP,EAIuB,aAJvB,EAKzB,aALyB,EAKV,eALU,EAKO,cALP,EAKuB,cALvB,EAMzB,aANyB,EAMV,eANU,EAMO,eANP,EAMwB,cANxB,EAOzB,OAPyB,EAOhB,WAPgB,EAOH,eAPG,EAOc,qBAPd,EAQzB,gBARyB,EAQP,eARO,EAQU,WARV,EAQuB,WARvB,EASzB,cATyB,EAST,WATS,EASI,WATJ,EASiB,WATjB,EAS8B,WAT9B,EAUzB,WAVyB,EAUZ,WAVY,EAUC,WAVD,EAUc,WAVd,EAU2B,WAV3B,EAWzB,WAXyB,EAWZ,IAXY,EAWN,IAXM,EAWA,IAXA,EAWM,KAXN,EAWa,KAXb,EAWoB,mBAXpB,EAYzB,oBAZyB,EAYH,iBAZG,EAYgB,gBAZhB,EAYkC,YAZlC,EAazB,QAbyB,EAaf,QAbe,EAaL,QAbK,EAaK,QAbL,EAae,QAbf,EAayB,QAbzB,EAamC,QAbnC,EAczB,QAdyB,EAcf,QAde,EAcL,QAdK,EAcK,QAdL,EAce,QAdf,EAcyB,QAdzB,EAcmC,QAdnC,EAezB,QAfyB,EAef,QAfe,EAeL,QAfK,EAeK,QAfL,EAee,QAff,EAeyB,QAfzB,EAemC,QAfnC,EAgBzB,QAhByB,EAgBf,QAhBe,EAgBL,QAhBK,EAgBK,QAhBL,EAgBe,QAhBf,EAgByB,eAhBzB,EAiBzB,WAjByB,EAiBZ,QAjBY,EAiBF,YAjBE,EAiBY,iBAjBZ,EAiB+B,cAjB/B,EAkBzB,aAlByB,EAkBV,aAlBU,EAkBK,aAlBL,EAkBoB,eAlBpB,EAmBzB,YAnByB,EAmBX,YAnBW,EAmBG,gBAnBH,EAmBqB,aAnBrB,EAoBzB,YApByB,EAoBX,gBApBW,EAoBO,aApBP,EAoBsB,WApBtB,EAqBzB,cArByB,EAqBT,YArBS,EAqBK,SArBL,EAqBgB,eArBhB,EAsBzB,mBAtByB,EAsBJ,WAtBI,EAsBS,cAtBT,EAsByB,aAtBzB,EAuBzB,cAvByB,EAuBT,UAvBS,EAuBG,WAvBH,EAuBgB,cAvBhB,EAuBgC,aAvBhC,EAwBzB,aAxByB,EAwBV,eAxBU,EAwBO,cAxBP,EAwBuB,cAxBvB,EAyBzB,aAzByB,EAyBV,eAzBU,EAyBO,eAzBP,EAyBwB,cAzBxB,EA0BzB,cA1ByB,EA0BT,aA1BS,EA0BM,aA1BN,EA0BqB,eA1BrB,EA2BzB,cA3ByB,EA2BT,cA3BS,EA2BO,aA3BP,EA2BsB,eA3BtB,EA4BzB,eA5ByB,EA4BR,cA5BQ,EA4BQ,cA5BR,EA4BwB,gBA5BxB,EA6BzB,gBA7ByB,EA6BP,eA7BO,EA6BU,aA7BV,EA6ByB,aA7BzB,EA8BzB,kBA9ByB,EA8BL,aA9BK,EA8BU,gBA9BV,EA8B4B,YA9B5B,EA+BzB,SA/ByB,EA+Bd,eA/Bc,EA+BG,aA/BH,EA+BkB,aA/BlB,EAgCzB,kBAhCyB,EAgCL,gBAhCK,EAgCa,aAhCb,EAgC4B,aAhC5B,EAiCzB,kBAjCyB,EAiCL,gBAjCK,EAiCa,UAjCb,EAiCyB,aAjCzB,EAkCzB,aAlCyB,EAkCV,aAlCU,EAkCK,kBAlCL,EAkCyB,aAlCzB,EAmCzB,gBAnCyB,EAmCP,SAnCO,EAmCI,aAnCJ,EAmCmB,aAnCnB,EAmCkC,aAnClC,EAoCzB,kBApCyB,EAoCL,gBApCK,EAoCa,aApCb,EAoC4B,YApC5B,EAqCzB,gBArCyB,CAApB;;AAwCP,AAAO,IAAIC,sBAAsB,CAC/B,SAD+B,EACpB,OADoB,EACX,gBADW,EACO,gBADP,EAE/B,mBAF+B,EAEV,oBAFU,EAEY,gBAFZ,EAG/B,gBAH+B,EAGb,OAHa,EAGJ,QAHI,EAGM,QAHN,EAGgB,UAHhB,EAI/B,cAJ+B,EAIf,aAJe,EAIA,aAJA,EAIe,eAJf,EAK/B,cAL+B,EAKf,cALe,EAKC,aALD,EAKgB,eALhB,EAM/B,eAN+B,EAMd,cANc,EAME,OANF,EAMW,WANX,EAMwB,eANxB,EAO/B,qBAP+B,EAOR,gBAPQ,EAOU,WAPV,EAOuB,WAPvB,EAQ/B,cAR+B,EAQf,WARe,EAQF,WARE,EAQW,WARX,EAQwB,WARxB,EAS/B,WAT+B,EASlB,WATkB,EASL,WATK,EASQ,WATR,EASqB,WATrB,EAU/B,WAV+B,EAUlB,IAVkB,EAUZ,IAVY,EAUN,IAVM,EAUA,KAVA,EAUO,KAVP,EAUc,mBAVd,EAW/B,oBAX+B,EAWT,gBAXS,EAWS,eAXT,EAW0B,WAX1B,EAY/B,QAZ+B,EAYrB,cAZqB,EAYL,YAZK,EAYS,gBAZT,EAY2B,YAZ3B,EAa/B,SAb+B,EAapB,eAboB,EAaH,WAbG,EAaU,cAbV,EAa0B,aAb1B,EAc/B,cAd+B,EAcf,UAde,EAcH,WAdG,EAcU,cAdV,EAc0B,aAd1B,EAe/B,aAf+B,EAehB,eAfgB,EAeC,cAfD,EAeiB,cAfjB,EAgB/B,aAhB+B,EAgBhB,eAhBgB,EAgBC,eAhBD,EAgBkB,cAhBlB,EAiB/B,cAjB+B,EAiBf,aAjBe,EAiBA,aAjBA,EAiBe,eAjBf,EAkB/B,cAlB+B,EAkBf,cAlBe,EAkBC,aAlBD,EAkBgB,eAlBhB,EAmB/B,eAnB+B,EAmBd,cAnBc,EAmBE,cAnBF,EAmBkB,gBAnBlB,EAoB/B,gBApB+B,EAoBb,eApBa,CAA1B;;ACnEP;;;IAEMC;wBACQC,aAAZ,EAA2BjI,IAA3B,EAAiC;;;SAC1BiI,aAAL,GAAqBA,aAArB;SACKjI,IAAL,GAAYA,IAAZ;;;yBAGF8D,yBAAO1B,QAAQpB,QAAQuF,UAAU;QAC3B,KAAK0B,aAAL,CAAmB1B,SAAS,CAAT,CAAnB,CAAJ,EAAqC;aAC5B,KAAK0B,aAAL,CAAmB1B,SAAS,CAAT,CAAnB,CAAP;;;WAGK,KAAKvG,IAAL,CAAU8D,MAAV,CAAiB1B,MAAjB,EAAyBpB,MAAzB,EAAiCuF,QAAjC,CAAP;;;yBAGFhD,qBAAK/E,OAAOmI,KAAK;WACR,KAAK3G,IAAL,CAAUuD,IAAV,CAAe/E,KAAf,EAAsBmI,GAAtB,CAAP;;;yBAGFhC,yBAAOvC,QAAQ5D,OAAOmI,KAAK;QACrBuB,QAAQ,KAAKD,aAAL,CAAmBhF,OAAnB,CAA2BzE,KAA3B,CAAZ;QACI0J,UAAU,CAAC,CAAf,EAAkB;aACTA,KAAP;;;WAGK,KAAKlI,IAAL,CAAU2E,MAAV,CAAiBvC,MAAjB,EAAyB5D,KAAzB,EAAgCmI,GAAhC,CAAP;;;;;;IAIEwB;;;gCACU;;;4CACZ,qBAAM,OAAN,CADY;;;+BAIdrE,yBAAO1B,QAAQ;WACNrE,EAAE0B,KAAF,CAAQqE,MAAR,CAAe1B,MAAf,IAAyB,IAAhC;;;;EAN6BrE,EAAE8H;;AAUnC,IAAIuC,SAAS,IAAIrK,EAAEmB,MAAN,CAAa;SACjBnB,EAAEoB,MADe;SAEjBpB,EAAE0B;CAFE,CAAb;;AAKA,IAAI4I,SAAS,IAAItK,EAAEmB,MAAN,CAAa;SACjBnB,EAAEoB,MADe;SAEjBpB,EAAEoB;CAFE,CAAb;;AAKA,IAAImJ,oBAAoB,IAAIvK,EAAEmC,eAAN,CAAsB,IAAIiI,kBAAJ,EAAtB,EAAgD;KACnE;YACOpK,EAAE0B,KADT;WAEM,IAAI1B,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB,QAArB;GAH6D;;KAMnE;aACQ1B,EAAE0B,KADV;YAEO,IAAI1B,EAAE6B,KAAN,CAAYwI,MAAZ,EAAoB,SAApB;;;;CARY,CAAxB;;AAcA,IAAIG,cAAc,IAAIP,YAAJ,CAAiB,CAAEL,gBAAF,EAAoBC,cAApB,CAAjB,EAAuD,IAAIL,UAAJ,CAAee,iBAAf,EAAkC,EAAE1H,MAAM,IAAR,EAAlC,CAAvD,CAAlB;;;;;IAIM4H;;;;;;;;;uBACJ1E,yBAAO1B,QAAQpB,QAAQ;QACjBnD,SAAS4K,oCAAc,KAAK5K,MAAnB,EAA2BuE,MAA3B,EAAmCpB,MAAnC,CAAb;QACIqC,QAAQ,CAAZ;QACIqF,MAAM,EAAV;WACOrF,QAAQxF,MAAf,EAAuB;UACjB8K,QAAQ,KAAK3I,IAAL,CAAU8D,MAAV,CAAiB1B,MAAjB,EAAyBpB,MAAzB,CAAZ;YACMyD,MAAN,GAAepB,KAAf;eACSsF,MAAMC,KAAN,GAAc,CAAvB;UACI7L,IAAJ,CAAS4L,KAAT;;;WAGKD,GAAP;;;;EAZqB3K,EAAE6B;;AAgB3B,IAAIiJ,mBAAmB,IAAI9K,EAAEmC,eAAN,CAAsBnC,EAAE0B,KAAxB,EAA+B;KACjD;YACO,IAAI1B,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB;aAAKmB,EAAEU,MAAF,CAAS8H,WAAT,CAAqBjL,MAArB,GAA8B,CAAnC;KAAtB;GAF0C;;KAKjD;YACO,IAAI2K,UAAJ,CAAeJ,MAAf,EAAuB;aAAK9H,EAAEU,MAAF,CAAS8H,WAAT,CAAqBjL,MAArB,GAA8B,CAAnC;KAAvB;GAN0C;;KASjD;YACO,IAAI2K,UAAJ,CAAeH,MAAf,EAAuB;aAAK/H,EAAEU,MAAF,CAAS8H,WAAT,CAAqBjL,MAArB,GAA8B,CAAnC;KAAvB;;CAVW,CAAvB;;AAcA,IAAIkL,aAAa,IAAIf,YAAJ,CAAiB,CAAEH,eAAF,EAAmBC,aAAnB,EAAkCC,mBAAlC,CAAjB,EAA0E,IAAIR,UAAJ,CAAesB,gBAAf,EAAiC,EAACjI,MAAM,IAAP,EAAjC,CAA1E,CAAjB;;AAEA,IAAIoI,UAAU,IAAIjL,EAAEmB,MAAN,CAAa;SAClBnB,EAAEoB,MADgB;MAErBpB,EAAE0B;CAFM,CAAd;;AAKA,IAAIwJ,WAAW,IAAIlL,EAAEmC,eAAN,CAAsBnC,EAAE0B,KAAxB,EAA+B;KACzC;SACI,IAAI1B,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB;aAAKa,EAAEU,MAAF,CAAS8H,WAAT,CAAqBjL,MAA1B;KAArB;GAFqC;;KAKzC;aACQE,EAAEoB,MADV;YAEO,IAAIpB,EAAE6B,KAAN,CAAYoJ,OAAZ,EAAqB,SAArB,CAFP;cAGSjL,EAAEoB;;CARD,CAAf;;AAYA,IAAImI,MAAM,IAAIC,UAAJ,CAAe2B,cAAf,CAAV;;IACMC;;;;;yBACJrF,yBAAO1B,QAAQpB,QAAQuF,UAAU;WACxB1I,MAAP,GAAgB0I,SAAS,CAAT,CAAhB;WACOe,IAAIxD,MAAJ,CAAW1B,MAAX,EAAmBpB,MAAnB,EAA2B,CAACuF,SAAS,CAAT,CAAD,CAA3B,CAAP;;;yBAGFhD,qBAAKsD,MAAMF,KAAK;WACP,CAACuC,eAAe3F,IAAf,CAAoBsD,IAApB,EAA0BF,GAA1B,EAA+B,KAA/B,CAAD,EAAwCW,IAAI/D,IAAJ,CAASsD,IAAT,EAAeF,GAAf,EAAoB,CAApB,CAAxC,CAAP;;;yBAGFhC,yBAAOvC,QAAQyE,MAAMF,KAAK;WACjB,CAACuC,eAAe3F,IAAf,CAAoBsD,IAApB,EAA0BF,GAA1B,EAA+B,KAA/B,CAAD,EAAwCW,IAAI3C,MAAJ,CAAWvC,MAAX,EAAmByE,IAAnB,EAAyBF,GAAzB,EAA8B,CAA9B,CAAxC,CAAP;;;;;;AAIJ,IAAIyC,WAAW,IAAIlD,OAAJ,CAAY;;AAEzB,CAAC,EAAD,EAAY,SAAZ,EAAoC,IAAIiD,YAAJ,EAApC,EAA4E,IAA5E,CAFyB,EAGzB,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,UAAZ,EAAoC,KAApC,EAA4E,IAA5E,CAHyB,CAAZ,CAAf;;AAMA,IAAIE,aAAa,IAAInD,OAAJ,CAAY;;AAE3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,KAAZ,EAAoC,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,CAApC,EAA4E,IAA5E,CAF2B,EAI3B,CAAC,CAAD,EAAY,SAAZ,EAAoC,KAApC,EAA4E,IAA5E,CAJ2B,EAK3B,CAAC,CAAD,EAAY,QAAZ,EAAoC,KAApC,EAA4E,IAA5E,CAL2B,EAM3B,CAAC,CAAC,EAAD,EAAK,CAAL,CAAD,EAAY,WAAZ,EAAoC,KAApC,EAA4E,IAA5E,CAN2B,EAO3B,CAAC,CAAD,EAAY,UAAZ,EAAoC,KAApC,EAA4E,IAA5E,CAP2B,EAQ3B,CAAC,CAAD,EAAY,YAAZ,EAAoC,KAApC,EAA4E,IAA5E,CAR2B,EAS3B,CAAC,CAAD,EAAY,QAAZ,EAAoC,KAApC,EAA4E,IAA5E,CAT2B,EAU3B,CAAC,CAAC,EAAD,EAAK,CAAL,CAAD,EAAY,cAAZ,EAAoC,SAApC,EAA4E,KAA5E,CAV2B,EAW3B,CAAC,CAAC,EAAD,EAAK,CAAL,CAAD,EAAY,aAAZ,EAAoC,QAApC,EAA4E,CAA5E,CAX2B,EAY3B,CAAC,CAAC,EAAD,EAAK,CAAL,CAAD,EAAY,mBAAZ,EAAoC,QAApC,EAA4E,CAAC,GAA7E,CAZ2B,EAa3B,CAAC,CAAC,EAAD,EAAK,CAAL,CAAD,EAAY,oBAAZ,EAAoC,QAApC,EAA4E,EAA5E,CAb2B,EAc3B,CAAC,CAAC,EAAD,EAAK,CAAL,CAAD,EAAY,WAAZ,EAAoC,QAApC,EAA4E,CAA5E,CAd2B,EAe3B,CAAC,CAAC,EAAD,EAAK,CAAL,CAAD,EAAY,gBAAZ,EAAoC,QAApC,EAA4E,CAA5E,CAf2B,EAgB3B,CAAC,CAAC,EAAD,EAAK,CAAL,CAAD,EAAY,YAAZ,EAAoC,OAApC,EAA4E,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAc,KAAd,EAAqB,CAArB,EAAwB,CAAxB,CAA5E,CAhB2B,EAiB3B,CAAC,EAAD,EAAY,UAAZ,EAAoC,QAApC,EAA4E,IAA5E,CAjB2B,EAkB3B,CAAC,CAAD,EAAY,UAAZ,EAAoC,OAApC,EAA4E,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA5E,CAlB2B,EAmB3B,CAAC,CAAC,EAAD,EAAK,CAAL,CAAD,EAAY,aAAZ,EAAoC,QAApC,EAA4E,CAA5E,CAnB2B,EAoB3B,CAAC,EAAD,EAAY,MAAZ,EAAoC,OAApC,EAA4E,IAA5E,CApB2B,EAqB3B,CAAC,EAAD,EAAY,SAAZ,EAAoC6C,UAApC,EAA4ElB,eAA5E,CArB2B,EAsB3B,CAAC,EAAD,EAAY,UAAZ,EAAoCU,WAApC,EAA4EZ,gBAA5E,CAtB2B,EAuB3B,CAAC,EAAD,EAAY,aAAZ,EAAoC,IAAIJ,UAAJ,CAAe,IAAI1D,QAAJ,EAAf,CAApC,EAA4E,IAA5E,CAvB2B,EAwB3B,CAAC,EAAD,EAAY,SAAZ,EAAoC,IAAIsF,YAAJ,EAApC,EAA4E,IAA5E,CAxB2B,EAyB3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,eAAZ,EAAoC,QAApC,EAA4E,IAA5E,CAzB2B,EA0B3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,YAAZ,EAAoC,KAApC,EAA4E,IAA5E,CA1B2B,EA2B3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,cAAZ,EAAoC,KAApC,EAA4E,IAA5E,CA3B2B,EA4B3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,eAAZ,EAAoC,OAApC,EAA4E,IAA5E,CA5B2B;;;AA+B3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,gBAAZ,EAAoC,QAApC,EAA4E,CAA5E,CA/B2B,EAgC3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,iBAAZ,EAAoC,QAApC,EAA4E,CAA5E,CAhC2B,EAiC3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,aAAZ,EAAoC,QAApC,EAA4E,CAA5E,CAjC2B,EAkC3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,UAAZ,EAAoC,QAApC,EAA4E,IAA5E,CAlC2B,EAmC3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,SAAZ,EAAoC,QAApC,EAA4E,IAA5E,CAnC2B,EAoC3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,UAAZ,EAAoC,IAAI5B,UAAJ,CAAe0B,QAAf,CAApC,EAA4E,IAA5E,CApC2B,EAqC3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,SAAZ,EAAoC,IAAI1B,UAAJ,CAAe,IAAI1D,QAAJ,CAAauF,QAAb,CAAf,CAApC,EAA4E,IAA5E,CArC2B,EAsC3B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAY,UAAZ,EAAoC,KAApC,EAA4E,IAA5E,CAtC2B,CAAZ,CAAjB;;AAyCA,IAAIE,YAAY,IAAIvL,EAAEmB,MAAN,CAAa;gBACXnB,EAAE0B,KADS;gBAEX1B,EAAE0B,KAFS;WAGX1B,EAAE0B,KAHS;WAIX1B,EAAE0B;CAJJ,CAAhB;;AAOA,IAAI8J,SAAS,IAAIxL,EAAEmB,MAAN,CAAa;UACJoK,SADI;aAEJ,IAAIzF,QAAJ,CAAa,IAAI9F,EAAE8D,MAAN,CAAa,QAAb,CAAb,CAFI;gBAGJ,IAAIgC,QAAJ,CAAawF,UAAb,CAHI;eAIJ,IAAIxF,QAAJ,CAAa,IAAI9F,EAAE8D,MAAN,CAAa,QAAb,CAAb,CAJI;mBAKJ,IAAIgC,QAAJ;CALT,CAAb,CAQA;;ICvMM2F;mBACQpH,MAAZ,EAAoB;;;SACbA,MAAL,GAAcA,MAAd;SACK0B,MAAL;;;UAGKA,yBAAO1B,QAAQ;WACb,IAAIoH,OAAJ,CAAYpH,MAAZ,CAAP;;;oBAGF0B,2BAAS;QACHQ,QAAQ,KAAKlC,MAAL,CAAY+B,GAAxB;QACIsF,MAAMF,OAAOzF,MAAP,CAAc,KAAK1B,MAAnB,CAAV;SACK,IAAI/D,GAAT,IAAgBoL,GAAhB,EAAqB;UACfzG,MAAMyG,IAAIpL,GAAJ,CAAV;WACKA,GAAL,IAAY2E,GAAZ;;;QAGE,KAAK0G,YAAL,CAAkB7L,MAAlB,KAA6B,CAAjC,EAAoC;YAC5B,IAAIK,KAAJ,CAAU,sCAAV,CAAN;;;SAGGyL,SAAL,GAAkB,KAAKC,OAAL,CAAaC,GAAb,IAAoB,IAAtC;;WAEO,IAAP;;;oBAGFjH,yBAAOkH,KAAK;QACNA,MAAMC,gBAAgBlM,MAA1B,EAAkC;aACzBkM,gBAAgBD,GAAhB,CAAP;;;WAGK,KAAKE,WAAL,CAAiBF,MAAMC,gBAAgBlM,MAAvC,CAAP;;;oBAmBFoM,uCAAcC,OAAO;SACd9H,MAAL,CAAY+B,GAAZ,GAAkB,KAAKyF,OAAL,CAAad,WAAb,CAAyBoB,KAAzB,EAAgCzF,MAAlD;WACO,KAAKrC,MAAL,CAAY+H,UAAZ,CAAuB,KAAKP,OAAL,CAAad,WAAb,CAAyBoB,KAAzB,EAAgCrM,MAAvD,CAAP;;;oBAGFuM,qCAAaC,KAAK;QACVC,OADU,GACE,KAAKV,OADP,CACVU,OADU;;QAEZ1K,MAAMkD,OAAN,CAAcwH,OAAd,CAAJ,EAA4B;aACnBA,QAAQD,GAAR,CAAP;;;QAGEA,QAAQ,CAAZ,EAAe;aACN,SAAP;;;WAGK,CAAP;;YAEQC,QAAQvH,OAAhB;WACO,CAAL;eACS,KAAKH,MAAL,CAAY0H,QAAQC,MAAR,CAAeF,GAAf,CAAZ,CAAP;;WAEG,CAAL;WACK,CAAL;aACO,IAAIzM,IAAI,CAAb,EAAgBA,IAAI0M,QAAQE,MAAR,CAAe3M,MAAnC,EAA2CD,GAA3C,EAAgD;cAC1C+K,QAAQ2B,QAAQE,MAAR,CAAe5M,CAAf,CAAZ;cACI+K,MAAMlE,MAAN,IAAgB4F,GAAhB,IAAuBA,OAAO1B,MAAMlE,MAAN,GAAekE,MAAMC,KAAvD,EAA8D;mBACrD,KAAKhG,MAAL,CAAY+F,MAAM8B,KAAN,IAAeJ,MAAM1B,MAAMlE,MAA3B,CAAZ,CAAP;;;;;;WAMD,IAAP;;;oBAGFiG,iCAAWL,KAAK;QACV,CAAC,KAAKT,OAAL,CAAaX,QAAlB,EAA4B;aAAS,IAAP;;;YAEtB,KAAKW,OAAL,CAAaX,QAAb,CAAsBlG,OAA9B;WACO,CAAL;eACS,KAAK6G,OAAL,CAAaX,QAAb,CAAsB0B,GAAtB,CAA0BN,GAA1B,CAAP;;WAEG,CAAL;YACQG,MADR,GACmB,KAAKZ,OAAL,CAAaX,QADhC,CACQuB,MADR;;YAEMI,MAAM,CAAV;YACIC,OAAOL,OAAO3M,MAAP,GAAgB,CAA3B;;eAEO+M,OAAOC,IAAd,EAAoB;cACdC,MAAOF,MAAMC,IAAP,IAAgB,CAA1B;;cAEIR,MAAMG,OAAOM,GAAP,EAAYL,KAAtB,EAA6B;mBACpBK,MAAM,CAAb;WADF,MAEO,IAAIA,MAAMD,IAAN,IAAcR,MAAMG,OAAOM,MAAM,CAAb,EAAgBL,KAAxC,EAA+C;kBAC9CK,MAAM,CAAZ;WADK,MAEA;mBACEN,OAAOM,GAAP,EAAYC,EAAnB;;;;cAIE,IAAI7M,KAAJ,gCAAuC,KAAK0L,OAAL,CAAaX,QAAb,CAAsBlG,OAA7D,CAAN;;;;oBAINiI,mDAAoBX,KAAK;QACnB,KAAKT,OAAL,CAAaX,QAAjB,EAA2B;UACrB8B,KAAK,KAAKL,UAAL,CAAgBL,GAAhB,CAAT;UACI,KAAKT,OAAL,CAAaqB,OAAb,CAAqBF,EAArB,CAAJ,EAA8B;eACrB,KAAKnB,OAAL,CAAaqB,OAAb,CAAqBF,EAArB,EAAyBG,OAAhC;;;aAGK,IAAP;;;WAGK,KAAKtB,OAAL,CAAasB,OAApB;;;;;wBAzFY;aACL,KAAKxB,YAAL,CAAkB,CAAlB,CAAP;;;;wBAGmB;aACZ,KAAKyB,SAAL,CAAe,CAAf,CAAP;;;;wBAGa;aACN,KAAKvI,MAAL,CAAY,KAAKgH,OAAL,CAAawB,QAAzB,CAAP;;;;wBAGe;aACR,KAAKxI,MAAL,CAAY,KAAKgH,OAAL,CAAayB,UAAzB,CAAP;;;;;IAgFJ;;ACpIA,IAAIC,iBAAiB,IAAIvN,EAAEmB,MAAN,CAAa;cAClBnB,EAAEoB,MADgB;eAElBpB,EAAEqB;CAFG,CAArB;;AAKA,WAAe,IAAIrB,EAAEmB,MAAN,CAAa;gBACFnB,EAAEoB,MADA;gBAEFpB,EAAEoB,MAFA;sBAGFpB,EAAEqB,KAHA;yBAIFrB,EAAEoB,MAJA;WAKF,IAAIpB,EAAE6B,KAAN,CAAY0L,cAAZ,EAA4B,uBAA5B;CALX,CAAf;;ACLO,IAAIC,aAAa,IAAIxN,EAAEmB,MAAN,CAAa;UAC3BnB,EAAE0B,KADyB;SAE5B1B,EAAE0B,KAF0B;gBAGrB1B,EAAEyN,IAHmB;gBAIrBzN,EAAEyN,IAJmB;eAKtBzN,EAAE0B,KALoB;gBAMrB1B,EAAEyN,IANmB;gBAOrBzN,EAAEyN,IAPmB;eAQtBzN,EAAE0B;CARO,CAAjB;;AAWP,AAAO,IAAIgM,eAAe,IAAI1N,EAAEmB,MAAN,CAAa;UAC7BnB,EAAE0B,KAD2B;SAE9B1B,EAAE0B,KAF4B;YAG3B1B,EAAEyN,IAHyB;YAI3BzN,EAAEyN,IAJyB;WAK5BzN,EAAE0B;CALa,CAAnB;;AAQP,IAAIiM,gBAAgB,IAAI3N,EAAEmB,MAAN,CAAa;SACxBnB,EAAEoB,MADsB;WAEtBpB,EAAEyN,IAFoB;WAGtBzN,EAAEyN;CAHO,CAApB;;IAMMG;;;;IAEAC;;;;AAEN,AAAO,IAAI1B,QAAQ,IAAInM,EAAEmC,eAAN,CAAsB,SAAtB,EAAiC;KAC/C;aACQuL,YADR;UAEKE;GAH0C;;KAM/C;aACQF,YADR;UAEKG;GAR0C;;;;;KAc/C;UACKA;GAf0C;;KAkB/C;aACQL,UADR;UAEKI;GApB0C;;KAuB/C;aACQJ,UADR;UAEKK;GAzB0C;;KA4B/C;aACQH,YADR;SAEI,IAAI1N,EAAE0C,QAAN,CAAe1C,EAAE0B,KAAjB,CAFJ;mBAGc1B,EAAEoB,MAHhB;gBAIW,IAAIpB,EAAE6B,KAAN,CAAY8L,aAAZ,EAA2B,eAA3B;GAhCoC;;KAmC/C;aACQH,UADR;SAEI,IAAIxN,EAAE0C,QAAN,CAAe1C,EAAE0B,KAAjB,CAFJ;mBAGc1B,EAAEoB,MAHhB;gBAIW,IAAIpB,EAAE6B,KAAN,CAAY8L,aAAZ,EAA2B,eAA3B;GAvCoC;;MA0C9C;aACOD,YADP;aAEO1N,EAAEuB,MAFT;UAGI,IAAIvB,EAAEmF,MAAN,CAAa,SAAb;GA7C0C;;MAgD9C;aACOqI,UADP;aAEOxN,EAAEuB,MAFT;UAGI,IAAIvB,EAAEmF,MAAN,CAAa,SAAb;GAnD0C;;MAsD9C;aACOnF,EAAEuB,MADT;UAEI,IAAIvB,EAAEmF,MAAN,CAAa,SAAb;;CAxDS,CAAZ;;AC5BP,IAAI2I,kBAAkB,IAAI9N,EAAEmB,MAAN,CAAa;YACvBnB,EAAEyN,IADqB;aAEtBzN,EAAEyN,IAFoB;YAGvBzN,EAAE0B,KAHqB;uBAIZ1B,EAAEyN,IAJU;yBAKVzN,EAAEyN,IALQ;eAMpBzN,EAAEyN,IANkB;eAOpBzN,EAAEyN,IAPkB;gBAQnBzN,EAAEyN,IARiB;eASpBzN,EAAEyN,IATkB;cAUrBzN,EAAEyN,IAVmB;OAW5B,IAAIzN,EAAE0C,QAAN,CAAe1C,EAAEyN,IAAjB,EAAuB,CAAvB;CAXe,CAAtB;;AAcA,IAAIM,iBAAiB,IAAI/N,EAAEmB,MAAN,CAAa;aACrBnB,EAAEoB,MADmB;UAExBpB,EAAEoB;CAFS,CAArB;;AAKA,IAAI4M,gBAAgB,IAAIhO,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;UAC1C;iBACOpB,EAAEoB,MADT;qBAEWpB,EAAEuB;GAH6B;;KAM/C;iBACY,IAAIvB,EAAE6B,KAAN,CAAY7B,EAAEuB,MAAd,EAAsB;aAAKgB,EAAEU,MAAF,CAASgL,cAAT,GAA0B1L,EAAEU,MAAF,CAASiL,eAAnC,GAAqD,CAA1D;KAAtB;GAPmC;;KAU/C;eACUlO,EAAEuB,MADZ;gBAEWiM;GAZoC;;KAe/C;iBACY,IAAIxN,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB;aAAKmB,EAAEU,MAAF,CAASgL,cAAT,GAA0B1L,EAAEU,MAAF,CAASiL,eAAnC,GAAqD,CAA1D;KAAtB;GAhBmC;;KAmB/C;eACUlO,EAAEuB,MADZ;gBAEW,IAAIvB,EAAE6B,KAAN,CAAYkM,cAAZ,EAA4B;aAAKxL,EAAEc,SAAF,GAAc,CAAnB;KAA5B;GArBoC;;KAwB/C;eACUrD,EAAEuB,MADZ;gBAEWiM,UAFX;eAGUxN,EAAEuB,MAHZ;oBAIe,IAAIvB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,WAAtB;;CA5BA,CAApB;;AAgCA,IAAI+M,qBAAqB,IAAInO,EAAEmB,MAAN,CAAa;mBACnBnB,EAAEoB,MADiB;kBAEpBpB,EAAEoB,MAFkB;YAG1B,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwByM,aAAxB;CAHa,CAAzB;;AAMA,IAAII,kBAAkB,IAAIpO,EAAEmB,MAAN,CAAa;sBACb,IAAInB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAIvB,EAAE6B,KAAN,CAAYsM,kBAAZ,EAAgC,CAAhC,CAAxB,EAA4D,EAAElM,MAAM,QAAR,EAA5D,CADa;mBAEhBjC,EAAEuB,MAFc;0BAGTvB,EAAEuB,MAHO;YAIvBvB,EAAEuB,MAJqB;QAK3BuM,eAL2B;QAM3BA,eAN2B;mBAOhB9N,EAAEoB,MAPc;iBAQlBpB,EAAEoB,MARgB;SAS1BpB,EAAE0B,KATwB;SAU1B1B,EAAE0B,KAVwB;YAWvB1B,EAAE0B,KAXqB;SAY1B,IAAI1B,EAAE+C,QAAN,CAAe/C,EAAE0B,KAAjB,EAAwB,CAAC,YAAD,EAAe,UAAf,CAAxB;CAZa,CAAtB;;AAeA,WAAe,IAAI1B,EAAEmB,MAAN,CAAa;WAChBnB,EAAEuB,MADc;YAEhBvB,EAAEuB,MAFc;SAGhB,IAAIvB,EAAE6B,KAAN,CAAYuM,eAAZ,EAA6B,UAA7B;CAHG,CAAf;;ACzEA,IAAIC,aAAa,IAAIrO,EAAEmB,MAAN,CAAa;QACtBnB,EAAEoB,MADoB;cAEhBpB,EAAEoB,MAFc;gBAGd,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,MAAxB,CAAZ,EAA6C;WAAKgB,EAAEU,MAAF,CAASA,MAAT,CAAgBG,IAAhB,CAAqBC,SAArB,GAAiC,CAAtC;GAA7C;CAHC,CAAjB;;;;;AASA,WAAe,IAAIrD,EAAEmB,MAAN,CAAa;WACjBnB,EAAEoB,MADe;SAEnB,IAAIpB,EAAE+C,QAAN,CAAe/C,EAAEoB,MAAjB,EAAyB,CAAC,gBAAD,CAAzB,CAFmB;gBAGZpB,EAAEuB,MAHU;eAIb,IAAIvB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB8M,UAAxB,CAAZ,EAAiD,cAAjD;CAJA,CAAf;;ACTA,IAAIC,cAAc,IAAItO,EAAEmB,MAAN,CAAa;OACxBnB,EAAEoB,MADsB;gBAEfpB,EAAEoB,MAFa;CAAb,CAAlB;;;;;AAQA,IAAImN,kBAAkB,IAAIvO,EAAEmB,MAAN,CAAa;OAC5BnB,EAAEoB,MAD0B;;mBAGhBpB,EAAEoB,MAHc;;aAKtBpB,EAAEoB;CALO,CAAtB;;AAQA,WAAe,IAAIpB,EAAEmB,MAAN,CAAa;WACjBnB,EAAEoB,MADe;uBAELpB,EAAEoB,MAFG;mBAGT,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAIvB,EAAE6B,KAAN,CAAY0M,eAAZ,EAA6B,qBAA7B,CAAxB,CAHS;gBAIZ,IAAIvO,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAIvB,EAAE6B,KAAN,CAAYyM,WAAZ,EAAyB,iBAAzB,CAAxB,EAAqE,EAAEzL,MAAM,IAAR,EAArE,CAJY;mBAKT7C,EAAEoB;CALN,CAAf;;AChBA,IAAIoN,cAAc,IAAIxO,EAAEmB,MAAN,CAAa;QACvBnB,EAAE0B,KADqB;SAEtB1B,EAAE0B,KAFoB;OAGxB1B,EAAE0B,KAHsB;SAItB1B,EAAE0B;CAJO,CAAlB;;AAOA,WAAe,IAAI1B,EAAEmB,MAAN,CAAa;WACjBnB,EAAEoB,MADe;qBAEPpB,EAAEoB,MAFK;eAGbpB,EAAEoB,MAHW;mBAITpB,EAAEoB,MAJO;gBAKZ,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAIvB,EAAE6B,KAAN,CAAY2M,WAAZ,EAAyB,iBAAzB,CAAxB,CALY;sBAMN,IAAIxO,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,aAAtB;CANP,CAAf;;ACPA;;;;AAIA,IAAIqN,eAAe,IAAIzO,EAAEmB,MAAN,CAAa;YACZ,IAAInB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CADY;mBAEZpB,EAAEoB,MAFU;gBAGZpB,EAAEoB,MAHU;kBAIZ,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,cAAtB;CAJD,CAAnB;;AAOA,IAAIsN,gBAAgB,IAAI1O,EAAEmB,MAAN,CAAa;OACrB,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADqB;WAErB,IAAI9D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqN,YAAxB,EAAsC,EAAExM,MAAM,QAAR,EAAtC;CAFQ,CAApB;;AAKA,IAAI0M,SAAS,IAAI3O,EAAEmB,MAAN,CAAa;kBACR,IAAInB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqN,YAAxB,CADQ;SAERzO,EAAEoB,MAFM;kBAGR,IAAIpB,EAAE6B,KAAN,CAAY6M,aAAZ,EAA2B,OAA3B;CAHL,CAAb;;AAMA,IAAIE,eAAe,IAAI5O,EAAEmB,MAAN,CAAa;OACtB,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADsB;UAEtB,IAAI9D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBuN,MAAxB,EAAgC,EAAE1M,MAAM,QAAR,EAAhC;CAFS,CAAnB;;AAKA,AAAO,IAAI4M,aAAa,IAAI7O,EAAE6B,KAAN,CAAY+M,YAAZ,EAA0B5O,EAAEoB,MAA5B,CAAjB;;;;;;AAMP,IAAI0N,UAAU,IAAI9O,EAAEmB,MAAN,CAAa;iBACLnB,EAAEoB,MADG;eAELpB,EAAEoB,MAFG;qBAGL,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,aAAtB;CAHR,CAAd;;AAMA,IAAI2N,gBAAgB,IAAI/O,EAAEmB,MAAN,CAAa;OACrB,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADqB;WAErB,IAAI9D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB0N,OAAxB,EAAiC,EAAE7M,MAAM,QAAR,EAAjC;CAFQ,CAApB;;AAKA,AAAO,IAAI+M,cAAc,IAAIhP,EAAE6B,KAAN,CAAYkN,aAAZ,EAA2B/O,EAAEoB,MAA7B,CAAlB;;AAEP,IAAI6N,cAAc,IAAIjP,EAAE+C,QAAN,CAAe/C,EAAEoB,MAAjB,EAAyB,CACzC,aADyC,EAC1B,kBAD0B,EACN,iBADM,EAEzC,aAFyC,EAE1B,qBAF0B,EAEH,IAFG,EAEG,oBAFH,CAAzB,CAAlB;;AAKA,AAAO,SAAS8N,UAAT,CAAoBC,QAApB,EAA8B;MAC/BC,SAAS,IAAIpP,EAAEmB,MAAN,CAAa;gBACJnB,EAAEoB,MADE;WAEJ6N,WAFI;mBAGJjP,EAAEoB,MAHE;eAIJ,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB+N,QAAxB,CAAZ,EAA+C,eAA/C,CAJI;sBAKJnP,EAAEoB,MALE;GAAb,CAAb;;SAQO,IAAIpB,EAAEoC,SAAN,CAAgB,IAAIpC,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBgO,MAAxB,CAAhB,EAAiDpP,EAAEoB,MAAnD,CAAP;;;;;;;AAOF,IAAIiO,cAAc,IAAIrP,EAAEmB,MAAN,CAAa;SACTnB,EAAEoB,MADO;OAETpB,EAAEoB,MAFO;sBAGTpB,EAAEoB;CAHN,CAAlB;;AAMA,AAAO,IAAIkO,WAAW,IAAItP,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;KACjD;gBACapB,EAAEoB,MADf;YAEa,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,YAAtB;GAHoC;KAKjD;gBACapB,EAAEoB,MADf;kBAEa,IAAIpB,EAAE6B,KAAN,CAAYwN,WAAZ,EAAyB,YAAzB;;CAPI,CAAf;;;;;;AAeP,IAAIE,mBAAmB,IAAIvP,EAAEmB,MAAN,CAAa;SAC1BnB,EAAEoB,MADwB;OAE1BpB,EAAEoB,MAFwB;SAG1BpB,EAAEoB;CAHW,CAAvB;;AAMA,AAAO,IAAIoO,WAAW,IAAIxP,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;KACjD;gBACiBpB,EAAEoB,MADnB;gBAEiBpB,EAAEoB,MAFnB;qBAGiB,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,YAAtB;GAJgC;KAMjD;qBACiBpB,EAAEoB,MADnB;sBAEiB,IAAIpB,EAAE6B,KAAN,CAAY0N,gBAAZ,EAA8B,iBAA9B;;CARA,CAAf;;;;;;AAgBP,AAAO,IAAIE,SAAS,IAAIzP,EAAEmB,MAAN,CAAa;aACjBnB,EAAEoB,MADe;WAEjBpB,EAAEoB,MAFe;eAGjBpB,EAAEoB;CAHE,CAAb;;;;;;AAUP,IAAIsO,eAAe,IAAI1P,EAAEmB,MAAN,CAAa;iBACVnB,EAAEoB,MADQ;mBAEVpB,EAAEoB;CAFL,CAAnB;;AAKA,IAAIuO,OAAO,IAAI3P,EAAEmB,MAAN,CAAa;cACNnB,EAAEoB,MADI;eAENpB,EAAEoB,MAFI;SAGN,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB;WAAKmB,EAAEqN,UAAF,GAAe,CAApB;GAAtB,CAHM;iBAIN,IAAI5P,EAAE6B,KAAN,CAAY6N,YAAZ,EAA0B,aAA1B;CAJP,CAAX;;AAOA,IAAIG,UAAU,IAAI7P,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBuO,IAAxB,CAAZ,EAA2C3P,EAAEoB,MAA7C,CAAd;;AAEA,IAAI0O,YAAY,IAAI9P,EAAEmB,MAAN,CAAa;cACXnB,EAAEoB,MADS;eAEXpB,EAAEoB,MAFS;WAGX,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB;WAAKmB,EAAEqN,UAAF,GAAe,CAApB;GAAtB,CAHW;iBAIX,IAAI5P,EAAE6B,KAAN,CAAY6N,YAAZ,EAA0B,aAA1B;CAJF,CAAhB;;AAOA,IAAIK,WAAW,IAAI/P,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB0O,SAAxB,CAAZ,EAAgD9P,EAAEoB,MAAlD,CAAf;;AAEA,AAAO,IAAI4O,UAAU,IAAIhQ,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;KAChD;cACc,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADd;kBAEctP,EAAEoB,MAFhB;cAGc,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwByO,OAAxB,CAAZ,EAA8C,cAA9C;GAJkC;KAMhD;cACc,IAAI7P,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADd;cAEc,IAAItP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoO,QAAxB,CAFd;iBAGcxP,EAAEoB,MAHhB;cAIc,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB2O,QAAxB,CAAZ,EAA+C,aAA/C;GAVkC;KAYhD;gBACc/P,EAAEoB,MADhB;iBAEcpB,EAAEoB,MAFhB;eAGc,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAAZ,EAA+C,YAA/C,CAHd;mBAIc,IAAItP,EAAE6B,KAAN,CAAY6N,YAAZ,EAA0B,aAA1B;;CAhBE,CAAd;;;;;;AAwBP,IAAIO,YAAY,IAAIjQ,EAAEmB,MAAN,CAAa;uBACLnB,EAAEoB,MADG;aAEL,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,qBAAtB,CAFK;mBAGLpB,EAAEoB,MAHG;SAIL,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB;WAAKmB,EAAE2N,eAAF,GAAoB,CAAzB;GAAtB,CAJK;uBAKLlQ,EAAEoB,MALG;aAML,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,qBAAtB,CANK;eAOLpB,EAAEoB,MAPG;iBAQL,IAAIpB,EAAE6B,KAAN,CAAY6N,YAAZ,EAA0B,aAA1B;CARR,CAAhB;;AAWA,IAAIS,eAAe,IAAInQ,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB6O,SAAxB,CAAZ,EAAgDjQ,EAAEoB,MAAlD,CAAnB;;AAEA,AAAO,IAAIgP,kBAAkB,IAAIpQ,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;KACxD;cACmB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADnB;gBAEmBtP,EAAEoB,MAFrB;mBAGmB,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB+O,YAAxB,CAAZ,EAAmD,YAAnD;GAJqC;;KAOxD;cACmB,IAAInQ,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADnB;uBAEmB,IAAItP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoO,QAAxB,CAFnB;mBAGmB,IAAIxP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoO,QAAxB,CAHnB;uBAImB,IAAIxP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoO,QAAxB,CAJnB;gBAKmBxP,EAAEoB,MALrB;mBAMmB,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB+O,YAAxB,CAAZ,EAAmD,YAAnD;GAbqC;;KAgBxD;yBACuBnQ,EAAEoB,MADzB;uBAEuB,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAAZ,EAA+C,qBAA/C,CAFvB;qBAGuBtP,EAAEoB,MAHzB;mBAIuB,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAAZ,EAA+C,iBAA/C,CAJvB;yBAKuBtP,EAAEoB,MALzB;uBAMuB,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAAZ,EAA+C,qBAA/C,CANvB;iBAOuBtP,EAAEoB,MAPzB;mBAQuB,IAAIpB,EAAE6B,KAAN,CAAY6N,YAAZ,EAA0B,aAA1B;;CAxBC,CAAtB;;ACnLP,IAAIW,YAAY,IAAIrQ,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;KAC3C;gBACapB,EAAEqB,KADf;GAD2C;;KAK3C;gBACerB,EAAEqB,KADjB;oBAEerB,EAAEoB,MAFjB;oBAGepB,EAAEoB,MAHjB;GAL2C;;KAW3C;gBACapB,EAAEqB,KADf;iBAEa,IAAIrB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqO,MAAxB,CAFb;;CAXW,CAAhB;;AAiBA,IAAIa,aAAa,IAAItQ,EAAEmB,MAAN,CAAa;gBACZnB,EAAEoB,MADU;kBAEZpB,EAAEoB,MAFU;cAGZ,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBiP,SAAxB,CAAZ,EAAgD,gBAAhD;CAHD,CAAjB;;AAMA,IAAIE,mBAAmB,IAAIvQ,EAAEmB,MAAN,CAAa;OACtB,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADsB;YAEtB,IAAI9D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBiP,SAAxB,EAAmC,EAACpO,MAAM,QAAP,EAAnC,CAFsB;YAGtB,IAAIjC,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBiP,SAAxB,EAAmC,EAACpO,MAAM,QAAP,EAAnC,CAHsB;CAAb,CAAvB;;AAMA,IAAIuO,SAAS,IAAIxQ,EAAEmB,MAAN,CAAa;YACJ,IAAInB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBiP,SAAxB,CADI;YAEJ,IAAIrQ,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBiP,SAAxB,CAFI;mBAGJrQ,EAAEoB,MAHE;qBAIJ,IAAIpB,EAAE6B,KAAN,CAAY0O,gBAAZ,EAA8B,iBAA9B,CAJI;CAAb,CAAb;;AAOA,IAAIE,oBAAoB,IAAIzQ,EAAEmB,MAAN,CAAa;OAC3B,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CAD2B;UAE3B,IAAI9D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoP,MAAxB,EAAgC,EAACvO,MAAM,QAAP,EAAhC;CAFc,CAAxB;;AAKA,IAAIyO,aAAa,IAAI1Q,EAAEmB,MAAN,CAAa;cACR,IAAInB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkP,UAAxB,CADQ;iBAER,IAAItQ,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoP,MAAxB,CAFQ;oBAGRxQ,EAAEoB,MAHM;sBAIR,IAAIpB,EAAE6B,KAAN,CAAY4O,iBAAZ,EAA+B,kBAA/B,CAJQ;CAAb,CAAjB;;AAOA,IAAIE,mBAAmB,IAAI3Q,EAAEmB,MAAN,CAAa;OACxB,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADwB;UAExB,IAAI9D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBsP,UAAxB,EAAoC,EAACzO,MAAM,QAAP,EAApC;CAFW,CAAvB;;AAKA,IAAI2O,iBAAiB,IAAI5Q,EAAE6B,KAAN,CAAY8O,gBAAZ,EAA8B3Q,EAAEoB,MAAhC,CAArB;;;AAGA,IAAIyP,cAAc,IAAI7Q,EAAE6B,KAAN,CAAY,IAAI7B,EAAE8D,MAAN,CAAa,CAAb,CAAZ,EAA6B9D,EAAEoB,MAA/B,CAAlB;;AAEA,IAAI0P,OAAO,IAAI9Q,EAAEmB,MAAN,CAAa;eACN,IAAInB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwByP,WAAxB,CADM;kBAEN,IAAI7Q,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBwP,cAAxB;CAFP,CAAX;;AAKA,WAAe,IAAI5Q,EAAEmB,MAAN,CAAa;WACZnB,EAAEuB,MADU;aAEZ,IAAIvB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB0P,IAAxB,CAFY;YAGZ,IAAI9Q,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB0P,IAAxB,CAHY;CAAb,CAAf;;AC/DA,IAAIC,cAAc,IAAI/Q,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsBpB,EAAEoB,MAAxB,CAAlB;AACA,IAAI4P,aAAa,IAAIhR,EAAEmB,MAAN,CAAa;YACZ,IAAInB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADY;cAEZtP,EAAEoB,MAFU;gBAGZ,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB2P,WAAxB,CAAZ,EAAkD,YAAlD;CAHD,CAAjB;;AAMA,IAAIE,aAAa,IAAIjR,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;KAC5C;gBACWpB,EAAEqB;GAF+B;;KAK5C;qBACgBrB,EAAEoB;GAN0B;;KAS5C;gBACepB,EAAEqB,KADjB;iBAEe,IAAIrB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqO,MAAxB;;CAXH,CAAjB;;AAeA,IAAIyB,WAAW,IAAIlR,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB6P,UAAxB,CAAZ,EAAiDjR,EAAEoB,MAAnD,CAAf;;AAEA,IAAI+P,eAAe,IAAInR,EAAEmB,MAAN,CAAa;YACd,IAAInB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADc;iBAEdtP,EAAEoB,MAFY;aAGd,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB8P,QAAxB,CAAZ,EAA+C,eAA/C;CAHC,CAAnB;;AAMA,IAAIE,mBAAmB,IAAIpR,EAAEmB,MAAN,CAAa;sBACdnB,EAAEoB,MADY;gBAEdpB,EAAEoB,MAFY;YAGd,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB+N,QAAxB,CAAZ,EAA+C,cAA/C;CAHC,CAAvB;;AAMA,WAAe,IAAItP,EAAEmC,eAAN,CAAsBnC,EAAEuB,MAAxB,EAAgC;cACjC;mBACU,IAAIvB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoO,QAAxB,CADV;gBAEU,IAAIxP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB4P,UAAxB,CAFV;kBAGU,IAAIhR,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB+P,YAAxB,CAHV;wBAIU,IAAInR,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoO,QAAxB;GALuB;cAOjC;mBACU,IAAIxP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoO,QAAxB,CADV;gBAEU,IAAIxP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB4P,UAAxB,CAFV;kBAGU,IAAIhR,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB+P,YAAxB,CAHV;wBAIU,IAAInR,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoO,QAAxB,CAJV;sBAKU,IAAIxP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBgQ,gBAAxB;;CAZT,CAAf;;ACpCA,IAAIC,cAAc,IAAIrR,EAAE+C,QAAN,CAAe/C,EAAEoB,MAAjB,EAAyB,CACzC,YADyC,EAC3B,YAD2B,EAEzC,UAFyC,EAE7B,UAF6B,EAGzC,YAHyC,EAG3B,YAH2B,EAIzC,YAJyC,EAI3B,YAJ2B,CAAzB,CAAlB;;AAOA,IAAIkQ,QAAQ;cACEtR,EAAEqB,KADJ;cAEErB,EAAEqB,KAFJ;YAGErB,EAAEqB,KAHJ;YAIErB,EAAEqB,KAJJ;cAKE,IAAIrB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqO,MAAxB,EAAgC,EAAExN,MAAM,QAAR,EAAkB8B,YAAY,KAA9B,EAAhC,CALF;cAME,IAAI/D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqO,MAAxB,EAAgC,EAAExN,MAAM,QAAR,EAAkB8B,YAAY,KAA9B,EAAhC,CANF;cAOE,IAAI/D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqO,MAAxB,EAAgC,EAAExN,MAAM,QAAR,EAAkB8B,YAAY,KAA9B,EAAhC,CAPF;cAQE,IAAI/D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqO,MAAxB,EAAgC,EAAExN,MAAM,QAAR,EAAkB8B,YAAY,KAA9B,EAAhC;CARd;;IAWMwN;yBAC6B;QAArBjR,GAAqB,uEAAf,aAAe;;;;SAC1BA,GAAL,GAAWA,GAAX;;;wBAGFkR,mCAAYvO,QAAQ;QACdwO,SAASxO,MAAb;WACO,CAACwO,OAAO,KAAKnR,GAAZ,CAAD,IAAqBmR,OAAOxO,MAAnC,EAA2C;eAChCwO,OAAOxO,MAAhB;;;QAGE,CAACwO,OAAO,KAAKnR,GAAZ,CAAL,EAAuB;;QAEnB+H,SAAS,EAAb;WACOqJ,GAAP,GAAa;aAAMD,OAAOE,YAAb;KAAb;;QAEI5S,SAAS0S,OAAO,KAAKnR,GAAZ,CAAb;SACK,IAAIA,GAAT,IAAgBvB,MAAhB,EAAwB;UAClBA,OAAOuB,GAAP,CAAJ,EAAiB;eACRA,GAAP,IAAcgR,MAAMhR,GAAN,CAAd;;;;WAIG,IAAIN,EAAEmB,MAAN,CAAakH,MAAb,CAAP;;;wBAGF7C,qBAAKP,KAAK2D,KAAK;WACN,KAAK4I,WAAL,CAAiB5I,GAAjB,EAAsBpD,IAAtB,CAA2BP,GAA3B,EAAgC2D,GAAhC,CAAP;;;wBAGF7C,yBAAO1B,QAAQpB,QAAQ;QACjB0H,MAAM,KAAK6G,WAAL,CAAiBvO,MAAjB,EAAyB8C,MAAzB,CAAgC1B,MAAhC,EAAwCpB,MAAxC,CAAV;WACO0H,IAAI+G,GAAX;WACO/G,GAAP;;;;;;AAIJ,IAAIiH,kBAAkB,IAAI5R,EAAEmB,MAAN,CAAa;eACjBnB,EAAEoB,MADe;UAEjB,IAAImQ,WAAJ,CAAgB,cAAhB,CAFiB;UAGjB,IAAIA,WAAJ,CAAgB,cAAhB;CAHI,CAAtB;;AAMA,IAAIM,UAAU,IAAI7R,EAAE6B,KAAN,CAAY+P,eAAZ,EAA6B5R,EAAEoB,MAA/B,CAAd;;AAEA,IAAI0Q,eAAe,IAAI9R,EAAEmB,MAAN,CAAa;UACtB,IAAIoQ,WAAJ,CAAgB,cAAhB,CADsB;UAEtB,IAAIA,WAAJ,CAAgB,cAAhB;CAFS,CAAnB;;AAKA,IAAIQ,SAAS,IAAI/R,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;KACxC;iBACepB,EAAEqB,KADjB;iBAEerB,EAAEqB;GAHuB;;KAMxC;iBACerB,EAAEqB,KADjB;iBAEerB,EAAEqB,KAFjB;iBAGerB,EAAEoB;GATuB;;KAYxC;iBACepB,EAAEqB,KADjB;iBAEerB,EAAEqB,KAFjB;kBAGe,IAAIrB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqO,MAAxB,CAHf;kBAIe,IAAIzP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqO,MAAxB;;CAhBP,CAAb;;AAoBA,IAAIuC,kBAAkB,IAAIhS,EAAEmB,MAAN,CAAa;eACjB,IAAInB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB2Q,MAAxB,EAAgC,EAAC9P,MAAM,QAAP,EAAhC,CADiB;cAEjB,IAAIjC,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB2Q,MAAxB,EAAgC,EAAC9P,MAAM,QAAP,EAAhC;CAFI,CAAtB;;AAKA,IAAIgQ,aAAa,IAAIjS,EAAEmB,MAAN,CAAa;SAChBnB,EAAEoB,MADc;cAEhB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB2Q,MAAxB,EAAgC,EAAC9P,MAAM,QAAP,EAAhC;CAFG,CAAjB;;AAKA,IAAIiQ,YAAY,IAAIlS,EAAE6B,KAAN,CAAYoQ,UAAZ,EAAwBjS,EAAEoB,MAA1B,CAAhB;;AAEA,IAAI+Q,aAAc,IAAInS,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB2Q,MAAxB,CAAZ,EAA6C;SAAKxP,EAAEU,MAAF,CAASmP,UAAd;CAA7C,CAAlB;AACA,IAAIC,YAAc,IAAIrS,EAAE6B,KAAN,CAAYsQ,UAAZ,EAAwBnS,EAAEoB,MAA1B,CAAlB;;AAEA,IAAIkR,kBAAkB,IAAItS,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB2Q,MAAxB,CAAZ,EAA6C;SAAKxP,EAAEU,MAAF,CAASA,MAAT,CAAgBmP,UAArB;CAA7C,CAAtB;AACA,IAAIG,iBAAkB,IAAIvS,EAAE6B,KAAN,CAAYyQ,eAAZ,EAA6BtS,EAAEoB,MAA/B,CAAtB;AACA,IAAIoR,gBAAkB,IAAIxS,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBmR,cAAxB,CAAZ,EAAqDvS,EAAEoB,MAAvD,CAAtB;;AAEA,IAAIqR,aAAa,IAAIzS,EAAEmC,eAAN,CAAsB,YAAtB,EAAoC;KAChD,IAAInC,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;OAC9B;gBACe,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADf;mBAEe+B,WAFf;aAGe,IAAIE,WAAJ;KAJe;OAM9B;gBACe,IAAIvR,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADf;mBAEe+B,WAFf;kBAGerR,EAAEoB,MAHjB;cAIe,IAAIpB,EAAEoC,SAAN,CAAgB,IAAImP,WAAJ,EAAhB,EAAmC,YAAnC;;GAVjB,CADgD;;KAehD,IAAIvR,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;OAC9B;gBACe,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADf;oBAEe+B,WAFf;oBAGeA,WAHf;oBAIerR,EAAEoB,MAJjB;gBAKe,IAAIpB,EAAEoC,SAAN,CAAgB,IAAIpC,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwByQ,OAAxB,CAAhB,EAAkD,cAAlD;KANe;;OAS9B;gBACe,IAAI7R,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADf;oBAEe+B,WAFf;oBAGeA,WAHf;iBAIe,IAAIrR,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoO,QAAxB,CAJf;iBAKe,IAAIxP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoO,QAAxB,CALf;mBAMexP,EAAEoB,MANjB;mBAOepB,EAAEoB,MAPjB;oBAQe,IAAIpB,EAAEoC,SAAN,CAAgB,IAAIpC,EAAEoC,SAAN,CAAgB0P,YAAhB,EAA8B,aAA9B,CAAhB,EAA8D,aAA9D;;GAjBjB,CAfgD;;KAoChD;YACmB9R,EAAEoB,MADrB;cAEmB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAFnB;oBAGmBtP,EAAEoB,MAHrB;sBAImB,IAAIpB,EAAE6B,KAAN,CAAYmQ,eAAZ,EAA6B,gBAA7B;GAxC6B;;KA2ChD;YACmBhS,EAAEoB,MADrB;kBAEmB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAFnB;kBAGmB,IAAItP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAHnB;gBAImBtP,EAAEoB,MAJrB;eAKmB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB8Q,SAAxB,CALnB;eAMmB,IAAIlS,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBiR,SAAxB;GAjD6B;;KAoDhD;YACmBrS,EAAEoB,MADrB;kBAEmB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAFnB;sBAGmB,IAAItP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAHnB;gBAImBtP,EAAEoB,MAJrB;eAKmB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB8Q,SAAxB,CALnB;mBAMmB,IAAIlS,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBoR,aAAxB;GA1D6B;;KA6DhD;YACmBxS,EAAEoB,MADrB;mBAEmB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAFnB;mBAGmB,IAAItP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAHnB;gBAImBtP,EAAEoB,MAJrB;gBAKmB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB8Q,SAAxB,CALnB;gBAMmB,IAAIlS,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBiR,SAAxB;GAnE6B;;KAsEhDrC,OAtEgD;KAuEhDI,eAvEgD;;KAyEhD;eACYpQ,EAAEoB,MADd;gBAEYpB,EAAEoB,MAFd;eAGY,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwBkR,UAAxB;;CA5EA,CAAjB;;;AAiFAA,WAAW/M,QAAX,CAAoB,CAApB,EAAuBgN,SAAvB,CAAiCzQ,IAAjC,GAAwCwQ,UAAxC;;AAEA,WAAe,IAAIzS,EAAEmB,MAAN,CAAa;WACVnB,EAAE8C,KADQ;cAEV,IAAI9C,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwByN,UAAxB,CAFU;eAGV,IAAI7O,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB4N,WAAxB,CAHU;cAIV,IAAIhP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB,IAAI8N,UAAJ,CAAeuD,UAAf,CAAxB;CAJH,CAAf,CAOA;;ACrMA,IAAIE,WAAW,IAAI3S,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsBpB,EAAEoB,MAAxB,CAAf;AACA,IAAIwR,eAAeD,QAAnB;;AAEA,IAAIE,WAAW,IAAI7S,EAAEmB,MAAN,CAAa;SACdnB,EAAEoB,MADY;aAEdpB,EAAEoB,MAFY;cAGd,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB;WAAKmB,EAAEuQ,SAAF,GAAc,CAAnB;GAAtB;CAHC,CAAf;;AAMA,IAAIC,cAAc,IAAI/S,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwByR,QAAxB,CAAZ,EAA+C7S,EAAEoB,MAAjD,CAAlB;;AAEA,IAAI4R,aAAa,IAAIhT,EAAEmC,eAAN,CAAsB,YAAtB,EAAoC;KAChD,IAAInC,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;OAC9B;gBACe,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADf;oBAEetP,EAAEqB;KAHa;OAK9B;gBACe,IAAIrB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CADf;kBAEetP,EAAEoB,MAFjB;kBAGe,IAAIpB,EAAEoC,SAAN,CAAgBpC,EAAEoB,MAAlB,EAA0B,YAA1B;;GARjB,CADgD;;KAahD;iBACepB,EAAEoB,MADjB;cAEe,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAFf;WAGetP,EAAEoB,MAHjB;eAIe,IAAIpB,EAAEoC,SAAN,CAAgB,IAAIpC,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBuR,QAAxB,CAAhB,EAAmD,OAAnD;GAjBiC;;KAoBhD;iBACe3S,EAAEoB,MADjB;cAEe,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAFf;WAGetP,EAAEoB,MAHjB;kBAIe,IAAIpB,EAAEoC,SAAN,CAAgB,IAAIpC,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBwR,YAAxB,CAAhB,EAAuD,OAAvD;GAxBiC;;KA2BhD;iBACe5S,EAAEoB,MADjB;cAEe,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAFf;WAGetP,EAAEoB,MAHjB;kBAIe,IAAIpB,EAAEoC,SAAN,CAAgB,IAAIpC,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB2R,WAAxB,CAAhB,EAAsD,OAAtD;GA/BiC;;KAkChD/C,OAlCgD;KAmChDI,eAnCgD;;KAqChD;iBACcpQ,EAAEoB,MADhB;gBAEcpB,EAAEoB,MAFhB;eAGc,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwByR,UAAxB;GAxCkC;;KA2ChD;iBACuBhT,EAAEoB,MADzB;cAEuB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAFvB;uBAGuB,IAAItP,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAAZ,EAA+C,qBAA/C,CAHvB;yBAIuBtP,EAAEoB,MAJzB;uBAKuB,IAAIpB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkO,QAAxB,CAAZ,EAA+C,qBAA/C,CALvB;gBAMuBtP,EAAEoB,MANzB;iBAOuB,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,YAAtB;;CAlDX,CAAjB;;;AAuDA4R,WAAWtN,QAAX,CAAoB,CAApB,EAAuBgN,SAAvB,CAAiCzQ,IAAjC,GAAwC+Q,UAAxC;;AAEA,WAAe,IAAIhT,EAAEmB,MAAN,CAAa;WACVnB,EAAE8C,KADQ;cAEV,IAAI9C,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwByN,UAAxB,CAFU;eAGV,IAAI7O,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB4N,WAAxB,CAHU;cAIV,IAAIhP,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB,IAAI8N,UAAJ,CAAe8D,UAAf,CAAxB;CAJH,CAAf;;ACnEA,IAAIC,kBAAkB,IAAIjT,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsBpB,EAAEoB,MAAxB,CAAtB;;AAEA,IAAI8R,eAAe,IAAIlT,EAAEmB,MAAN,CAAa;uBACN,IAAInB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB6R,eAAxB,CADM;wBAEN,IAAIjT,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB6R,eAAxB,CAFM;uBAGN,IAAIjT,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB6R,eAAxB,CAHM;wBAIN,IAAIjT,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB6R,eAAxB,CAJM;oBAKN,IAAIjT,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB,IAAI8N,UAAJ,CAAeuD,UAAf,CAAxB,CALM;uBAMN,IAAIzS,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB6R,eAAxB,CANM;wBAON,IAAIjT,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB6R,eAAxB,CAPM;uBAQN,IAAIjT,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB6R,eAAxB,CARM;wBASN,IAAIjT,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB6R,eAAxB,CATM;oBAUN,IAAIjT,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB,IAAI8N,UAAJ,CAAeuD,UAAf,CAAxB;CAVP,CAAnB;;AAaA,IAAIU,cAAc,IAAInT,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB8R,YAAxB,CAAZ,EAAmDlT,EAAEoB,MAArD,CAAlB;;AAEA,IAAIgS,oBAAoB,IAAIpT,EAAEmB,MAAN,CAAa;OACtB,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADsB;eAEtB,IAAI9D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB+R,WAAxB;CAFS,CAAxB;;AAKA,IAAIE,aAAa,IAAIrT,EAAEmB,MAAN,CAAa;kBACZ,IAAInB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsBpB,EAAEoB,MAAxB,CAAxB,CADY;kBAEZ,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB+R,WAAxB,CAFY;gBAGZnT,EAAEoB,MAHU;kBAIZ,IAAIpB,EAAE6B,KAAN,CAAYuR,iBAAZ,EAA+B,cAA/B;CAJD,CAAjB;;AAOA,IAAIE,mBAAmB,IAAItT,EAAEmB,MAAN,CAAa;OAC1B,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CAD0B;UAE1B,IAAI9D,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBiS,UAAxB,EAAoC,EAACpR,MAAM,QAAP,EAApC;CAFa,CAAvB;;AAKA,WAAe,IAAIjC,EAAEmB,MAAN,CAAa;WACbnB,EAAEuB,MADW;eAEbvB,EAAEoB,MAFW;cAGb,IAAIpB,EAAE6B,KAAN,CAAYyR,gBAAZ,EAA8B,aAA9B;CAHA,CAAf;;ACpCA,IAAIC,YAAY,IAAIvT,EAAEmB,MAAN,CAAa;UACnBnB,EAAEuB,MADiB;UAEnBvB,EAAEuB,MAFiB;UAGnBvB,EAAEuB;CAHI,CAAhB;;AAMA,IAAIiS,iBAAiB,IAAIxT,EAAEmB,MAAN,CAAa;YAChB,IAAInB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,EAAyB,CAAzB,CADgB;eAEhBpB,EAAEuB,MAFc;aAGhB,IAAIvB,EAAEmF,MAAN,CAAa,aAAb;CAHG,CAArB;;AAMA,WAAe,IAAInF,EAAEmB,MAAN,CAAa;aACTnB,EAAEuB,MADO;aAETvB,EAAEoB,MAFO;UAGTpB,EAAEoB,MAHO;cAIT,IAAIpB,EAAE6B,KAAN,CAAY0R,SAAZ,EAAuB,WAAvB,CAJS;mBAKT,IAAIvT,EAAE6B,KAAN,CAAY2R,cAAZ,EAA4B,WAA5B;CALJ,CAAf;;ACZA,IAAIC,YAAY,IAAIzT,EAAEmB,MAAN,CAAa;gBACPnB,EAAEoB,MADK;qBAEP,IAAIpB,EAAE+C,QAAN,CAAe/C,EAAEoB,MAAjB,EAAyB;aAAA,EAC9B,SAD8B,EAE3C,oBAF2C,EAErB,kBAFqB;GAAzB;CAFN,CAAhB;;AAQA,WAAe,IAAIpB,EAAEmB,MAAN,CAAa;WACdnB,EAAEoB,MADY;aAEdpB,EAAEoB,MAFY;cAGd,IAAIpB,EAAE6B,KAAN,CAAY4R,SAAZ,EAAuB,WAAvB,CAHc;CAAb,CAAf;;ACRA,IAAIC,eAAe,IAAI1T,EAAEmB,MAAN,CAAa;aACdnB,EAAE0B,KADY;gBAEd1B,EAAE0B,KAFY;UAGd,IAAI1B,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB;WAAKa,EAAEU,MAAF,CAASA,MAAT,CAAgBG,IAAhB,CAAqBC,SAA1B;GAArB;CAHC,CAAnB;;;AAOA,WAAe,IAAIrD,EAAEmB,MAAN,CAAa;WACNnB,EAAEoB,MADI;cAENpB,EAAEqB,KAFI;oBAGNrB,EAAE8C,KAHI;WAIN,IAAI9C,EAAE6B,KAAN,CAAY6R,YAAZ,EAA0B,YAA1B;CAJP,CAAf;;ACPA,IAAIC,WAAW,IAAI3T,EAAEmB,MAAN,CAAa;QAClBnB,EAAEoB,MADgB;SAElBpB,EAAEoB,MAFgB;SAGlBpB,EAAEqB;CAHG,CAAf;;AAMA,IAAIuS,aAAa,IAAI5T,EAAEmB,MAAN,CAAa;cAChBnB,EAAEoB,MADc;WAEnBpB,EAAEoB,MAFiB;WAGnB,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,SAAtB,CAHmB;OAIvB;WAAKmB,EAAEsD,OAAF,CAAU/F,MAAV,IAAoBuC,KAAKC,GAAL,CAAStB,KAAT,CAAeqB,IAAf,EAAqBE,EAAEsD,OAAvB,CAAzB;;CAJU,CAAjB;;AAOA,IAAIgO,aAAa,IAAI7T,EAAEmB,MAAN,CAAa;OACvB;WAAKoB,EAAEoP,YAAF,GAAiBpP,EAAEU,MAAF,CAASA,MAAT,CAAgB0O,YAAtC;GADuB;OAEvB;WAAK,CAAE,CAACpP,EAAEU,MAAF,CAAS6Q,SAAT,CAAmBxR,GAAnB,GAAyBC,EAAEwR,GAA5B,IAAmCxR,EAAEU,MAAF,CAAS+Q,QAA7C,GAAyD,CAA1D,KAAgEzR,EAAEU,MAAF,CAAS+Q,QAAT,GAAoB,CAApF,CAAL;GAFuB;UAGpB,IAAIhU,EAAEoC,SAAN,CAAgBpC,EAAEqB,KAAlB,EAAyB,KAAzB;CAHO,CAAjB;;AAMA,IAAI4S,eAAe,IAAIjU,EAAEmC,eAAN,CAAsB,QAAtB,EAAgC;KAC9C;YACenC,EAAEoB,MADjB;iBAEepB,EAAEoB,MAFjB;mBAGepB,EAAEoB,MAHjB;gBAIepB,EAAEoB,MAJjB;WAKe,IAAIpB,EAAE6B,KAAN,CAAY8R,QAAZ,EAAsB,QAAtB;GAN+B;;KAS9C;cACW3T,EAAEoB,MADb;eAEW,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBwS,UAAxB,EAAoC,EAAC3R,MAAM,QAAP,EAApC,CAFX;gBAGW,IAAIjC,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBwS,UAAxB,EAAoC,EAAC3R,MAAM,QAAP,EAApC,CAHX;WAIW,IAAIjC,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwByS,UAAxB,EAAoC,EAAC5R,MAAM,QAAP,EAApC;GAbmC;;KAgB9C;gBACiBjC,EAAEoB,MADnB;oBAEiBpB,EAAE0B,KAFnB;oBAGiB1B,EAAE0B,KAHnB;qBAIiB1B,EAAE0B,KAJnB;WAKiB1B,EAAE0B,KALnB;eAMiB,IAAI1B,EAAE6B,KAAN,CAAY7B,EAAEqB,KAAd,EAAqB,gBAArB,CANjB;eAOiB,IAAIrB,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB,YAArB,CAPjB;gBAQiB,IAAI1B,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB,YAArB,CARjB;eASiB,IAAI1B,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB;aAAKa,EAAE2R,cAAF,GAAmB3R,EAAE4R,eAA1B;KAArB;;CAzBH,CAAnB;;AA6BA,IAAIC,YAAY,IAAIpU,EAAEmC,eAAN,CAAsB,SAAtB,EAAiC;KAC5C;gBACWnC,EAAEoB,MADb;YAEWpB,EAAEoB,MAFb;YAGWpB,EAAE0B,KAHb;cAIW,IAAI1B,EAAE+C,QAAN,CAAe/C,EAAE0B,KAAjB,EAAwB,CAClC,YADkC;aAAA;iBAAA;cAAA;KAAxB,CAJX;cAUWuS,YAVX;aAWQ,IAAIjU,EAAE0C,QAAN,CAAe1C,EAAE0B,KAAjB,EAAwB;aAAKa,EAAEzC,MAAF,GAAWyC,EAAEI,cAAlB;KAAxB;GAZoC;KAc5C;YACW3C,EAAEuB,MADb;cAEW,IAAIvB,EAAE+C,QAAN,CAAe/C,EAAE0B,KAAjB,EAAwB,CAClC,IADkC,EAC5B,IAD4B,EACtB,IADsB,EAChB,IADgB,EACV,IADU,EAElC,WAFkC;iBAAA;cAAA;KAAxB,CAFX;YAQW1B,EAAE0B,KARb;gBASW1B,EAAEoB,MATb;cAUW6S,YAVX;aAWQ,IAAIjU,EAAE0C,QAAN,CAAe1C,EAAE0B,KAAjB,EAAwB;aAAKa,EAAEzC,MAAF,GAAWyC,EAAEI,cAAlB;KAAxB;;CAzBG,CAAhB;;AA6BA,WAAe,IAAI3C,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;KAC1C;aACWpB,EAAEoB,MADb;YAEW,IAAIpB,EAAE6B,KAAN,CAAYuS,SAAZ,EAAuB,SAAvB;GAH+B;;KAM1C;cACW,IAAIpU,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CADX;aAEWpB,EAAEuB,MAFb;YAGW,IAAIvB,EAAE6B,KAAN,CAAYuS,SAAZ,EAAuB,SAAvB;;CATD,CAAf;;AC7EA;;;AAGA,WAAe,IAAIpU,EAAEmB,MAAN,CAAa;WACdnB,EAAEoB,MADY;aAEdpB,EAAEoB,MAFY;SAGd,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB,WAArB;CAHC,CAAf;;ACHA;;AAEA,WAAe,IAAI1B,EAAEmB,MAAN,CAAa;WACJnB,EAAEoB,MADE;cAEJpB,EAAEuB,MAFE;SAGJvB,EAAEoB,MAHE;WAIJpB,EAAEoB,MAJE;SAKJpB,EAAEoB,MALE;cAMJpB,EAAEoB,MANE;aAOJpB,EAAEoB,MAPE;aAQJpB,EAAEoB,MARE;YASJ,IAAIpB,EAAE8D,MAAN,CAAa,EAAb,CATI;uBAUJ,IAAI9D,EAAE8D,MAAN,CAAa,CAAb,CAVI;YAWJ,IAAI9D,EAAE8D,MAAN,CAAa,CAAb,CAXI;gBAYJ,IAAI9D,EAAE8D,MAAN,CAAa,CAAb,CAZI;aAaJ,IAAI9D,EAAE8D,MAAN,CAAa,CAAb,CAbI;cAcJ9D,EAAE0B,KAdE;YAeJ,IAAI1B,EAAE0C,QAAN,CAAe1C,EAAE0B,KAAjB;CAfT,CAAf;;ACFA;;;AAGA,IAAI2S,QAAQ,IAAIrU,EAAEmB,MAAN,CAAa;YACPnB,EAAE0B,KADK;UAEP1B,EAAE0B,KAFK;eAGP1B,EAAE0B,KAHK;aAIP1B,EAAE0B,KAJK;CAAb,CAAZ;;AAOA,IAAI4S,SAAS,IAAItU,EAAEmB,MAAN,CAAa;cACRnB,EAAEoB,MADM;QAERpB,EAAEqB,KAFM;QAGRrB,EAAEqB,KAHM;CAAb,CAAb;;AAMA,IAAIkT,YAAY,IAAIvU,EAAEmB,MAAN,CAAa;QACXnB,EAAEoB,MADS;WAEXpB,EAAE0B,KAFS;SAGX1B,EAAE0B,KAHS;WAIX,IAAI1B,EAAE6B,KAAN,CAAYyS,MAAZ,EAAoB,MAApB,CAJW;CAAb,CAAhB;;AAOA,WAAe,IAAItU,EAAEmB,MAAN,CAAa;WACVnB,EAAEoB,MADQ;WAEVpB,EAAEoB,MAFQ;aAGVpB,EAAEoB,MAHQ;eAIV,IAAIpB,EAAE6B,KAAN,CAAYwS,KAAZ,EAAmB,WAAnB,CAJU;WAKV,IAAIrU,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,WAAtB,CALU;UAMV,IAAIpB,EAAE6B,KAAN,CAAY0S,SAAZ,EAAuB,SAAvB,CANU;CAAb,CAAf;;ACvBA;AACA,WAAe,IAAIvU,EAAEmB,MAAN,CAAa;WACFnB,EAAEoB,MADA;UAEFpB,EAAEqB,KAFA;WAGFrB,EAAEqB,KAHA;WAIFrB,EAAEqB,KAJA;oBAKFrB,EAAEqB,KALA;qBAMFrB,EAAEqB,KANA;wBAOFrB,EAAEqB,KAPA;cAQFrB,EAAEqB,KARA;kBASFrB,EAAEqB,KATA;iBAUFrB,EAAEqB,KAVA;eAWFrB,EAAEqB,KAXA;YAYF,IAAIrB,EAAE0C,QAAN,CAAe1C,EAAEqB,KAAjB,EAAwB,CAAxB,CAZE;oBAaFrB,EAAEqB,KAbA;mBAcFrB,EAAEoB,MAdA;CAAb,CAAf;;ACDA,IAAIoT,YAAY,IAAIxU,EAAEmB,MAAN,CAAa;WAClBnB,EAAEoB,MADgB;WAElBpB,EAAEqB,KAFgB;CAAb,CAAhB;;;AAMA,WAAe,IAAIrB,EAAEmB,MAAN,CAAa;WAChB,IAAInB,EAAEoC,SAAN,CAAgBoS,SAAhB,EAA2B;WAAKjS,EAAEU,MAAF,CAASwR,IAAT,CAActR,eAAnB;GAA3B,CADgB;YAEhB,IAAInD,EAAEoC,SAAN,CAAgBpC,EAAEqB,KAAlB,EAAyB;WAAKkB,EAAEU,MAAF,CAASG,IAAT,CAAcC,SAAd,GAA0Bd,EAAEU,MAAF,CAASwR,IAAT,CAActR,eAA7C;GAAzB;CAFG,CAAf;;ACNA,IAAIuR,YAAY,IAAI1U,EAAE2U,KAAN,CAAY,EAAZ,EAAgB,IAAhB,EAAsB,EAAtB,CAAhB;;AAEA,IAAIC,iBAAiB,IAAI5U,EAAEmB,MAAN,CAAa;aACrBuT,SADqB;WAEvBA;CAFU,CAArB;;AAKA,IAAIG,UAAU,IAAI7U,EAAEmB,MAAN,CAAa;aACdnB,EAAEoB,MADY;kBAET,IAAIpB,EAAE6B,KAAN,CAAY+S,cAAZ,EAA4B,WAA5B;CAFJ,CAAd;;AAKA,WAAe,IAAI5U,EAAEmB,MAAN,CAAa;WACjBnB,EAAE2F,OADe;aAEf3F,EAAEuB,MAFa;WAGjB,IAAIvB,EAAE6B,KAAN,CAAYgT,OAAZ,EAAqB,WAArB;CAHI,CAAf;;ICZMC;kCACQ7S,IAAZ,EAAkBoC,MAAlB,EAA0BpB,MAA1B,EAAkC;;;SAC3BhB,IAAL,GAAYA,IAAZ;SACKoC,MAAL,GAAcA,MAAd;SACKpB,MAAL,GAAcA,MAAd;SACK8R,IAAL,GAAY,KAAK1Q,MAAL,CAAY+B,GAAxB;SACK4O,MAAL,GAAc,EAAd;;;mCAGFC,2BAAQ9K,OAAO;QACT,KAAK6K,MAAL,CAAY7K,KAAZ,KAAsB,IAA1B,EAAgC;UAC1B/D,MAAM,KAAK/B,MAAL,CAAY+B,GAAtB;WACK/B,MAAL,CAAY+B,GAAZ,GAAkB,KAAK2O,IAAL,GAAY,KAAK9S,IAAL,CAAUuD,IAAV,CAAe,IAAf,EAAqB,KAAKvC,MAA1B,IAAoCkH,KAAlE;WACK6K,MAAL,CAAY7K,KAAZ,IAAqB,KAAKlI,IAAL,CAAU8D,MAAV,CAAiB,KAAK1B,MAAtB,EAA8B,KAAKpB,MAAnC,CAArB;WACKoB,MAAL,CAAY+B,GAAZ,GAAkBA,GAAlB;;;WAGK,KAAK4O,MAAL,CAAY7K,KAAZ,CAAP;;;mCAGF+K,6BAAU;gCACkB,KAAKjT,IAAL,CAAUkT,WAAV,CAAsBC,IAAhD;;;;;;AAIJ,IAAaC,cAAb;;;0BACcpT,IAAZ,EAAkB;;;4CAChB,oBAAMA,IAAN,EAAY,CAAZ,CADgB;;;2BAIlB8D,MALF,mBAKS1B,MALT,EAKiBpB,MALjB,EAKyB;WACd,IAAI6R,sBAAJ,CAA2B,KAAK7S,IAAhC,EAAsCoC,MAAtC,EAA8CpB,MAA9C,CAAP;GANJ;;;EAAoCjD,EAAE6B,KAAtC;;AAUA,AAAO,IAAIyT,cAAc,SAAdA,WAAc,GAA+B;MAAtBC,SAAsB,uEAAVvV,EAAEoB,MAAQ;;;MAEhDoU,MAFgD;oBAGxCvT,IAAZ,EAAkB;;;WACXA,IAAL,GAAYA,IAAZ;;;qBAGF8D,MAPoD,mBAO7C1B,MAP6C,EAOrCuE,GAPqC,EAOhC;YACZA,IAAI3F,MAAJ,CAAWA,MAAjB;aACO,KAAKhB,IAAL,CAAU8D,MAAV,CAAiB1B,MAAjB,EAAyBuE,GAAzB,CAAP;KATkD;;qBAYpDpD,IAZoD,iBAY/CP,GAZ+C,EAY1C2D,GAZ0C,EAYrC;YACPA,IAAI3F,MAAJ,CAAWA,MAAjB;aACO,KAAKhB,IAAL,CAAUuD,IAAV,CAAeP,GAAf,EAAoB2D,GAApB,CAAP;KAdkD;;qBAiBpDhC,MAjBoD,mBAiB7CvC,MAjB6C,EAiBrCY,GAjBqC,EAiBhC2D,GAjBgC,EAiB3B;YACjBA,IAAI3F,MAAJ,CAAWA,MAAjB;aACO,KAAKhB,IAAL,CAAU2E,MAAV,CAAiBvC,MAAjB,EAAyBY,GAAzB,EAA8B2D,GAA9B,CAAP;KAnBkD;;;;;cAuB1C,IAAI4M,MAAJ,CAAWD,SAAX,CAAZ;;MAEIE,qBAAqB,IAAIzV,EAAEmB,MAAN,CAAa;cAC1BnB,EAAEoB,MADwB;YAE5BpB,EAAEoB,MAF0B;iBAGvBpB,EAAEoB,MAHqB;mBAIrBpB,EAAEoB,MAJmB;gBAKxBpB,EAAEoB;GALS,CAAzB;;MAQIsU,sBAAsB,IAAI1V,EAAEmB,MAAN,CAAa;eAC1BnB,EAAEoB,MADwB;gBAEzBpB,EAAEoB,MAFuB;WAG9BmU;GAHiB,CAA1B;;MAMII,qBAAqB,IAAI3V,EAAEmB,MAAN,CAAa;eACzBnB,EAAEoB,MADuB;gBAExBpB,EAAEoB,MAFsB;YAG5B,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB,IAAIpB,EAAE6B,KAAN,CAAY0T,SAAZ,EAAuB;aAAKhT,EAAEqT,SAAF,GAAcrT,EAAEsT,UAAhB,GAA6B,CAAlC;KAAvB,CAAxB,EAAqF,EAAC5T,MAAM,QAAP,EAArF;GAHe,CAAzB;;MAMI6T,eAAe,IAAI9V,EAAEmB,MAAN,CAAa;WACvBnB,EAAEoB,MADqB;WAEvBmU;GAFU,CAAnB;;SAKO,IAAIvV,EAAEmC,eAAN,CAAsBnC,EAAEoB,MAAxB,EAAgC;OAClC;cACO,IAAIiU,cAAJ,CAAmBE,SAAnB,CADP;KADkC;OAIlC;0BACmBE,kBADnB;gBAES,IAAIzV,EAAE6B,KAAN,CAAY6T,mBAAZ,EAAiC;eAAKnT,EAAEwT,kBAAF,CAAqBC,MAA1B;OAAjC;KANyB;OAQlC;0BACmBP,kBADnB;gBAES,IAAIzV,EAAE6B,KAAN,CAAY8T,kBAAZ,EAAgC;eAAKpT,EAAEwT,kBAAF,CAAqBC,MAA1B;OAAhC;KAVyB;OAYlC;0BACmBP,kBADnB;gBAES,IAAIzV,EAAE6B,KAAN,CAAYiU,YAAZ,EAA0B;eAAKvT,EAAEwT,kBAAF,CAAqBC,MAA1B;OAA1B;KAdyB;OAgBlC;kBACWhW,EAAEoB,MADb;aAEMpB,EAAEoB,MAFR;cAGO,IAAIpB,EAAE6B,KAAN,CAAY0T,SAAZ,EAAuB,OAAvB;;GAnBL,CAAP;CAlDK;;AA0EP,AAAO,SAASU,UAAT,GAA2D;MAAvCC,SAAuC,uEAA3B,EAA2B;MAAvBC,UAAuB,uEAAVnW,EAAEoB,MAAQ;;MAC5DgV,QAAQ,eAAc;cACdpW,EAAEoB,MADY;WAEjBpB,EAAEoB;GAFC,EAGT8U,SAHS,CAAZ;;MAKIG,QAAQ,IAAIrW,EAAEmB,MAAN,CAAaiV,KAAb,CAAZ;MACIE,aAAa,IAAIjB,cAAJ,CAAmB,IAAIrV,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB;WAAKmB,EAAEgU,QAAP;GAAtB,CAAnB,CAAjB;;MAEIC,cAAc,IAAIxW,EAAEmB,MAAN,CAAa;cACnBnB,EAAEuB,MADiB;gBAEjB,IAAIvB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAI+T,WAAJ,CAAgBa,UAAhB,CAAxB,CAFiB;gBAGjB,IAAInW,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB+U,UAAxB,CAHiB;gBAIjB,IAAItW,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAI8T,cAAJ,CAAmBgB,KAAnB,CAAxB;GAJI,CAAlB;;SAOOG,WAAP;;;;AAIF,AAAO,SAASC,WAAT,GAA4D;MAAvCP,SAAuC,uEAA3B,EAA2B;MAAvBC,UAAuB,uEAAVnW,EAAEoB,MAAQ;;MAC7DsV,mBAAmB,IAAI1W,EAAEmB,MAAN,CAAa;WAAA,qBACxB;aAAS,CAAP;KADsB;;gBAEtBnB,EAAEoB,MAFoB;YAG1B,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB1B,EAAEoB,MAAvB;GAHa,CAAvB;;MAMIgV,QAAQ,eAAc;oBACRpW,EAAEoB,MADM;;cAGd;aAAK,CAACmB,EAAEoU,cAAF,IAAoBpU,EAAEU,MAAF,CAAS2T,UAAT,CAAoB7B,IAApB,GAA2BxS,EAAEU,MAAF,CAAS0O,YAAxD,CAAD,IAA0EpP,EAAEU,MAAF,CAASsT,QAAxF;KAHc;WAIjBvW,EAAEoB;GAJC,EAKT8U,SALS,CAAZ;;MAOIG,QAAQ,IAAIrW,EAAEmB,MAAN,CAAaiV,KAAb,CAAZ;MACIE,aAAa,IAAIjB,cAAJ,CAAmB,IAAIrV,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB;WAAKa,EAAEgU,QAAP;GAArB,CAAnB,CAAjB;;MAEIM,eAAe,IAAI7W,EAAEmB,MAAN,CAAa;cACpBnB,EAAEoB,MADkB;gBAElB,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBsV,gBAAxB,CAFkB;gBAGlB,IAAI1W,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBkV,UAAxB,CAHkB;gBAIlB,IAAItW,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB,IAAIiU,cAAJ,CAAmBgB,KAAnB,CAAxB;GAJK,CAAnB;;SAOOQ,YAAP;;;ACxJF,IAAIC,eAAe,IAAI9W,EAAEmC,eAAN,CAAsB,QAAtB,EAAgC;KAC9C;YACO,IAAInC,EAAE6B,KAAN,CAAY7B,EAAEqB,KAAd,EAAqB,EAArB;GAFuC;;KAK9C;YACO,IAAIrB,EAAE6B,KAAN,CAAY7B,EAAEqB,KAAd,EAAqB,EAArB,CADP;iBAEY,IAAIiU,WAAJ,CAAgBtV,EAAEoB,MAAlB;GAPkC;;KAU9C;mBACcpB,EAAEoB,MADhB;mBAEc,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,EAAtB;GAZgC;;KAe9C;mBACcpB,EAAEoB,MADhB;mBAEc,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,EAAtB,CAFd;iBAGY,IAAIkU,WAAJ,CAAgBtV,EAAEoB,MAAlB;;CAlBE,CAAnB;;AAsBA,WAAe,IAAIpB,EAAEmB,MAAN,CAAa;WACjBnB,EAAE2F,OADe;UAElB3F,EAAEoB,MAFgB;mBAGTpB,EAAEoB,MAHO;YAIhB0V;CAJG,CAAf;;ACvBA,IAAIC,UAAU,IAAI/W,EAAEmB,MAAN,CAAa;WAChBnB,EAAEoB,MADc;aAEdpB,EAAEqB,KAFY;QAGnB;WAAKkB,EAAEU,MAAF,CAASA,MAAT,CAAgBA,MAAhB,CAAuBmS,IAAvB,CAA4B9Q,OAA5B,CAAoC0S,YAApC,CAAiDzU,EAAE6K,SAAnD,CAAL;;CAHM,CAAd;;AAMA,IAAI6J,cAAc,IAAIjX,EAAEmB,MAAN,CAAa;WACpBnB,EAAEoB,MADkB;aAElBpB,EAAEoB,MAFgB;gBAGf,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAIvB,EAAE6B,KAAN,CAAYkV,OAAZ,EAAqB,WAArB,CAAxB,EAA2D,EAAE9U,MAAM,QAAR,EAA3D,CAHe;gBAIf,IAAIjC,EAAE+C,QAAN,CAAe/C,EAAE0B,KAAjB,EAAwB,CACpC,IADoC,EAC9B,IAD8B,EACxB,IADwB,EAClB,IADkB,EACZ,IADY,EACN,IADM,EAEpC,YAFoC,EAEtB,WAFsB,CAAxB,CAJe;kBAQb1B,EAAE0B,KARW;aASlB1B,EAAEqB,KATgB;QAUvB;WAAKkB,EAAEU,MAAF,CAASA,MAAT,CAAgBmS,IAAhB,CAAqB9Q,OAArB,CAA6B0S,YAA7B,CAA0CzU,EAAE6K,SAA5C,CAAL;;CAVU,CAAlB;;AAaA,WAAe,IAAIpN,EAAEmB,MAAN,CAAa;WACjBnB,EAAE2F,OADe;oBAER3F,EAAEoB,MAFM;aAGf,IAAIpB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CAHe;aAIf,IAAIpB,EAAE0C,QAAN,CAAe1C,EAAEuB,MAAjB,CAJe;gBAKZ,IAAIvB,EAAE6B,KAAN,CAAYoV,WAAZ,EAAyB,kBAAzB;CALD,CAAf;;ACnBA,IAAInG,SAAO,IAAI9Q,EAAEmB,MAAN,CAAa;WACb,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADa;YAEZ9D,EAAE2F,OAFU;gBAGR3F,EAAE2F,OAHM;YAIZ3F,EAAE2F,OAJU;SAKf3F,EAAEoB,MALa;UAMdpB,EAAEoB,MANY;QAOhB;WAAKmB,EAAEU,MAAF,CAASA,MAAT,CAAgBmS,IAAhB,CAAqB9Q,OAArB,CAA6B0S,YAA7B,CAA0CzU,EAAEoC,MAA5C,CAAL;;CAPG,CAAX;;AAUA,IAAIuS,WAAW,IAAIlX,EAAEmB,MAAN,CAAa;UAClBnB,EAAEoB,MADgB;QAEpB;WAAKmB,EAAEU,MAAF,CAASA,MAAT,CAAgBmS,IAAhB,CAAqB9Q,OAArB,CAA6B0S,YAA7B,CAA0CzU,EAAEoC,MAA5C,CAAL;GAFoB;SAGnB3E,EAAEoB,MAHiB;SAInB,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAE2F,OAAd,EAAuB;WAAKpD,EAAEU,MAAF,CAASkU,SAAd;GAAvB;CAJM,CAAf;;AAOA,WAAe,IAAInX,EAAEmB,MAAN,CAAa;WACjBnB,EAAE2F,OADe;gBAEZ3F,EAAEoB,MAFU;kBAGVpB,EAAEoB,MAHQ;aAIfpB,EAAEoB,MAJa;YAKhBpB,EAAEoB,MALc;iBAMXpB,EAAEoB,MANS;gBAOZpB,EAAEoB,MAPU;QAQpB,IAAIpB,EAAE6B,KAAN,CAAYiP,MAAZ,EAAkB,WAAlB,CARoB;YAShB,IAAI9Q,EAAE6B,KAAN,CAAYqV,QAAZ,EAAsB,eAAtB;CATG,CAAf;;ACjBA,IAAIxC,cAAY,IAAI1U,EAAE2U,KAAN,CAAY,EAAZ,EAAgB,IAAhB,EAAsB,EAAtB,CAAhB;;IACMyC;;;;;SACGrR,yBAAO1B,QAAQpB,QAAQ;;;;WAIrBA,OAAOoU,KAAP,GACHhT,OAAOiT,YAAP,EADG,GAEHjT,OAAO2B,YAAP,KAAwB,CAF5B;;;;;;AAMJ,IAAIuR,OAAO,IAAIvX,EAAEmB,MAAN,CAAa;WACbnB,EAAEoB,MADW;YAEZ,IAAIpB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CAFY;aAGXpB,EAAEoB,MAHS;oBAIJpB,EAAEoB,MAJE;gBAKR,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAIvB,EAAE6B,KAAN,CAAY,IAAI7B,EAAE6B,KAAN,CAAY6S,WAAZ,EAAuB,WAAvB,CAAZ,EAAiD,kBAAjD,CAAxB,CALQ;cAMV1U,EAAEoB,MANQ;SAOfpB,EAAEoB,MAPa;gBAQRpB,EAAEuB,MARM;WASb,IAAIvB,EAAE6B,KAAN,CAAY,IAAI7B,EAAEgC,OAAN,CAAcoV,MAAd,EAAsB,MAAtB,EAA8B,EAAErT,YAAY,cAAd,EAA8BC,WAAW,KAAzC,EAA9B,CAAZ,EAA6F;WAAKzB,EAAEqN,UAAF,GAAe,CAApB;GAA7F;CATA,CAAX,CAYA;;ACvBA,IAAIgE,eAAa,IAAI5T,EAAEmB,MAAN,CAAa;UACpBnB,EAAEoB,MADkB;YAElBpB,EAAEoB,MAFgB;mBAGXpB,EAAEuB,MAHS;cAIhB,IAAIkV,WAAJ;CAJG,CAAjB;;AAOA,IAAIe,mBAAmB,IAAIxX,EAAEmB,MAAN,CAAa;aACvBnB,EAAEuB,MADqB;mBAEjBvB,EAAE2F,OAFe;qBAGf3F,EAAE2F,OAHa;kBAIlB3F,EAAE2F,OAJgB;oBAKhB3F,EAAE2F,OALc;aAMvB3F,EAAEoB,MANqB;eAOrBpB,EAAEoB;CAPM,CAAvB;;AAUA,IAAIqW,oBAAoB,IAAIzX,EAAE6B,KAAN,CAAY2V,gBAAZ,EAA8BxX,EAAEuB,MAAhC,CAAxB;;AAEA,IAAImW,aAAa,IAAI1X,EAAEmC,eAAN,CAAsB,YAAtB,EAAoC;KAChD;gBACWnC,EAAE2F,OADb;gBAEW3F,EAAE2F,OAFb;WAGM3F,EAAEoB,MAHR;YAIO,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsBpB,EAAEoB,MAAxB;GALyC;;KAQhD;cACSpB,EAAEoB;GATqC;;KAYhD;oBACepB,EAAE2F,OADjB;cAES3F,EAAEoB,MAFX;gBAGWpB,EAAEoB;GAfmC;;KAkBhD,EAlBgD;;KAoBhD;mBACcpB,EAAEuB,MADhB;kBAEavB,EAAE2F,OAFf;oBAGe3F,EAAE2F,OAHjB;kBAIa3F,EAAE2F;GAxBiC;;KA2BhD;WACM3F,EAAEoB,MADR;WAEMpB,EAAEoB;;CA7BI,CAAjB;;AAiCA,IAAIuW,SAAS,IAAI3X,EAAEmB,MAAN,CAAa;eACXnB,EAAEoB,MADS;cAEZpB,EAAEoB,MAFU;gBAGVpB,EAAEuB,MAHQ;cAIZmW,UAJY;WAKf,IAAI1X,EAAE0C,QAAN,CAAe1C,EAAE0B,KAAjB,EAAwB;WAAKa,EAAEqV,YAAF,GAAiBrV,EAAEI,cAAxB;GAAxB;CALE,CAAb;;AAQA,IAAIkV,yBAAyB,IAAI7X,EAAE6B,KAAN,CAAY8V,MAAZ,EAAoB3X,EAAEuB,MAAtB,CAA7B;AACA,IAAIuW,wBAAwB,IAAI9X,EAAEmB,MAAN,CAAa;eAC1B,IAAImU,WAAJ,CAAgB,IAAItV,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwByW,sBAAxB,CAAhB;CADa,CAA5B;;AAIA,IAAIE,qBAAqB,IAAI/X,EAAEmB,MAAN,CAAa;cACxB,IAAInB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBwS,YAAxB,EAAoC,EAAE3R,MAAM,QAAR,EAApC,CADwB;aAEzBjC,EAAEoB,MAFuB;yBAGb,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB0W,qBAAxB,EAA+C,EAAE7V,MAAM,QAAR,EAA/C,CAHa;sBAIhB,IAAIqT,WAAJ,CAAgB,IAAItV,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwBqW,iBAAxB,EAA2C,EAAExV,MAAM,QAAR,EAAkB8B,YAAY,WAA9B,EAA3C,CAAhB;CAJG,CAAzB;;AAOA,WAAe,IAAI/D,EAAEmB,MAAN,CAAa;WACjBnB,EAAEuB,MADe;UAElBvB,EAAEoB,MAFgB;cAGd,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB2W,kBAAxB,CAHc;YAIhB,IAAI/X,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB2W,kBAAxB;CAJG,CAAf;;ACxEA,IAAIC,eAAe;UACThY,EAAEoB;CADZ;;AAIA,IAAI6W,iBAAiB;aACRjY,EAAEoB,MADM;gBAELpB,EAAEoB;CAFlB;;AAKA,IAAI8W,gBAAgB;sBACElY,EAAEoB,MADJ;qBAECpB,EAAEoB;CAFvB;;AAKA,IAAI+W,oBAAoB,IAAInY,EAAEmB,MAAN,CAAa;SAC5B,IAAIkU,cAAJ,CAAmB,IAAIrV,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAI+T,WAAJ,EAAxB,CAAnB;CADe,CAAxB;;AAIA,IAAI8C,eAAe,IAAIpY,EAAEmC,eAAN,CAAsB,MAAtB,EAA8B;KAC5C;gBACW,IAAI8T,UAAJ;GAFiC;;KAK5C;gBACW,IAAIA,UAAJ,CAAegC,cAAf,CADX;uBAEkB,IAAIjY,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB4W,iBAAxB;GAP0B;;KAU5C;gBACW,IAAIlC,UAAJ,CAAe+B,YAAf,CADX;qBAEgB,IAAIhY,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAI8T,cAAJ,CAAmBrV,EAAEuB,MAArB,CAAxB,CAFhB;gBAGW,IAAIvB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAI8T,cAAJ,CAAmBrV,EAAEoB,MAArB,CAAxB,CAHX;kBAIa,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAI8T,cAAJ,CAAmBrV,EAAEoB,MAArB,CAAxB;GAd+B;;KAiB5C;iBACY,IAAIkU,WAAJ;GAlBgC;;KAqB5C;gBACW,IAAIW,UAAJ,CAAeiC,aAAf,CADX;sBAEiB,IAAIlY,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,IAAI8T,cAAJ,CAAmBrV,EAAEoB,MAArB,CAAxB;;CAvBH,CAAnB;;AA2BA,IAAIiX,WAAW,IAAIrY,EAAEmB,MAAN,CAAa;UAClBnB,EAAEuB,MADgB;YAEhBvB,EAAEyB,MAFc;QAGpBzB,EAAE0B,KAHkB;mBAIT1B,EAAEuB,MAJO;SAKnB6W,YALmB;WAMjB,IAAIpY,EAAE0C,QAAN,CAAe1C,EAAE0B,KAAjB,EAAwB;WAAKa,EAAEzC,MAAF,GAAWyC,EAAEI,cAAlB;GAAxB;CANI,CAAf;;AASA,IAAI2V,eAAe,IAAItY,EAAEmB,MAAN,CAAa;eACdnB,EAAEoB,MADY;kBAEdpB,EAAEoB,MAFY;eAGdpB,EAAEuB,MAHY;gBAIdvB,EAAEuB;CAJD,CAAnB;;AAOA,IAAIgX,YAAY,IAAIvY,EAAEmB,MAAN,CAAa;gBACTnB,EAAEuB,MADO;eAETvB,EAAEuB,MAFO;mBAGTvB,EAAEuB,MAHO;cAITvB,EAAEuB,MAJO;YAKT,IAAIvB,EAAE6B,KAAN,CAAYyW,YAAZ,EAA0B,iBAA1B,CALS;aAMT,IAAItY,EAAE6B,KAAN,CAAYwW,QAAZ,EAAsB,YAAtB;CANJ,CAAhB;;AASA,WAAe,IAAIrY,EAAEmB,MAAN,CAAa;WAChBnB,EAAEoB,MADc;UAEhB,IAAIpB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CAFgB;WAGhBpB,EAAEuB,MAHc;UAIhB,IAAIvB,EAAE6B,KAAN,CAAY0W,SAAZ,EAAuB,SAAvB;CAJG,CAAf;;ACtEA,IAAIC,gBAAgB,IAAIxY,EAAEmB,MAAN,CAAa;QACzBnB,EAAEqB,KADuB;OAE1BrB,EAAEqB,KAFwB;SAGxBrB,EAAEqB,KAHsB;UAIvBrB,EAAEqB;CAJQ,CAApB;;AAOA,WAAe,IAAIrB,EAAEmB,MAAN,CAAa;WACjBnB,EAAE2F,OADe;UAElB3F,EAAEoB,MAFgB;eAGb,IAAIkU,WAAJ,CAAgBkD,aAAhB;CAHA,CAAf;;ACVA,IAAIC,SAAS,EAAb;AACA,AAEA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEAA,OAAOC,IAAP,GAAcA,IAAd;AACAD,OAAOE,IAAP,GAAcA,IAAd;AACAF,OAAOvV,IAAP,GAAcA,IAAd;AACAuV,OAAOG,IAAP,GAAcA,IAAd;AACAH,OAAOrV,IAAP,GAAcA,IAAd;AACAqV,OAAOrD,IAAP,GAAcA,SAAd;AACAqD,OAAO,MAAP,IAAiBhT,GAAjB;AACAgT,OAAOI,IAAP,GAAcA,IAAd;;;AAIA,AACA,AACA,AACA,AACA,AAEAJ,OAAOK,IAAP,GAAcA,IAAd;AACAL,OAAO7S,IAAP,GAAcA,IAAd;AACA6S,OAAOM,IAAP,GAAcA,IAAd;AACAN,OAAO,MAAP,IAAiBO,GAAjB;AACAP,OAAOQ,IAAP,GAAcA,IAAd;;;AAIA,AACA,AAEAR,OAAO,MAAP,IAAiBhN,OAAjB;AACAgN,OAAOS,IAAP,GAAcA,IAAd;;;AAIA,AACA,AACA,AACA,AAEAT,OAAOU,IAAP,GAAcA,IAAd;AACAV,OAAOW,IAAP,GAAcX,OAAOU,IAArB;AACAV,OAAOY,IAAP,GAAcA,IAAd;AACAZ,OAAOa,IAAP,GAAcA,IAAd;AACAb,OAAOc,IAAP,GAAcA,IAAd;;;AAIA,AACA,AACA,AACA,AACA,AAEAd,OAAOe,IAAP,GAAcA,IAAd;AACAf,OAAOgB,IAAP,GAAcA,IAAd;AACAhB,OAAOiB,IAAP,GAAcA,IAAd;AACAjB,OAAOkB,IAAP,GAAcA,IAAd;AACAlB,OAAOmB,IAAP,GAAcA,IAAd;;;AAIA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEAnB,OAAOoB,IAAP,GAAcA,IAAd;AACApB,OAAOqB,IAAP,GAAcA,IAAd;AACArB,OAAOsB,IAAP,GAAcA,IAAd;AACAtB,OAAOuB,IAAP,GAAcA,IAAd;AACAvB,OAAOwB,IAAP,GAAcA,IAAd;AACAxB,OAAOyB,IAAP,GAAcA,IAAd;AACAzB,OAAO0B,IAAP,GAAcA,IAAd;AACA1B,OAAOhE,IAAP,GAAcA,IAAd;AACAgE,OAAO2B,IAAP,GAAcA,IAAd;;;AAIA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEA3B,OAAO4B,IAAP,GAAcA,IAAd;AACA5B,OAAO6B,IAAP,GAAcA,IAAd;AACA7B,OAAO8B,IAAP,GAAcA,IAAd;AACA9B,OAAO+B,IAAP,GAAcA,IAAd;AACA/B,OAAOlB,IAAP,GAAcA,IAAd;AACAkB,OAAOgC,IAAP,GAAcA,IAAd;AACAhC,OAAOiC,IAAP,GAAcA,IAAd;AACAjC,OAAOkC,IAAP,GAAcA,IAAd;;AC5GA,IAAIC,aAAa,IAAI5a,EAAEmB,MAAN,CAAa;OAChB,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADgB;YAEhB9D,EAAEuB,MAFc;UAGhB,IAAIvB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,MAAxB,EAAgC,EAAEU,MAAM,QAAR,EAAhC,CAHgB;UAIhBjC,EAAEuB;CAJC,CAAjB;;AAOA,IAAIsZ,YAAY,IAAI7a,EAAEmB,MAAN,CAAa;OACX,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADW;aAEX9D,EAAEoB,MAFS;eAGXpB,EAAEoB,MAHS;iBAIXpB,EAAEoB,MAJS;cAKXpB,EAAEoB,MALS;UAMX,IAAIpB,EAAE6B,KAAN,CAAY+Y,UAAZ,EAAwB,WAAxB;CANF,CAAhB;;AASAC,UAAUzW,OAAV,GAAoB,YAAW;MACzBqU,SAAS,EAAb;uBACkB,KAAKA,MAAvB,6GAA+B;;;;;;;;;;;;QAAtBqC,KAAsB;;WACtBA,MAAMpW,GAAb,IAAoBoW,KAApB;;;OAGGrC,MAAL,GAAcA,MAAd;CANF;;AASAoC,UAAU/V,SAAV,GAAsB,UAAST,MAAT,EAAiB;MACjCoU,WAAS,EAAb;OACK,IAAI/T,GAAT,IAAgB,KAAK+T,MAArB,EAA6B;QACvBqC,QAAQ,KAAKrC,MAAL,CAAY/T,GAAZ,CAAZ;QACIoW,KAAJ,EAAW;eACF9b,IAAP,CAAY;aACL0F,GADK;kBAEA,CAFA;gBAGF,IAAI1E,EAAE+a,WAAN,CAAkBC,OAAOtW,GAAP,CAAlB,EAA+BoW,KAA/B,CAHE;gBAIFE,OAAOtW,GAAP,EAAYc,IAAZ,CAAiBsV,KAAjB;OAJV;;;;OASCpW,GAAL,GAAW,MAAX;OACKuW,SAAL,GAAiBxC,SAAO3Y,MAAxB;OACK2Y,MAAL,GAAcA,QAAd;;OAEKyC,WAAL,GAAmB7Y,KAAK8Y,KAAL,CAAW9Y,KAAK+Y,GAAL,CAAS,KAAKH,SAAd,IAA2B5Y,KAAKgZ,GAA3C,IAAkD,EAArE;OACKC,aAAL,GAAqBjZ,KAAK8Y,KAAL,CAAW,KAAKD,WAAL,GAAmB7Y,KAAKgZ,GAAnC,CAArB;OACKE,UAAL,GAAkB,KAAKN,SAAL,GAAiB,EAAjB,GAAsB,KAAKC,WAA7C;CApBF,CAuBA;;ACnDO,SAASM,YAAT,CAAsB/U,GAAtB,EAA2BgV,GAA3B,EAAgC;MACjCC,MAAM,CAAV;MACIpZ,MAAMmE,IAAI3G,MAAJ,GAAa,CAAvB;SACO4b,OAAOpZ,GAAd,EAAmB;QACbyK,MAAO2O,MAAMpZ,GAAP,IAAe,CAAzB;QACIqI,MAAM8Q,IAAIhV,IAAIsG,GAAJ,CAAJ,CAAV;;QAEIpC,MAAM,CAAV,EAAa;YACLoC,MAAM,CAAZ;KADF,MAEO,IAAIpC,MAAM,CAAV,EAAa;YACZoC,MAAM,CAAZ;KADK,MAEA;aACEA,GAAP;;;;SAIG,CAAC,CAAR;;;AAGF,AAAO,SAASnC,KAAT,CAAeT,KAAf,EAAsB3D,GAAtB,EAA2B;MAC5BoE,QAAQ,EAAZ;SACOT,QAAQ3D,GAAf,EAAoB;UACZxH,IAAN,CAAWmL,OAAX;;SAEKS,KAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBF,AACA,AACA,AACA,AAEA;AACA,IAAI;MACE+Q,QAAQjd,QAAQ,YAAR,CAAZ;CADF,CAEE,OAAOgB,GAAP,EAAY;;IAEOkc;yBACPC,SAAZ,EAAuB;;;;SAEhBC,QAAL,GAAgB,IAAhB;SACKpD,IAAL,GAAY,KAAKqD,YAAL,CAAkBF,SAAlB,EAA6B;;KAEtC,CAAD,EAAI,EAAJ,CAFuC,EAGvC,CAAC,CAAD,EAAI,CAAJ,CAHuC,EAIvC,CAAC,CAAD,EAAI,CAAJ,CAJuC;;;KAOtC,CAAD,EAAI,CAAJ,CAPuC,EAQvC,CAAC,CAAD,EAAI,CAAJ,CARuC,EASvC,CAAC,CAAD,EAAI,CAAJ,CATuC,EAUvC,CAAC,CAAD,EAAI,CAAJ,CAVuC,EAWvC,CAAC,CAAD,EAAI,CAAJ,CAXuC,EAYvC,CAAC,CAAD,EAAI,CAAJ,CAZuC,CAA7B,CAAZ;;;;QAiBI,CAAC,KAAKnD,IAAN,IAAciD,KAAlB,EAAyB;2BACNE,UAAUpD,MAA3B,6GAAmC;;;;;;;;;;;;YAA1BC,IAA0B;;YAC7BoD,WAAWxY,YAAYoV,KAAKnV,UAAjB,EAA6BmV,KAAKlV,UAAlC,EAA8CkV,KAAKoC,KAAL,CAAWtW,QAAX,GAAsB,CAApE,CAAf;YACImX,MAAMK,cAAN,CAAqBF,QAArB,CAAJ,EAAoC;eAC7BpD,IAAL,GAAYA,KAAKoC,KAAjB;eACKgB,QAAL,GAAgBA,QAAhB;;;;;QAKF,CAAC,KAAKpD,IAAV,EAAgB;YACR,IAAIvY,KAAJ,CAAU,uCAAV,CAAN;;;SAGG8b,GAAL,GAAW,KAAKF,YAAL,CAAkBF,SAAlB,EAA6B,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAA7B,CAAX;QACI,KAAKI,GAAL,IAAY,KAAKA,GAAL,CAASjX,OAAT,KAAqB,EAArC,EAAyC;WAClCiX,GAAL,GAAW,IAAX;;;;0BAIJF,qCAAaF,WAAWK,OAAO;0BACQA,KAArC,oHAA4C;;;;;;;;;;;;;UAAlC3Y,UAAkC;UAAtBC,UAAsB;;4BACzBqY,UAAUpD,MAA3B,oHAAmC;;;;;;;;;;;;YAA1BC,IAA0B;;YAC7BA,KAAKnV,UAAL,KAAoBA,UAApB,IAAkCmV,KAAKlV,UAAL,KAAoBA,UAA1D,EAAsE;iBAC7DkV,KAAKoC,KAAZ;;;;;WAKC,IAAP;;;0BAGFqB,yBAAOC,WAAWC,mBAAmB;;;QAG/B,KAAKP,QAAT,EAAmB;UACbQ,MAAMX,MAAM/U,MAAN,CAAa,sBAAqBwV,SAArB,CAAb,EAA8C,KAAKN,QAAnD,CAAV;kBACY,CAAZ;WACK,IAAIjc,IAAI,CAAb,EAAgBA,IAAIyc,IAAIxc,MAAxB,EAAgCD,GAAhC,EAAqC;oBACtBuc,aAAa,CAAd,GAAmBE,IAAIzc,CAAJ,CAA/B;;;;KAJJ,MAQO,IAAIwc,iBAAJ,EAAuB;UACxB/P,MAAM,KAAKiQ,oBAAL,CAA0BH,SAA1B,EAAqCC,iBAArC,CAAV;UACI/P,GAAJ,EAAS;eACAA,GAAP;;;;QAIAoM,OAAO,KAAKA,IAAhB;YACQA,KAAK1T,OAAb;WACO,CAAL;eACS0T,KAAK8D,OAAL,CAAahc,GAAb,CAAiB4b,SAAjB,KAA+B,CAAtC;;WAEG,CAAL;;cACMV,MAAM,CAAV;cACIpZ,MAAMoW,KAAK+D,QAAL,GAAgB,CAA1B;iBACOf,OAAOpZ,GAAd,EAAmB;gBACbyK,MAAO2O,MAAMpZ,GAAP,IAAe,CAAzB;;gBAEI8Z,YAAY1D,KAAKgE,SAAL,CAAelc,GAAf,CAAmBuM,GAAnB,CAAhB,EAAyC;oBACjCA,MAAM,CAAZ;aADF,MAEO,IAAIqP,YAAY1D,KAAKiE,OAAL,CAAanc,GAAb,CAAiBuM,GAAjB,CAAhB,EAAuC;oBACtCA,MAAM,CAAZ;aADK,MAEA;kBACD6P,cAAclE,KAAKmE,aAAL,CAAmBrc,GAAnB,CAAuBuM,GAAvB,CAAlB;kBACIT,aAAJ;;kBAEIsQ,gBAAgB,CAApB,EAAuB;uBACfR,YAAY1D,KAAKoE,OAAL,CAAatc,GAAb,CAAiBuM,GAAjB,CAAlB;eADF,MAEO;oBACD5C,QAAQyS,cAAc,CAAd,IAAmBR,YAAY1D,KAAKgE,SAAL,CAAelc,GAAf,CAAmBuM,GAAnB,CAA/B,KAA2D2L,KAAK+D,QAAL,GAAgB1P,GAA3E,CAAZ;uBACM2L,KAAKqE,eAAL,CAAqBvc,GAArB,CAAyB2J,KAAzB,KAAmC,CAAzC;oBACImC,SAAQ,CAAZ,EAAe;0BACNoM,KAAKoE,OAAL,CAAatc,GAAb,CAAiBuM,GAAjB,CAAP;;;;qBAIGT,OAAM,MAAb;;;;iBAIG,CAAP;;;WAGG,CAAL;cACQ,IAAInM,KAAJ,CAAU,qBAAV,CAAN;;WAEG,CAAL;WACK,EAAL;eACSuY,KAAKsE,YAAL,CAAkBxc,GAAlB,CAAsB4b,YAAY1D,KAAKuE,SAAvC,KAAqD,CAA5D;;WAEG,EAAL;WACK,EAAL;;cACMvB,OAAM,CAAV;cACIpZ,OAAMoW,KAAKwE,OAAL,GAAe,CAAzB;iBACOxB,QAAOpZ,IAAd,EAAmB;gBACbyK,OAAO2O,OAAMpZ,IAAP,IAAe,CAAzB;gBACI6a,QAAQzE,KAAK0E,MAAL,CAAY5c,GAAZ,CAAgBuM,IAAhB,CAAZ;;gBAEIqP,YAAYe,MAAME,aAAtB,EAAqC;qBAC7BtQ,OAAM,CAAZ;aADF,MAEO,IAAIqP,YAAYe,MAAMG,WAAtB,EAAmC;qBAClCvQ,OAAM,CAAZ;aADK,MAEA;kBACD2L,KAAK1T,OAAL,KAAiB,EAArB,EAAyB;uBAChBmY,MAAMI,OAAN,IAAiBnB,YAAYe,MAAME,aAAnC,CAAP;eADF,MAEO;uBACEF,MAAMI,OAAb;;;;;iBAKC,CAAP;;;WAGG,EAAL;cACQ,IAAIpd,KAAJ,CAAU,sBAAV,CAAN;;;cAGM,IAAIA,KAAJ,0BAAiCuY,KAAK1T,OAAtC,CAAN;;;;0BAINuX,qDAAqBH,WAAWC,mBAAmB;QAC7C,CAAC,KAAKJ,GAAV,EAAe;aACN,CAAP;;;QAGEuB,YAAY,KAAKvB,GAAL,CAASwB,YAAT,CAAsBC,OAAtB,EAAhB;QACI7d,IAAI2b,aAAagC,SAAb,EAAwB;aAAKnB,oBAAoBsB,EAAEC,WAA3B;KAAxB,CAAR;QACIC,MAAML,UAAU3d,CAAV,CAAV;;QAEIA,MAAM,CAAC,CAAP,IAAYge,IAAIC,UAApB,EAAgC;UAC1BtC,aAAaqC,IAAIC,UAAjB,EAA6B;eAC/B1B,YAAYuB,EAAEI,iBAAd,GAAkC,CAAC,CAAnC,GAAuC3B,YAAYuB,EAAEI,iBAAF,GAAsBJ,EAAEK,eAApC,GAAsD,CAAC,CAAvD,GAA2D,CADnE;OAA7B,CAAJ;;;QAKEne,MAAM,CAAC,CAAP,IAAYge,IAAII,aAApB,EAAmC;UAC7BzC,aAAaqC,IAAII,aAAjB,EAAgC;eAAK7B,YAAYuB,EAAEO,YAAnB;OAAhC,CAAJ;UACIre,MAAM,CAAC,CAAX,EAAc;eACLge,IAAII,aAAJ,CAAkBpe,CAAlB,EAAqB0d,OAA5B;;;;WAIG,CAAP;;;0BAIFY,6CAAkB;QACZzF,OAAO,KAAKA,IAAhB;YACQA,KAAK1T,OAAb;WACO,CAAL;eACS4F,MAAM,CAAN,EAAS8N,KAAK8D,OAAL,CAAa1c,MAAtB,CAAP;;WAEG,CAAL;;cACM6K,MAAM,EAAV;cACIyT,WAAW1F,KAAKiE,OAAL,CAAae,OAAb,EAAf;eACK,IAAI7d,IAAI,CAAb,EAAgBA,IAAIue,SAASte,MAA7B,EAAqCD,GAArC,EAA0C;gBACpCwe,OAAOD,SAASve,CAAT,IAAc,CAAzB;gBACI0G,QAAQmS,KAAKgE,SAAL,CAAelc,GAAf,CAAmBX,CAAnB,CAAZ;gBACIb,IAAJ,YAAY4L,MAAMrE,KAAN,EAAa8X,IAAb,CAAZ;;;iBAGK1T,GAAP;;;WAGG,CAAL;cACQ,IAAIxK,KAAJ,CAAU,qBAAV,CAAN;;WAEG,CAAL;WACK,EAAL;eACSyK,MAAM8N,KAAKuE,SAAX,EAAsBvE,KAAKuE,SAAL,GAAiBvE,KAAKsE,YAAL,CAAkBld,MAAzD,CAAP;;WAEG,EAAL;WACK,EAAL;;cACM6K,OAAM,EAAV;gCACkB+N,KAAK0E,MAAL,CAAYM,OAAZ,EAAlB,oHAAyC;;;;;;;;;;;;gBAAhCP,KAAgC;;iBACnCne,IAAJ,aAAY4L,MAAMuS,MAAME,aAAZ,EAA2BF,MAAMG,WAAN,GAAoB,CAA/C,CAAZ;;;iBAGK3S,IAAP;;;WAGG,EAAL;cACQ,IAAIxK,KAAJ,CAAU,sBAAV,CAAN;;;cAGM,IAAIA,KAAJ,0BAAiCuY,KAAK1T,OAAtC,CAAN;;;;0BAKNsZ,iDAAmBhS,KAAK;QAClBoM,OAAO,KAAKA,IAAhB;YACQA,KAAK1T,OAAb;WACO,CAAL;;cACM2F,MAAM,EAAV;eACK,IAAI9K,IAAI,CAAb,EAAgBA,IAAI,GAApB,EAAyBA,GAAzB,EAA8B;gBACxB6Y,KAAK8D,OAAL,CAAahc,GAAb,CAAiBX,CAAjB,MAAwByM,GAA5B,EAAiC;kBAC3BtN,IAAJ,CAASa,CAAT;;;;iBAIG8K,GAAP;;;WAGG,CAAL;;cACMA,QAAM,EAAV;eACK,IAAI9K,MAAI,CAAb,EAAgBA,MAAI6Y,KAAK+D,QAAzB,EAAmC5c,KAAnC,EAAwC;gBAClC2G,MAAMkS,KAAKiE,OAAL,CAAanc,GAAb,CAAiBX,GAAjB,CAAV;gBACI0G,QAAQmS,KAAKgE,SAAL,CAAelc,GAAf,CAAmBX,GAAnB,CAAZ;gBACI+c,cAAclE,KAAKmE,aAAL,CAAmBrc,GAAnB,CAAuBX,GAAvB,CAAlB;gBACI0e,QAAQ7F,KAAKoE,OAAL,CAAatc,GAAb,CAAiBX,GAAjB,CAAZ;;iBAEK,IAAI2e,IAAIjY,KAAb,EAAoBiY,KAAKhY,GAAzB,EAA8BgY,GAA9B,EAAmC;kBAC7BC,IAAI,CAAR;kBACI7B,gBAAgB,CAApB,EAAuB;oBACjB4B,IAAID,KAAR;eADF,MAEO;oBACDpU,QAAQyS,cAAc,CAAd,IAAmB4B,IAAIjY,KAAvB,KAAiCmS,KAAK+D,QAAL,GAAgB5c,GAAjD,CAAZ;oBACI6Y,KAAKqE,eAAL,CAAqBvc,GAArB,CAAyB2J,KAAzB,KAAmC,CAAvC;oBACIsU,MAAM,CAAV,EAAa;uBACNF,KAAL;;;;kBAIAE,MAAMnS,GAAV,EAAe;sBACTtN,IAAJ,CAASwf,CAAT;;;;;iBAKC7T,KAAP;;;WAGG,EAAL;;cACMA,QAAM,EAAV;gCACkB+N,KAAK0E,MAAL,CAAYM,OAAZ,EAAlB,oHAAyC;;;;;;;;;;;;gBAAhCP,KAAgC;;gBACnC7Q,OAAO6Q,MAAMI,OAAb,IAAwBjR,OAAO6Q,MAAMI,OAAN,IAAiBJ,MAAMG,WAAN,GAAoBH,MAAME,aAA3C,CAAnC,EAA8F;oBACxFre,IAAJ,CAASme,MAAME,aAAN,IAAuB/Q,MAAM6Q,MAAMI,OAAnC,CAAT;;;;iBAIG5S,KAAP;;;WAGG,EAAL;;cACMA,QAAM,EAAV;gCACkB+N,KAAK0E,MAAL,CAAYM,OAAZ,EAAlB,oHAAyC;;;;;;;;;;;;gBAAhCP,MAAgC;;gBACnC7Q,QAAQ6Q,OAAMI,OAAlB,EAA2B;oBACrBve,IAAJ,cAAY4L,MAAMuS,OAAME,aAAZ,EAA2BF,OAAMG,WAAN,GAAoB,CAA/C,CAAZ;;;;iBAIG3S,KAAP;;;;cAIM,IAAIxK,KAAJ,0BAAiCuY,KAAK1T,OAAtC,CAAN;;;;;0EA/GL5E,6KA4CAA;;IC/NkBse;yBACP/e,IAAZ,EAAkB;;;SACXqa,IAAL,GAAYra,KAAKqa,IAAjB;;;0BAGF5V,2BAAQoI,QAAQmS,WAAW;SACpB,IAAIC,aAAa,CAAtB,EAAyBA,aAAapS,OAAO1M,MAAP,GAAgB,CAAtD,EAAyD8e,YAAzD,EAAuE;UACjEC,OAAOrS,OAAOoS,UAAP,EAAmBE,EAA9B;UACIC,QAAQvS,OAAOoS,aAAa,CAApB,EAAuBE,EAAnC;gBACUF,UAAV,EAAsBI,QAAtB,IAAkC,KAAKC,UAAL,CAAgBJ,IAAhB,EAAsBE,KAAtB,CAAlC;;;;0BAIJE,iCAAWJ,MAAME,OAAO;QAClBpU,MAAM,CAAV;;yBAEkB,KAAKqP,IAAL,CAAUvB,MAA5B,6GAAoC;;;;;;;;;;;;UAA3BqC,KAA2B;;UAC9BA,MAAMoE,QAAN,CAAeC,WAAnB,EAAgC;;;;cAIxBrE,MAAM9V,OAAd;aACO,CAAL;cACM,CAAC8V,MAAMoE,QAAN,CAAeE,UAApB,EAAgC;;;;;aAK7B,CAAL;cACMtE,MAAMoE,QAAN,CAAeG,QAAf,IAA2BvE,MAAMoE,QAAN,CAAeI,SAA9C,EAAyD;;;;;;gBAMnD,IAAInf,KAAJ,wCAA+C2a,MAAM9V,OAArD,CAAN;;;UAGAC,MAAM,CAAV;UACI8B,IAAI+T,MAAMyE,QAAd;cACQzE,MAAM/b,MAAd;aACO,CAAL;cACMygB,UAAUhE,aAAazU,EAAEmV,KAAf,EAAsB,UAAUuD,IAAV,EAAgB;mBAC1CZ,OAAOY,KAAKZ,IAAb,IAAuBE,QAAQU,KAAKV,KAA3C;WADY,CAAd;;cAIIS,WAAW,CAAf,EAAkB;kBACVzY,EAAEmV,KAAF,CAAQsD,OAAR,EAAiB/e,KAAvB;;;;;aAKC,CAAL;cACMif,aAAa,CAAjB;cAAoBC,cAAc,CAAlC;cACId,QAAQ9X,EAAE+M,SAAF,CAAY+B,UAApB,IAAkCgJ,OAAO9X,EAAE+M,SAAF,CAAY+B,UAAZ,GAAyB9O,EAAE+M,SAAF,CAAY8L,OAAlF,EAA2F;yBAC5E7Y,EAAE+M,SAAF,CAAYjO,OAAZ,CAAoBgZ,OAAO9X,EAAE+M,SAAF,CAAY+B,UAAvC,CAAb;WADF,MAEO;yBACQ9O,EAAE8Y,KAAF,CAAQ9L,GAArB;;;cAGEgL,SAAShY,EAAE+Y,UAAF,CAAajK,UAAtB,IAAoCkJ,QAAQhY,EAAE+Y,UAAF,CAAajK,UAAb,GAA0B9O,EAAE+Y,UAAF,CAAaF,OAAvF,EAAgG;0BAChF7Y,EAAE+Y,UAAF,CAAaja,OAAb,CAAqBkZ,QAAQhY,EAAE+Y,UAAF,CAAajK,UAA1C,CAAd;;;cAGE1L,QAAQ,CAACuV,aAAaC,WAAb,GAA2B5Y,EAAE8Y,KAAF,CAAQ9L,GAApC,IAA2C,CAAvD;gBACMhN,EAAE8Y,KAAF,CAAQE,MAAR,CAAevf,GAAf,CAAmB2J,KAAnB,CAAN;;;aAGG,CAAL;cACM0U,QAAQ9X,EAAE6I,UAAV,IAAwBmP,SAAShY,EAAE6I,UAAvC,EAAmD;mBAC1C,CAAP;;;gBAGI7I,EAAEiZ,SAAF,CAAYjZ,EAAEkZ,SAAF,CAAYlZ,EAAEmZ,SAAF,CAAYrB,IAAZ,IAAoB9X,EAAEoN,eAAtB,GAAwCpN,EAAEoZ,UAAF,CAAapB,KAAb,CAApD,CAAZ,CAAN;;;;gBAIM,IAAI5e,KAAJ,2CAAkD2a,MAAM/b,MAAxD,CAAN;;;;;UAKA+b,MAAMoE,QAAN,CAAekB,QAAnB,EAA6B;cACrBnb,GAAN;OADF,MAEO;eACEA,GAAP;;;;WAIG0F,GAAP;;;;;;ACzFJ;;;;;;;;;IAQqB0V;+BACP1gB,IAAZ,EAAkB;;;SACXA,IAAL,GAAYA,IAAZ;;;gCAGF2gB,yCAAe9T,QAAQmS,WAAW;;QAE5B4B,eAAe,CAAnB;QACIC,aAAa,CAAjB;SACK,IAAIrW,QAAQ,CAAjB,EAAoBA,QAAQqC,OAAO1M,MAAnC,EAA2CqK,OAA3C,EAAoD;UAC9CgC,QAAQK,OAAOrC,KAAP,CAAZ;UACIgC,MAAMsU,MAAV,EAAkB;;qBACHtW,KAAb;OADF,MAEO;YACDoW,iBAAiBC,UAArB,EAAiC;eAC1BE,eAAL,CAAqBlU,MAArB,EAA6BmS,SAA7B,EAAwC4B,YAAxC,EAAsDC,UAAtD;;;uBAGaA,aAAarW,KAA5B;;;;QAIAoW,iBAAiBC,UAArB,EAAiC;WAC1BE,eAAL,CAAqBlU,MAArB,EAA6BmS,SAA7B,EAAwC4B,YAAxC,EAAsDC,UAAtD;;;WAGK7B,SAAP;;;gCAGF+B,2CAAgBlU,QAAQmS,WAAW4B,cAAcC,YAAY;QACvDzL,OAAOvI,OAAO+T,YAAP,CAAX;QACII,UAAU5L,KAAK6L,IAAL,CAAUC,IAAV,EAAd;;;QAGI9L,KAAK+L,UAAL,CAAgBhhB,MAAhB,GAAyB,CAA7B,EAAgC;;cAEtBihB,IAAR,IAAiB,CAAChM,KAAK+L,UAAL,CAAgBhhB,MAAhB,GAAyB,CAA1B,IAA+B6gB,QAAQK,KAAxC,GAAiDjM,KAAK+L,UAAL,CAAgBhhB,MAAjF;;;QAGEmhB,UAAU,CAACtC,UAAU4B,YAAV,EAAwBvB,QAAvC;QACIkC,UAAU,CAAd;QACIC,OAAO,KAAKxhB,IAAL,CAAUyhB,UAAV,GAAuB,EAAlC;;;SAGK,IAAIjX,QAAQoW,eAAe,CAAhC,EAAmCpW,SAASqW,UAA5C,EAAwDrW,OAAxD,EAAiE;UAC3DkX,OAAO7U,OAAOrC,KAAP,CAAX;UACImX,UAAUD,KAAKT,IAAnB;UACIW,WAAW5C,UAAUxU,KAAV,CAAf;;UAEIqX,iBAAiB,KAAKC,iBAAL,CAAuBJ,KAAKP,UAAL,CAAgB,CAAhB,CAAvB,CAArB;;UAEIU,mBAAmB,eAAvB,EAAwC;iBAC7BP,OAAT,GAAmBM,SAASL,OAAT,GAAmB,CAAtC;;;gBAGQM,cAAR;eACO,cAAL;eACK,cAAL;;qBAEWP,OAAT,IAAoBN,QAAQI,IAAR,GAAeO,QAAQN,KAAR,GAAgB,CAA/B,GAAmCM,QAAQP,IAA/D;;;eAGG,qBAAL;eACK,YAAL;eACK,YAAL;;qBAEWE,OAAT,IAAoBN,QAAQI,IAAR,GAAeO,QAAQP,IAA3C;;;eAGG,sBAAL;eACK,aAAL;eACK,aAAL;;qBAEWE,OAAT,IAAoBN,QAAQe,IAAR,GAAeJ,QAAQN,KAAvB,GAA+BM,QAAQP,IAA3D;;;;;;qBAKSE,OAAT,IAAoBN,QAAQI,IAAR,GAAe,CAACJ,QAAQK,KAAR,GAAgBM,QAAQN,KAAzB,IAAkC,CAAjD,GAAqDM,QAAQP,IAAjF;;;;gBAIIS,cAAR;eACO,cAAL;eACK,YAAL;eACK,OAAL;eACK,aAAL;eACK,qBAAL;eACK,gBAAL;;gBAEMA,mBAAmB,qBAAnB,IAA4CA,mBAAmB,gBAAnE,EAAqF;sBAC3EG,IAAR,IAAgBR,IAAhB;;;qBAGOD,OAAT,GAAmB,CAACP,QAAQgB,IAAT,GAAgBL,QAAQM,IAA3C;oBACQD,IAAR,IAAgBL,QAAQO,MAAxB;;;eAGG,cAAL;eACK,YAAL;eACK,OAAL;eACK,aAAL;eACK,gBAAL;eACK,sBAAL;;gBAEML,mBAAmB,gBAAnB,IAAuCA,mBAAmB,sBAA9D,EAAsF;sBAC5EI,IAAR,IAAgBT,IAAhB;;;qBAGOD,OAAT,GAAmBP,QAAQiB,IAAR,GAAeN,QAAQK,IAA1C;oBACQC,IAAR,IAAgBN,QAAQO,MAAxB;;;;iBAIK7C,QAAT,GAAoBuC,SAASO,QAAT,GAAoB,CAAxC;iBACSb,OAAT,IAAoBA,OAApB;iBACSC,OAAT,IAAoBA,OAApB;OAjEF,MAmEO;mBACMK,SAASvC,QAApB;mBACWuC,SAASO,QAApB;;;;;;;gCAONL,+CAAkBM,WAAW;QACvBP,iBAAiBQ,QAAQP,iBAAR,CAA0BM,SAA1B,CAArB;;;QAGI,CAACA,YAAY,CAAC,IAAd,MAAwB,MAA5B,EAAoC;UAC9BP,mBAAmB,eAAvB,EAAwC;gBAC9BO,SAAR;eACO,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;mBACS,aAAP;;eAEG,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;eACK,MAAL;mBACS,OAAP;;eAEG,MAAL;mBACS,OAAP;;OAxBN,MA0BO,IAAIA,cAAc,MAAlB,EAA0B;;eACxB,aAAP;;;;YAIIP,cAAR;;;WAGO,OAAL,CAHF;WAIO,OAAL,CAJF;WAKO,OAAL,CALF;WAMO,OAAL,CANF;WAOO,OAAL,CAPF;WAQO,OAAL,CARF;WASO,OAAL,CATF;WAUO,OAAL,CAVF;WAWO,OAAL,CAXF;WAYO,OAAL,CAZF;WAaO,OAAL;;eACS,OAAP;;WAEG,OAAL;;eACS,gBAAP;;WAEG,OAAL;;eACS,aAAP;;WAEG,OAAL,CAtBF;WAuBO,OAAL;;eACS,YAAP;;WAEG,OAAL;;eACS,OAAP;;WAEG,OAAL;;;;;;WAKK,OAAL,CAlCF;WAmCO,OAAL,CAnCF;WAoCO,OAAL,CApCF;WAqCO,OAAL,CArCF;WAsCO,OAAL,CAtCF;WAuCO,OAAL,CAvCF;WAwCO,OAAL,CAxCF;WAyCO,OAAL;;eACS,OAAP;;WAEG,OAAL,CA5CF;WA6CO,OAAL;;eACS,OAAP;;;;WAIG,QAAL;;eACS,aAAP;;WAEG,QAAL;;eACS,aAAP;;;;WAIG,QAAL;;eACS,OAAP;;WAEG,QAAL;;eACS,OAAP;;;;WAIG,QAAL,CAlEF;WAmEO,QAAL;;eACS,OAAP;;WAEG,QAAL;;eACS,OAAP;;;WAGGA,cAAP;;;;;;ACvPJ;;;IAGqBS;kBAC+D;QAAtElB,IAAsE,uEAA/DmB,QAA+D;QAArDP,IAAqD,uEAA9CO,QAA8C;QAApCR,IAAoC,uEAA7B,CAACQ,QAA4B;QAAlBN,IAAkB,uEAAX,CAACM,QAAU;;;;;;;;SAK3EnB,IAAL,GAAYA,IAAZ;;;;;;SAMKY,IAAL,GAAYA,IAAZ;;;;;;SAMKD,IAAL,GAAYA,IAAZ;;;;;;SAMKE,IAAL,GAAYA,IAAZ;;;;;;;;;iBAmBFO,6BAASxE,GAAGyE,GAAG;QACTzE,IAAI,KAAKoD,IAAb,EAAmB;WACZA,IAAL,GAAYpD,CAAZ;;;QAGEyE,IAAI,KAAKT,IAAb,EAAmB;WACZA,IAAL,GAAYS,CAAZ;;;QAGEzE,IAAI,KAAK+D,IAAb,EAAmB;WACZA,IAAL,GAAY/D,CAAZ;;;QAGEyE,IAAI,KAAKR,IAAb,EAAmB;WACZA,IAAL,GAAYQ,CAAZ;;;;iBAIJvB,uBAAO;WACE,IAAIoB,IAAJ,CAAS,KAAKlB,IAAd,EAAoB,KAAKY,IAAzB,EAA+B,KAAKD,IAApC,EAA0C,KAAKE,IAA/C,CAAP;;;;;wBA/BU;aACH,KAAKF,IAAL,GAAY,KAAKX,IAAxB;;;;;;;;;;wBAOW;aACJ,KAAKa,IAAL,GAAY,KAAKD,IAAxB;;;;;;;ACzCJ;;;;;IAIqBU;oBACP7V,MAAZ,EAAoBmS,SAApB,EAA+B;;;;;;;SAKxBnS,MAAL,GAAcA,MAAd;;;;;;SAMKmS,SAAL,GAAiBA,SAAjB;;;;;;;;;;;wBAOiB;UACbqC,QAAQ,CAAZ;2BACqB,KAAKrC,SAA1B,6GAAqC;;;;;;;;;;;;YAA5B4C,QAA4B;;iBAC1BA,SAASvC,QAAlB;;;aAGKgC,KAAP;;;;;;;;;;wBAOkB;UACda,SAAS,CAAb;4BACqB,KAAKlD,SAA1B,oHAAqC;;;;;;;;;;;;YAA5B4C,QAA4B;;kBACzBA,SAASO,QAAnB;;;aAGKD,MAAP;;;;;;;;;;wBAOS;UACLS,OAAO,IAAIL,IAAJ,EAAX;;UAEItE,IAAI,CAAR;UACIyE,IAAI,CAAR;WACK,IAAIjY,QAAQ,CAAjB,EAAoBA,QAAQ,KAAKqC,MAAL,CAAY1M,MAAxC,EAAgDqK,OAAhD,EAAyD;YACnDgC,QAAQ,KAAKK,MAAL,CAAYrC,KAAZ,CAAZ;YACIoY,IAAI,KAAK5D,SAAL,CAAexU,KAAf,CAAR;YACI3C,IAAI2E,MAAMmW,IAAd;;aAEKH,QAAL,CAAc3a,EAAEuZ,IAAF,GAASpD,CAAT,GAAa4E,EAAEtB,OAA7B,EAAsCzZ,EAAEma,IAAF,GAASS,CAAT,GAAaG,EAAErB,OAArD;aACKiB,QAAL,CAAc3a,EAAEka,IAAF,GAAS/D,CAAT,GAAa4E,EAAEtB,OAA7B,EAAsCzZ,EAAEoa,IAAF,GAASQ,CAAT,GAAaG,EAAErB,OAArD;;aAEKqB,EAAEvD,QAAP;aACKuD,EAAET,QAAP;;;aAGKQ,IAAP;;;;;;;ACpEJ;;;IAGqBE,gBACnB,yBAAkE;MAAtDxD,QAAsD,uEAA3C,CAA2C;MAAxC8C,QAAwC,uEAA7B,CAA6B;MAA1Bb,OAA0B,uEAAhB,CAAgB;MAAbC,OAAa,uEAAH,CAAG;;;;;;;;OAK3DlC,QAAL,GAAgBA,QAAhB;;;;;;OAMK8C,QAAL,GAAgBA,QAAhB;;;;;;OAMKb,OAAL,GAAeA,OAAf;;;;;;OAMKC,OAAL,GAAeA,OAAf;;;ACzBJ;;;AAGA,IAAMuB,kBAAkB;sBACF,MADE;UAEd,MAFc;oBAGJ,MAHI;YAIZ,MAJY;WAKb,MALa;YAMZ,MANY;SAOf,MAPe;aAQX,MARW;SASf,MATe;WAUb,CAAC,MAAD,EAAS,MAAT,CAVa;YAWZ,MAXY;UAYd,MAZc;WAab,MAba;YAcZ,MAdY;SAef,MAfe;UAgBd,MAhBc;uBAiBD,MAjBC;UAkBd,MAlBc;QAmBhB,MAnBgB;YAoBZ,MApBY;UAqBd,MArBc;WAsBb,MAtBa;YAuBZ,MAvBY;cAwBV,CAAC,MAAD,EAAS,MAAT,CAxBU;WAyBb,MAzBa;YA0BZ,MA1BY;wBA2BA,MA3BA;WA4Bb,MA5Ba;YA6BZ,MA7BY;YA8BZ,MA9BY;cA+BV,MA/BU;UAgCd,MAhCc;WAiCb,MAjCa;SAkCf,MAlCe;YAmCZ,CAAC,MAAD,EAAS,MAAT,CAnCY;YAoCZ,CAAC,MAAD,EAAS,MAAT,CApCY;UAqCd,MArCc;OAsCjB,MAtCiB;WAuCb,MAvCa;UAwCd,MAxCc;YAyCZ,MAzCY;gBA0CR,MA1CQ;wBA2CA,MA3CA;cA4CV,MA5CU;YA6CZ,MA7CY;YA8CZ,MA9CY;YA+CZ,MA/CY;cAgDV,MAhDU;SAiDf,MAjDe;UAkDd,MAlDc;WAmDb,CAAC,MAAD,EAAS,MAAT,CAnDa;UAoDd,MApDc;YAqDZ,MArDY;OAsDjB,MAtDiB;SAuDf,MAvDe;UAwDd,MAxDc;SAyDf,MAzDe;YA0DZ,MA1DY;YA2DZ,MA3DY;QA4DhB,MA5DgB;UA6Dd,MA7Dc;UA8Dd,MA9Dc;YA+DZ,MA/DY;WAgEb,MAhEa;cAiEV,MAjEU;iBAkEP,MAlEO;oBAmEJ,MAnEI;wBAoEA,MApEA;aAqEX,CAAC,MAAD,EAAS,MAAT,CArEW;QAsEhB,MAtEgB;aAuEX,MAvEW;OAwEjB,MAxEiB;gBAyER,MAzEQ;WA0Eb,CAAC,MAAD,EAAS,MAAT,CA1Ea;qBA2EH,MA3EG;aA4EX,MA5EW;OA6EjB,MA7EiB;SA8Ef,MA9Ee;YA+EZ,MA/EY;cAgFV,MAhFU;SAiFf,MAjFe;WAkFb,MAlFa;aAmFX,MAnFW;eAoFT,MApFS;cAqFV,MArFU;YAsFZ,MAtFY;yBAuFC,MAvFD;mBAwFL,MAxFK;cAyFV,MAzFU;QA0FhB,MA1FgB;0BA2FE,MA3FF;UA4Fd,MA5Fc;SA6Ff,MA7Fe;aA8FX,MA9FW;qBA+FH,MA/FG;cAgGV,MAhGU;WAiGb,MAjGa;WAkGb,MAlGa;WAmGb,MAnGa;aAoGX,MApGW;WAqGb,MArGa;gBAsGR,MAtGQ;aAuGX,MAvGW;gBAwGR,MAxGQ;UAyGd,MAzGc;YA0GZ,MA1GY;SA2Gf,MA3Ge;UA4Gd,MA5Gc;eA6GT,MA7GS;SA8Gf,MA9Ge;YA+GZ,MA/GY;UAgHd,CAAC,MAAD,EAAS,MAAT,CAhHc;YAiHZ,MAjHY;WAkHb,MAlHa;UAmHd,MAnHc;QAoHhB,MApHgB;WAqHb,MArHa;WAsHb,MAtHa;YAuHZ,MAvHY;OAwHjB,MAxHiB;eAyHT,MAzHS;eA0HT,MA1HS;aA2HX,MA3HW;MA4HlB,MA5HkB;aA6HX,MA7HW;UA8Hd,MA9Hc;WA+Hb;CA/HX;;AAkIA,AAIA,AAAO,SAASC,SAAT,CAAmB7d,MAAnB,EAA2B;MAC5BoE,MAAMpE,OAAO/E,MAAjB;MACI6iB,MAAM,CAAV;SACOA,MAAM1Z,GAAb,EAAkB;QACZ2Z,OAAO/d,OAAOge,UAAP,CAAkBF,KAAlB,CAAX;;;QAGI,UAAUC,IAAV,IAAkBA,QAAQ,MAA1B,IAAoCD,MAAM1Z,GAA9C,EAAmD;UAC7C6Z,OAAOje,OAAOge,UAAP,CAAkBF,GAAlB,CAAX;;;UAGI,UAAUG,IAAV,IAAkBA,QAAQ,MAA9B,EAAsC;;eAE7B,CAAC,CAACF,OAAO,KAAR,KAAkB,EAAnB,KAA0BE,OAAO,KAAjC,IAA0C,OAAjD;;;;QAIAC,SAASf,QAAQgB,SAAR,CAAkBJ,IAAlB,CAAb;QACIG,WAAW,QAAX,IAAuBA,WAAW,WAAlC,IAAiDA,WAAW,SAAhE,EAA2E;aAClEN,gBAAgBM,MAAhB,CAAP;;;;SAIGN,gBAAgBQ,OAAvB;;;AAGF,AAAO,SAASC,aAAT,CAAuBpC,UAAvB,EAAmC;OACnC,IAAIjhB,IAAI,CAAb,EAAgBA,IAAIihB,WAAWhhB,MAA/B,EAAuCD,GAAvC,EAA4C;QACtCkiB,YAAYjB,WAAWjhB,CAAX,CAAhB;QACIkjB,SAASf,QAAQgB,SAAR,CAAkBjB,SAAlB,CAAb;QACIgB,WAAW,QAAX,IAAuBA,WAAW,WAAlC,IAAiDA,WAAW,SAAhE,EAA2E;aAClEN,gBAAgBM,MAAhB,CAAP;;;;SAIGN,gBAAgBQ,OAAvB;;;;AAIF,IAAME,MAAM;QACJ,IADI;QAEJ,IAFI;QAGJ,IAHI;QAIJ,IAJI;QAKJ,IALI;QAMJ,IANI;QAOJ,IAPI;UAQF,IARE;QASJ,IATI;QAUJ,IAVI;QAWJ,IAXI;QAYJ,IAZI;QAaJ,IAbI;QAcJ,IAdI;QAeJ,IAfI;QAgBJ,IAhBI;QAiBJ,IAjBI;QAkBJ,IAlBI;QAmBJ,IAnBI;;;QAsBJ,IAtBI;QAuBJ,IAvBI;QAwBJ,IAxBI;QAyBJ,IAzBI;QA0BJ,IA1BI;QA2BJ,IA3BI;CAAZ;;AA8BA,AAAO,SAASC,SAAT,CAAmBL,MAAnB,EAA2B;MAC5BI,IAAIJ,MAAJ,CAAJ,EAAiB;WACR,KAAP;;;SAGK,KAAP;;;ACrNF;;AAEA,IAAMM,WAAW;0BACS;UAChB,CADgB;eAEX,KAFW;qBAGL;GAJJ;aAMJ;UACH,CADG;eAEE,KAFF;uBAGU,CAHV;qBAIQ,CAJR;mBAKM,CALN;;mBAOM,CAPN;wBAQW,EARX;sBASS,EATT;4BAUe,EAVf;qBAWQ,EAXR;yBAYY,EAZZ;yBAaY;GAnBR;qBAqBI;UACX,CADW;eAEN,IAFM;iBAGJ,CAHI;wBAIG,CAJH;aAKR;GA1BI;cA4BH;UACJ,CADI;eAEC;GA9BE;;;;;;;wBAsCO;UACd,CADc;eAET,KAFS;6BAGK;GAzCZ;2BA2CU;UACjB,CADiB;eAEZ,KAFY;6BAGE;GA9CZ;iBAgDA;UACP,CADO;eAEF,IAFE;uBAGM,CAHN;yBAIQ,CAJR;uBAKM,CALN;yBAMQ;GAtDR;cAwDH;UACJ,CADI;eAEC,KAFD;wBAGU,CAHV;sBAIQ,CAJR;;;qBAOO;GA/DJ;cAiEH;UACJ,CADI;eAEC,IAFD;oBAGM,CAHN;oBAIM,CAJN;yBAKW;GAtER;oBAwEG;UACV,EADU;eAEL,IAFK;oBAGA,CAHA;eAIL,CAJK;eAKL,CALK;cAMN,CANM;yBAOK;GA/ER;aAiFJ;UACH,EADG;eAEE,IAFF;iBAGI,CAHJ;uBAIU,CAJV;uBAKU;GAtFN;yBAwFQ;UACf,EADe;eAEV,KAFU;oBAGL;GA3FH;qBA6FI;UACX,EADW;eAEN,KAFM;;;iBAKJ;GAlGA;;;;sBAuGK;UACZ,EADY;eAEP,KAFO;;;;;;uBAQC;GA/GN;gBAiHD;UACN,EADM;eAED,IAFC;iBAGC,CAHD;cAIF,CAJE;kBAKE,CALF;cAMF,CANE;uBAOO,CAPP;0BAQU,CARV;iBASC;GA1HA;yBA4HQ;UACf,EADe;eAEV,IAFU;kBAGP;GA/HD;;oBAkIG;UACV,EADU;eAEL,IAFK;kBAGF,CAHE;kBAIF,CAJE;kBAKF,CALE;kBAMF,CANE;kBAOF;GAzID;gBA2ID;UACN,EADM;eAED,IAFC;oBAGI,CAHJ;iBAIC,CAJD;kBAKE,CALF;qBAMK,CANL;iBAOC,CAPD;cAQF;GAnJG;kBAqJC;UACR,EADQ;eAEH,IAFG;2BAGS,CAHT;0BAIQ,CAJR;uBAKK,CALL;uBAMK,CANL;uBAOK,CAPL;uBAQK,CARL;uBASK,CATL;yBAUO,CAVP;wBAWM,CAXN;wBAYM,CAZN;sBAaI,EAbJ;uBAcK,EAdL;oBAeE,EAfF;mBAgBC,EAhBD;gCAiBc;GAtKf;cAwKH;UACJ,EADI;eAEC,IAFD;sBAGQ,CAHR;sBAIQ;GA5KL;eA8KF;UACL,EADK;eAEA,IAFA;sBAGO,CAHP;oBAIK,CAJL;mBAKI,CALJ;oBAMK,CANL;sBAOO,CAPP;yBAQU,CARV;sBASO;GAvLL;mBAyLE;UACT,EADS;eAEJ,IAFI;uBAGI;GA5LN;;;;;;;;;;cAuMH;UACJ,EADI;eAEC,IAFD;kBAGI,CAHJ;mBAIK,CAJL;0BAKY,CALZ;sBAMQ,CANR;8BAOgB,CAPhB;2BAQa,CARb;sBASQ,CATR;4BAUc,CAVd;uBAWS,CAXT;2BAYa,CAZb;kCAaoB;GApNjB;eAsNF;UACL,EADK;eAEA,IAFA;mBAGI,CAHJ;sBAIO;GA1NL;sBA4NK;UACZ,EADY;eAEP,IAFO;yBAGG,CAHH;4BAIM,CAJN;yBAKG;GAjOR;wBAmOO;UACd,EADc;eAET,KAFS;0BAGE,CAHF;8BAIM,CAJN;4BAKI;GAxOX;YA0OL;UACF,EADE;eAEG,KAFH;;;cAKE;GA/OG;yBAiPQ;UACf,EADe;eAEV,IAFU;6BAGI,CAHJ;qBAIJ,CAJI;qBAKJ,CALI;uBAMF,CANE;sBAOH,CAPG;sBAQH;GAzPL;2BA2PU;UACjB,EADiB;eAEZ,IAFY;+BAGI,CAHJ;uBAIJ,CAJI;uBAKJ,CALI;yBAMF,CANE;wBAOH,CAPG;wBAQH;GAnQP;6BAqQY;UACnB,EADmB;eAEd,IAFc;8BAGC,CAHD;+BAIE;GAzQd;kBA2QC;UACR,EADQ;eAEH,KAFG;;;oBAKE;GAhRH;uBAkRM;UACb,EADa;eAER,KAFQ;yBAGE,CAHF;0BAIG;GAtRT;iBAwRA;UACP,EADO;eAEF,KAFE;wBAGO,CAHP;uBAIM;GA5RN;yBA8RQ;UACf,EADe;eAEV,KAFU;2BAGE,CAHF;qBAIJ,CAJI;qBAKJ,CALI;uBAMF,CANE;sBAOH,CAPG;sBAQH,EARG;qBASJ,EATI;uBAUF,EAVE;uBAWF,EAXE;sBAYH,EAZG;qBAaJ,EAbI;wBAcD,EAdC;wBAeD,EAfC;0BAgBC,EAhBD;0BAiBC,EAjBD;yBAkBA,EAlBA;yBAmBA,EAnBA;2BAoBE,EApBF;0BAqBC,EArBD;0BAsBC,EAtBD;wBAuBD;GArTP;wBAuTO;UACd,EADc;eAET,KAFS;0BAGE,CAHF;qBAIH,CAJG;+BAKO;GA5Td;aA8TJ;UACH,EADG;eAEE,IAFF;sBAGS,CAHT;wBAIW,CAJX;yBAKY;GAnUR;aAqUJ;UACH,EADG;eAEE,IAFF;sBAGS,CAHT;wBAIW,CAJX;yBAKY;GA1UR;eA4UF;UACL,EADK;eAEA;GA9UE;mBAgVE;UACT,GADS;eAEJ,IAFI;uBAGI,CAHJ;0BAIO,CAJP;qBAKE,CALF;uBAMI;;CAtVvB;;AA0VA,IAAMC,UAAU,SAAVA,OAAU,CAAClO,IAAD,EAAOmO,QAAP;SAAoB,CAACF,SAASjO,IAAT,EAAewN,IAAhB,EAAsBS,SAASjO,IAAT,EAAemO,QAAf,CAAtB,CAApB;CAAhB;;AAEA,IAAMC,YAAY;QACVF,QAAQ,WAAR,EAAqB,mBAArB,CADU;QAEVA,QAAQ,WAAR,EAAqB,qBAArB,CAFU;QAGVA,QAAQ,WAAR,EAAqB,eAArB,CAHU;QAIVA,QAAQ,WAAR,EAAqB,qBAArB,CAJU;QAKVA,QAAQ,WAAR,EAAqB,iBAArB,CALU;QAMVA,QAAQ,WAAR,EAAqB,qBAArB,CANU;;QAQVA,QAAQ,WAAR,EAAqB,oBAArB,CARU;QASVA,QAAQ,WAAR,EAAqB,qBAArB,CATU;;QAWVA,QAAQ,WAAR,EAAqB,mBAArB,CAXU;QAYVA,QAAQ,WAAR,EAAqB,mBAArB,CAZU;QAaVA,QAAQ,WAAR,EAAqB,mBAArB,CAbU;QAcVA,QAAQ,WAAR,EAAqB,mBAArB,CAdU;;;;;;;;;;;QAyBVA,QAAQ,qBAAR,EAA+B,qBAA/B,CAzBU;QA0BVA,QAAQ,sBAAR,EAAgC,sBAAhC,CA1BU;QA2BVA,QAAQ,2BAAR,EAAqC,0BAArC,CA3BU;QA4BVA,QAAQ,2BAAR,EAAqC,0BAArC,CA5BU;QA6BVA,QAAQ,sBAAR,EAAgC,iBAAhC,CA7BU;QA8BVA,QAAQ,sBAAR,EAAgC,2BAAhC,CA9BU;QA+BVA,QAAQ,mBAAR,EAA6B,SAA7B,CA/BU;QAgCVA,QAAQ,WAAR,EAAqB,qBAArB,CAhCU;QAiCVA,QAAQ,WAAR,EAAqB,oBAArB,CAjCU;;QAmCVA,QAAQ,YAAR,EAAsB,oBAAtB,CAnCU;QAoCVA,QAAQ,YAAR,EAAsB,kBAAtB,CApCU;QAqCVA,QAAQ,YAAR,EAAsB,iBAAtB,CArCU;QAsCVA,QAAQ,YAAR,EAAsB,iBAAtB,CAtCU;QAuCVA,QAAQ,YAAR,EAAsB,kBAAtB,CAvCU;QAwCVA,QAAQ,YAAR,EAAsB,kBAAtB,CAxCU;;QA0CVA,QAAQ,aAAR,EAAuB,kBAAvB,CA1CU;QA2CVA,QAAQ,aAAR,EAAuB,eAAvB,CA3CU;QA4CVA,QAAQ,aAAR,EAAuB,kBAAvB,CA5CU;;QA8CVA,QAAQ,eAAR,EAAyB,oBAAzB,CA9CU;QA+CVA,QAAQ,eAAR,EAAyB,mBAAzB,CA/CU;;;QAkDVA,QAAQ,gBAAR,EAA0B,gBAA1B,CAlDU;QAmDVA,QAAQ,YAAR,EAAsB,kBAAtB,CAnDU;QAoDVA,QAAQ,YAAR,EAAsB,kBAAtB,CApDU;QAqDVA,QAAQ,oBAAR,EAA8B,mBAA9B,CArDU;;;;;QA0DVA,QAAQ,sBAAR,EAAgC,sBAAhC,CA1DU;QA2DVA,QAAQ,sBAAR,EAAgC,yBAAhC,CA3DU;QA4DVA,QAAQ,sBAAR,EAAgC,yBAAhC,CA5DU;QA6DVA,QAAQ,eAAR,EAAyB,mBAAzB,CA7DU;QA8DVA,QAAQ,eAAR,EAAyB,qBAAzB,CA9DU;QA+DVA,QAAQ,kBAAR,EAA4B,WAA5B,CA/DU;QAgEVA,QAAQ,kBAAR,EAA4B,WAA5B,CAhEU;QAiEVA,QAAQ,kBAAR,EAA4B,UAA5B,CAjEU;QAkEVA,QAAQ,aAAR,EAAuB,kBAAvB,CAlEU;QAmEVA,QAAQ,aAAR,EAAuB,eAAvB,CAnEU;QAoEVA,QAAQ,aAAR,EAAuB,kBAAvB,CApEU;QAqEVA,QAAQ,aAAR,EAAuB,gBAAvB,CArEU;QAsEVA,QAAQ,aAAR,EAAuB,kBAAvB,CAtEU;QAuEVA,QAAQ,aAAR,EAAuB,qBAAvB,CAvEU;QAwEVA,QAAQ,gBAAR,EAA0B,uBAA1B,CAxEU;QAyEVA,QAAQ,gBAAR,EAA0B,sBAA1B,CAzEU;QA0EVA,QAAQ,gBAAR,EAA0B,mBAA1B,CA1EU;QA2EVA,QAAQ,gBAAR,EAA0B,mBAA1B,CA3EU;QA4EVA,QAAQ,gBAAR,EAA0B,mBAA1B,CA5EU;QA6EVA,QAAQ,gBAAR,EAA0B,mBAA1B,CA7EU;QA8EVA,QAAQ,gBAAR,EAA0B,kBAA1B,CA9EU;QA+EVA,QAAQ,gBAAR,EAA0B,gBAA1B,CA/EU;QAgFVA,QAAQ,gBAAR,EAA0B,eAA1B,CAhFU;QAiFVA,QAAQ,gBAAR,EAA0B,4BAA1B,CAjFU;QAkFVA,QAAQ,UAAR,EAAoB,UAApB,CAlFU;QAmFVA,QAAQ,cAAR,EAAwB,aAAxB,CAnFU;QAoFVA,QAAQ,mBAAR,EAA6B,aAA7B,CApFU;;QAsFVA,QAAQ,uBAAR,EAAiC,iBAAjC,CAtFU;QAuFVA,QAAQ,uBAAR,EAAiC,iBAAjC,CAvFU;QAwFVA,QAAQ,uBAAR,EAAiC,mBAAjC,CAxFU;QAyFVA,QAAQ,uBAAR,EAAiC,kBAAjC,CAzFU;QA0FVA,QAAQ,uBAAR,EAAiC,kBAAjC,CA1FU;QA2FVA,QAAQ,uBAAR,EAAiC,iBAAjC,CA3FU;QA4FVA,QAAQ,uBAAR,EAAiC,mBAAjC,CA5FU;QA6FVA,QAAQ,uBAAR,EAAiC,mBAAjC,CA7FU;QA8FVA,QAAQ,uBAAR,EAAiC,kBAAjC,CA9FU;QA+FVA,QAAQ,uBAAR,EAAiC,iBAAjC,CA/FU;QAgGVA,QAAQ,uBAAR,EAAiC,oBAAjC,CAhGU;QAiGVA,QAAQ,uBAAR,EAAiC,oBAAjC,CAjGU;QAkGVA,QAAQ,uBAAR,EAAiC,sBAAjC,CAlGU;QAmGVA,QAAQ,uBAAR,EAAiC,sBAAjC,CAnGU;QAoGVA,QAAQ,uBAAR,EAAiC,qBAAjC,CApGU;QAqGVA,QAAQ,uBAAR,EAAiC,qBAAjC,CArGU;QAsGVA,QAAQ,uBAAR,EAAiC,uBAAjC,CAtGU;QAuGVA,QAAQ,uBAAR,EAAiC,sBAAjC,CAvGU;QAwGVA,QAAQ,uBAAR,EAAiC,sBAAjC,CAxGU;QAyGVA,QAAQ,uBAAR,EAAiC,oBAAjC;CAzGR;;;;;AA+GA,KAAK,IAAIzjB,IAAI,CAAb,EAAgBA,KAAK,EAArB,EAAyBA,GAAzB,EAA8B;mBACb,QAAKA,CAAL,EAAS4jB,KAAT,CAAe,CAAC,CAAhB,CAAf,IAAuC,CAACJ,SAASK,qBAAT,CAA+Bd,IAAhC,EAAsC/iB,CAAtC,CAAvC;;;;AAIF,IAAI8jB,aAAa,EAAjB;AACA,KAAK,IAAIC,EAAT,IAAeJ,SAAf,EAA0B;MACpBK,MAAML,UAAUI,EAAV,CAAV;MACID,WAAWE,IAAI,CAAJ,CAAX,KAAsB,IAA1B,EAAgC;eACnBA,IAAI,CAAJ,CAAX,IAAqB,EAArB;;;aAGSA,IAAI,CAAJ,CAAX,EAAmBA,IAAI,CAAJ,CAAnB,IAA6BD,EAA7B;;;;;AAKF,AAAO,SAASE,UAAT,CAAoBT,QAApB,EAA8B;MAC/B1Y,MAAM,EAAV;OACK,IAAIzB,IAAI,CAAb,EAAgBA,IAAIma,SAASvjB,MAA7B,EAAqCoJ,GAArC,EAA0C;QACpClJ,UAAJ;QACIA,IAAIwjB,UAAUH,SAASna,CAAT,CAAV,CAAR,EAAgC;UAC1ByB,IAAI3K,EAAE,CAAF,CAAJ,KAAa,IAAjB,EAAuB;YACjBA,EAAE,CAAF,CAAJ,IAAY,EAAZ;;;UAGEA,EAAE,CAAF,CAAJ,EAAUA,EAAE,CAAF,CAAV,IAAkB,IAAlB;;;;SAIG2K,GAAP;;;;;AAKF,SAASoZ,iBAAT,CAA2BC,CAA3B,EAA8B;MACvB/hB,IADuB,GACN+hB,CADM;MACjBC,OADiB,GACND,CADM;;MAExBE,MAAMjiB,IAAN,CAAJ,EAAiB;QACXkiB,WAAWd,SAASphB,IAAT,KAAkBohB,SAASphB,IAAT,EAAe2gB,IAAhD;GADF,MAEO;QACDuB,WAAWliB,IAAf;;;MAGEiiB,MAAMD,OAAN,CAAJ,EAAoB;QACdG,cAAcf,SAASphB,IAAT,KAAkBohB,SAASphB,IAAT,EAAegiB,OAAf,CAApC;GADF,MAEO;QACDG,cAAcH,OAAlB;;;SAGK,CAACE,QAAD,EAAWC,WAAX,CAAP;;;;;;;AAOF,AAAO,SAASC,UAAT,CAAoBhB,QAApB,EAA8B;MAC/B1Y,MAAM,EAAV;MACI9I,MAAMkD,OAAN,CAAcse,QAAd,CAAJ,EAA6B;SACtB,IAAIna,IAAI,CAAb,EAAgBA,IAAIma,SAASvjB,MAA7B,EAAqCoJ,GAArC,EAA0C;UACpClJ,UAAJ;UACIgkB,IAAID,kBAAkBV,SAASna,CAAT,CAAlB,CAAR;UACIlJ,IAAI2jB,WAAWK,EAAE,CAAF,CAAX,KAAoBL,WAAWK,EAAE,CAAF,CAAX,EAAiBA,EAAE,CAAF,CAAjB,CAA5B,EAAoD;YAC9ChkB,CAAJ,IAAS,IAAT;;;GALN,MASO,IAAI,QAAOqjB,QAAP,yCAAOA,QAAP,OAAoB,QAAxB,EAAkC;SAClC,IAAIphB,IAAT,IAAiBohB,QAAjB,EAA2B;UACrBC,WAAUD,SAASphB,IAAT,CAAd;WACK,IAAIgiB,OAAT,IAAoBX,QAApB,EAA6B;YACvBtjB,WAAJ;YACIgkB,KAAID,kBAAkB,CAAC9hB,IAAD,EAAOgiB,OAAP,CAAlB,CAAR;YACIX,SAAQW,OAAR,MAAqBjkB,KAAI2jB,WAAWK,GAAE,CAAF,CAAX,KAAoBL,WAAWK,GAAE,CAAF,CAAX,EAAiBA,GAAE,CAAF,CAAjB,CAA7C,CAAJ,EAA0E;cACpEhkB,EAAJ,IAAS,IAAT;;;;;;SAMD,aAAY2K,GAAZ,CAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7hBF,AACA,IAEqB2Z;0BACPxJ,KAAZ,EAAmB;;;SACZA,KAAL,GAAaA,KAAb;;;2BAGFqB,yBAAOhQ,OAAO;YACJ,KAAK2O,KAAL,CAAW9V,OAAnB;WACO,CAAL;;eACS,KAAK8V,KAAL,CAAWiF,MAAX,CAAkB9K,OAAlB,CAA0B9I,KAA1B,CAAP;;WAEG,CAAL,CAJF;WAKO,CAAL;;cACMuP,MAAM,CAAV;cACIpZ,MAAM,KAAKwY,KAAL,CAAW/E,kBAAX,CAA8BC,MAA9B,GAAuC,CAAjD;;iBAEO0F,OAAOpZ,GAAd,EAAmB;gBACbyK,MAAO2O,MAAMpZ,GAAP,IAAe,CAAzB;gBACIiiB,MAAM,KAAKzJ,KAAL,CAAW0J,QAAX,CAAoBzX,GAApB,CAAV;;;gBAGIwX,IAAI1O,UAAJ,KAAmB,MAAvB,EAA+B;qBACtB,IAAP;;;gBAGE1J,QAAQoY,IAAI1O,UAAhB,EAA4B;oBACpB9I,MAAM,CAAZ;aADF,MAEO,IAAIZ,QAAQoY,IAAI3O,SAAhB,EAA2B;oBAC1B7I,MAAM,CAAZ;aADK,MAEA;kBACD,KAAK+N,KAAL,CAAW9V,OAAX,KAAuB,CAA3B,EAA8B;uBACrBuf,IAAI9jB,KAAX;eADF,MAEO;uBACE8jB,IAAIxE,MAAJ,CAAW5T,QAAQoY,IAAI1O,UAAvB,CAAP;;;;;iBAKC,IAAP;;;WAGG,CAAL;;;cACM6F,OAAM,CAAV;cACIpZ,OAAM,KAAKwY,KAAL,CAAW/E,kBAAX,CAA8BC,MAA9B,GAAuC,CAAjD;;iBAEO0F,QAAOpZ,IAAd,EAAmB;gBACbyK,MAAO2O,OAAMpZ,IAAP,IAAe,CAAzB;gBACIiiB,MAAM,KAAKzJ,KAAL,CAAW0J,QAAX,CAAoBzX,GAApB,CAAV;;;gBAGIwX,IAAIpY,KAAJ,KAAc,MAAlB,EAA0B;qBACjB,IAAP;;;gBAGEA,QAAQoY,IAAIpY,KAAhB,EAAuB;qBACfY,MAAM,CAAZ;aADF,MAEO,IAAIZ,QAAQoY,IAAIpY,KAAhB,EAAuB;qBACtBY,MAAM,CAAZ;aADK,MAEA;qBACEwX,IAAI9jB,KAAX;;;;iBAIG,IAAP;;;WAGG,CAAL;;eACS,KAAKqa,KAAL,CAAWiF,MAAX,CAAkB5T,QAAQ,KAAK2O,KAAL,CAAWjF,UAArC,CAAP;;;cAGM,IAAI1V,KAAJ,mCAA0C,KAAK2a,KAAL,CAAW9V,OAArD,CAAN;;;;2BAKNyf,yCAAeC,YAAY;QACrB/Z,MAAM,EAAV;;YAEQ,KAAKmQ,KAAL,CAAW9V,OAAnB;WACO,CAAL,CADF;WAEO,CAAL;;+BACsB,KAAK8V,KAAL,CAAW0J,QAA/B,6GAAyC;;;;;;;;;;;;gBAAhCG,OAAgC;;gBAClC,KAAK7J,KAAL,CAAW9V,OAAX,KAAuB,CAAvB,IAA4B2f,QAAQlkB,KAAR,KAAkBikB,UAAnD,EAAgE;kBAC1D1lB,IAAJ,YAAY4L,MAAM+Z,QAAQ9O,UAAd,EAA0B8O,QAAQ/O,SAAR,GAAoB,CAA9C,CAAZ;aADF,MAEO;mBACA,IAAIzL,QAAQ,CAAjB,EAAoBA,QAAQwa,QAAQ5E,MAAR,CAAejgB,MAA3C,EAAmDqK,OAAnD,EAA4D;oBACtDwa,QAAQ5E,MAAR,CAAe5V,KAAf,MAA0Bua,UAA9B,EAA0C;sBACpC1lB,IAAJ,CAAS2lB,QAAQ9O,UAAR,GAAqB1L,KAA9B;;;;;;;;;WASL,CAAL;;;gCACsB,KAAK2Q,KAAL,CAAW0J,QAA/B,oHAAyC;;;;;;;;;;;;gBAAhCG,QAAgC;;gBACnCA,SAAQlkB,KAAR,KAAkBikB,UAAtB,EAAkC;kBAC5B1lB,IAAJ,CAAS2lB,SAAQxY,KAAjB;;;;;;;WAOD,CAAL;;;eACO,IAAItM,IAAI,CAAb,EAAgBA,IAAI,KAAKib,KAAL,CAAWiF,MAAX,CAAkBjgB,MAAtC,EAA8CD,GAA9C,EAAmD;gBAC7C,KAAKib,KAAL,CAAWiF,MAAX,CAAkBlgB,CAAlB,MAAyB6kB,UAA7B,EAAyC;kBACnC1lB,IAAJ,CAAS,KAAK8b,KAAL,CAAWjF,UAAX,GAAwBhW,CAAjC;;;;;;;;cAQE,IAAIM,KAAJ,mCAA0C,KAAK2a,KAAL,CAAW9V,OAArD,CAAN;;;WAGG2F,GAAP;;;;yEA9CDvK;;AC1EH,IAAMwkB,sBAAsB,CAA5B;AACA,AAEA,IAAMC,oBAAoB,CAA1B;AACA,IAAMC,sBAAsB,CAA5B;AACA,IAAMC,sBAAsB,CAA5B;AACA,AAEA,IAAMC,eAAe,MAArB;;IAEqBC;2BACPC,UAAZ,EAAwB;;;SACjBA,UAAL,GAAkBA,UAAlB;SACKC,WAAL,GAAmB,IAAIb,cAAJ,CAAmBY,WAAWE,UAA9B,CAAnB;;;4BAGFhhB,2BAAQoI,QAAQ6Y,SAASC,cAAc;QACjCC,eAAeX,mBAAnB,CADqC;QAEjCza,QAAQkb,UAAU7Y,OAAO1M,MAAP,GAAgB,CAA1B,GAA8B,CAA1C;QACI0lB,MAAMH,UAAU,CAAC,CAAX,GAAe,CAAzB;;WAEQG,QAAQ,CAAR,IAAarb,SAASqC,OAAO1M,MAA9B,IAA0C0lB,QAAQ,CAAC,CAAT,IAAcrb,SAAS,CAAC,CAAzE,EAA6E;UACvEgC,QAAQ,IAAZ;UACIsZ,YAAYX,mBAAhB;UACIY,gBAAgB,IAApB;;UAEIvb,UAAUqC,OAAO1M,MAAjB,IAA2BqK,UAAU,CAAC,CAA1C,EAA6C;oBAC/B0a,iBAAZ;OADF,MAEO;gBACGrY,OAAOrC,KAAP,CAAR;YACIgC,MAAM2S,EAAN,KAAa,MAAjB,EAAyB;;sBACXiG,mBAAZ;SADF,MAEO;sBACO,KAAKI,WAAL,CAAiBhJ,MAAjB,CAAwBhQ,MAAM2S,EAA9B,CAAZ;cACI2G,aAAa,IAAjB,EAAuB;wBACTX,mBAAZ;;;;;UAKFa,MAAM,KAAKT,UAAL,CAAgBtO,UAAhB,CAA2B3B,OAA3B,CAAmCsQ,YAAnC,CAAV;UACIK,aAAaD,IAAIF,SAAJ,CAAjB;UACIrP,QAAQ,KAAK8O,UAAL,CAAgBW,UAAhB,CAA2B5Q,OAA3B,CAAmC2Q,UAAnC,CAAZ;;UAEIH,cAAcZ,iBAAd,IAAmCY,cAAeV,mBAAtD,EAA2E;qBAC5D5Y,KAAb,EAAoBiK,KAApB,EAA2BjM,KAA3B;wBACgB,EAAEiM,MAAMiB,KAAN,GAAc2N,YAAhB,CAAhB;;;qBAGa5O,MAAM0P,QAArB;UACIJ,aAAJ,EAAmB;iBACRF,GAAT;;;;WAIGhZ,MAAP;;;;;;;;;4BAOFuZ,6BAASC,MAAoC;QAA9BC,KAA8B,uEAAtB,CAAsB;QAAnBC,OAAmB,uEAAT,UAAS;;QACvCA,QAAQplB,GAAR,CAAYmlB,KAAZ,CAAJ,EAAwB;;;;YAIhBE,GAAR,CAAYF,KAAZ;;sBAEyC,KAAKf,UAPH;QAOtC3O,QAPsC,eAOtCA,QAPsC;QAO5BK,UAP4B,eAO5BA,UAP4B;QAOhBiP,UAPgB,eAOhBA,UAPgB;;QAQvCF,MAAM/O,WAAW3B,OAAX,CAAmBgR,KAAnB,CAAV;;;SAGK,IAAIR,YAAY,CAArB,EAAwBA,YAAYlP,QAApC,EAA8CkP,WAA9C,EAA2D;UACrDG,aAAaD,IAAIF,SAAJ,CAAjB;UACIrP,QAAQyP,WAAW5Q,OAAX,CAAmB2Q,UAAnB,CAAZ;;;2BAGkB,KAAKT,WAAL,CAAiBV,cAAjB,CAAgCgB,SAAhC,CAAlB,6GAA8D;;;;;;;;;;;;YAArDtZ,KAAqD;;YACxD6Z,KAAKI,KAAT,EAAgB;eACTA,KAAL,CAAWja,KAAX,EAAkBiK,KAAlB;;;YAGEA,MAAM0P,QAAN,KAAmB,CAAvB,EAA0B;eACnBC,QAAL,CAAcC,IAAd,EAAoB5P,MAAM0P,QAA1B,EAAoCI,OAApC;;;YAGEF,KAAKK,IAAT,EAAe;eACRA,IAAL,CAAUla,KAAV,EAAiBiK,KAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FV,AACA,AACA,AAEA;AACA,IAAMkQ,aAAa,MAAnB;AACA,IAAMC,YAAa,MAAnB;AACA,IAAMC,OAAa,MAAnB;;;AAGA,IAAMC,WAAW,MAAjB;;;AAGA,IAAMC,gBAAiB,MAAvB;AACA,IAAMC,iBAAiB,MAAvB;;;AAGA,IAAMC,YAAc,UAApB;AACA,IAAMC,aAAc,UAApB;AACA,IAAMC,cAAc,UAApB;;AAEA,AACA,IAAMC,oBAA0B,QAAhC;AACA,AAEA,AAEA,AACA,IAAMC,wBAA0B,MAAhC;AACA,IAAMC,uBAA0B,MAAhC;AACA,IAAMC,uBAA0B,MAAhC;AACA,IAAMC,sBAA0B,MAAhC;;IAEqBC;4BACPznB,IAAZ,EAAkB;;;SACX0nB,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BC,IAA9B,CAAmC,IAAnC,CAAhC;SACKC,6BAAL,GAAqC,KAAKA,6BAAL,CAAmCD,IAAnC,CAAwC,IAAxC,CAArC;SACKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;SACKG,iCAAL,GAAyC,KAAKA,iCAAL,CAAuCH,IAAvC,CAA4C,IAA5C,CAAzC;SACKI,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BJ,IAA3B,CAAgC,IAAhC,CAA7B;SACK3nB,IAAL,GAAYA,IAAZ;SACK+a,IAAL,GAAY/a,KAAK+a,IAAjB;SACKiN,UAAL,GAAkB,IAAlB;;;;;;;6BAKFvjB,2BAAQoI,QAAuB;QAAf6W,QAAe,uEAAJ,EAAI;;yBACX,KAAK3I,IAAL,CAAUkN,MAA5B,6GAAoC;;;;;;;;;;;;UAA3BC,KAA2B;;UAC9BxQ,QAAQwQ,MAAMC,YAAlB;;;4BAGoBD,MAAMxE,QAA1B,oHAAoC;;;;;;;;;;;;YAA3BC,OAA2B;;YAC9BU,UAAJ;YACI,CAACA,IAAIX,SAASC,QAAQyE,WAAjB,CAAL,KAAuC/D,EAAEV,QAAQ0E,cAAV,CAA3C,EAAsE;mBAC3D1E,QAAQ2E,YAAjB;mBACS3E,QAAQ4E,WAAjB;;;;4BAIiBL,MAAMM,SAA3B,oHAAsC;;;;;;;;;;;;YAA7B5I,QAA6B;;YAChCA,SAAS6I,eAAT,GAA2B/Q,KAA/B,EAAsC;eAC/BgR,eAAL,CAAqB9I,QAArB,EAA+B/S,MAA/B;;;;;;QAMFrC,QAAQqC,OAAO1M,MAAP,GAAgB,CAA5B;WACOqK,SAAS,CAAhB,EAAmB;UACbqC,OAAOrC,KAAP,EAAc2U,EAAd,KAAqB,MAAzB,EAAiC;eACxBwJ,MAAP,CAAcne,KAAd,EAAqB,CAArB;;;;;;WAMGqC,MAAP;;;6BAGF6b,2CAAgB9I,UAAU/S,QAAQ;SAC3B+S,QAAL,GAAgBA,QAAhB;SACK/S,MAAL,GAAcA,MAAd;QACI,KAAK+S,QAAL,CAActd,IAAd,KAAuB,CAA3B,EAA8B;WACvBwlB,iCAAL,CAAuC,KAAKlI,QAA5C,EAAsD,KAAK/S,MAA3D;;;;SAIG+b,aAAL,GAAqB,EAArB;SACKC,WAAL,GAAmB,IAAnB;SACK3S,UAAL,GAAkB,IAAlB;SACKD,SAAL,GAAiB,IAAjB;SACK6S,WAAL,GAAmB,IAAnB;;QAEIC,eAAe,KAAKC,eAAL,CAAqBpJ,QAArB,CAAnB;QACInb,UAAU,KAAKwkB,YAAL,EAAd;;QAEIvD,UAAU,CAAC,EAAE,KAAK9F,QAAL,CAAcL,QAAd,GAAyB6H,iBAA3B,CAAf;WACO2B,aAAatkB,OAAb,CAAqB,KAAKoI,MAA1B,EAAkC6Y,OAAlC,EAA2CjhB,OAA3C,CAAP;;;6BAIFukB,2CAAgBpJ,UAAU;WACjB,IAAI0F,eAAJ,CAAoB1F,SAASzE,KAAT,CAAeoK,UAAnC,CAAP;;;6BAGF0D,uCAAe;YACL,KAAKrJ,QAAL,CAActd,IAAtB;WACO,CAAL;eACS,KAAKolB,wBAAZ;WACG,CAAL;eACS,KAAKE,6BAAZ;WACG,CAAL;eACS,KAAKC,eAAZ;WACG,CAAL;eACS,KAAKC,iCAAZ;WACG,CAAL;eACS,KAAKC,qBAAZ;;cAEM,IAAIvnB,KAAJ,kCAAyC,KAAKof,QAAL,CAActd,IAAvD,CAAN;;;;6BAINolB,6DAAyBlb,OAAOiK,OAAOjM,OAAO;QACxCiM,MAAMiB,KAAN,GAAciP,UAAlB,EAA8B;WACvBzQ,UAAL,GAAkB1L,KAAlB;;;QAGEiM,MAAMiB,KAAN,GAAckP,SAAlB,EAA6B;WACtB3Q,SAAL,GAAiBzL,KAAjB;;;kBAGY,KAAKqC,MAAnB,EAA2B4J,MAAMiB,KAAN,GAAcmP,IAAzC,EAA+C,KAAK3Q,UAApD,EAAgE,KAAKD,SAArE;;;6BAGF2R,uEAA8Bpb,OAAOiK,OAAOjM,OAAO;QAC7C0e,eAAe,KAAKtJ,QAAL,CAAczE,KAAd,CAAoBgO,iBAApB,CAAsCC,KAAzD;QACI3S,MAAM4S,SAAN,KAAoB,MAAxB,EAAgC;UAC1B7M,SAAS0M,aAAa5T,OAAb,CAAqBmB,MAAM4S,SAA3B,CAAb;UACI7D,cAAc,IAAIb,cAAJ,CAAmBnI,MAAnB,CAAlB;cACQ,KAAK3P,MAAL,CAAY,KAAKgc,WAAjB,CAAR;UACIlc,MAAM6Y,YAAYhJ,MAAZ,CAAmBhQ,MAAM2S,EAAzB,CAAV;UACIxS,GAAJ,EAAS;aACFE,MAAL,CAAY,KAAKgc,WAAjB,IAAgC,KAAK7oB,IAAL,CAAUspB,QAAV,CAAmB3c,GAAnB,EAAwBH,MAAM2U,UAA9B,CAAhC;;;;QAIA1K,MAAM8S,YAAN,KAAuB,MAA3B,EAAmC;UAC7B/M,UAAS0M,aAAa5T,OAAb,CAAqBmB,MAAM8S,YAA3B,CAAb;UACI/D,eAAc,IAAIb,cAAJ,CAAmBnI,OAAnB,CAAlB;cACQ,KAAK3P,MAAL,CAAYrC,KAAZ,CAAR;UACImC,MAAM6Y,aAAYhJ,MAAZ,CAAmBhQ,MAAM2S,EAAzB,CAAV;UACIxS,GAAJ,EAAS;aACFE,MAAL,CAAYrC,KAAZ,IAAqB,KAAKxK,IAAL,CAAUspB,QAAV,CAAmB3c,GAAnB,EAAwBH,MAAM2U,UAA9B,CAArB;;;;QAIA1K,MAAMiB,KAAN,GAAcoP,QAAlB,EAA4B;WACrB+B,WAAL,GAAmBre,KAAnB;;;;6BAIJqd,2CAAgBrb,OAAOiK,OAAOjM,OAAO;QAC/BiM,MAAMiB,KAAN,GAAcqP,aAAlB,EAAiC;WAC1B6B,aAAL,CAAmBvpB,IAAnB,CAAwBmL,KAAxB;;;QAGEiM,MAAMiB,KAAN,GAAcsP,cAAlB,EAAkC;;;UAC5BwC,UAAU,KAAK5J,QAAL,CAAczE,KAAd,CAAoBsO,eAAlC;UACIC,aAAa,KAAK9J,QAAL,CAAczE,KAAd,CAAoBuO,UAArC;UACIC,eAAe,KAAK/J,QAAL,CAAczE,KAAd,CAAoBwO,YAAvC;;UAEIC,cAAcnT,MAAMoT,MAAxB;UACIC,OAAO,KAAX;UACIC,gBAAgB,CAApB;UACI5I,aAAa,EAAjB;UACI6I,iBAAiB,EAArB;;aAEO,CAACF,IAAR,EAAc;;;YACRG,iBAAiB,KAAKrB,aAAL,CAAmBsB,GAAnB,EAArB;mCACWC,OAAX,oBAAsB,KAAKtd,MAAL,CAAYod,cAAZ,EAA4B9I,UAAlD;;YAEI0I,SAASL,QAAQlU,OAAR,CAAgBsU,aAAhB,CAAb;eACO,CAAC,EAAEC,SAAS5C,SAAX,CAAR;YACImD,QAAQ,CAAC,EAAEP,SAAS3C,UAAX,CAAb;YACIngB,SAAS,CAAC8iB,SAAS1C,WAAV,KAA0B,CAA1B,IAA+B,CAA5C,CAPY;kBAQF,KAAKta,MAAL,CAAYod,cAAZ,EAA4B9K,EAAtC;;YAEIkL,YAAYX,WAAWpU,OAAX,CAAmBvO,MAAnB,CAAhB;yBACiBsjB,SAAjB;;YAEIP,QAAQM,KAAZ,EAAmB;cACbE,gBAAgBX,aAAarU,OAAb,CAAqByU,aAArB,CAApB;eACKld,MAAL,CAAYod,cAAZ,IAA8B,KAAKjqB,IAAL,CAAUspB,QAAV,CAAmBgB,aAAnB,EAAkCnJ,UAAlC,CAA9B;yBACe9hB,IAAf,CAAoB4qB,cAApB;0BACgB,CAAhB;uBACa,EAAb;SALF,MAMO;eACApd,MAAL,CAAYod,cAAZ,IAA8B,KAAKjqB,IAAL,CAAUspB,QAAV,CAAmB,MAAnB,CAA9B;;;;;6BAKCV,aAAL,EAAmBvpB,IAAnB,uBAA2B2qB,cAA3B;;;;6BAIJlC,+EAAkClI,UAAU/S,QAAQrC,OAAO;QACrDgb,cAAc,IAAIb,cAAJ,CAAmB/E,SAASzE,KAAT,CAAeqK,WAAlC,CAAlB;;SAEKhb,QAAQ,CAAb,EAAgBA,QAAQqC,OAAO1M,MAA/B,EAAuCqK,OAAvC,EAAgD;UAC1CgC,QAAQK,OAAOrC,KAAP,CAAZ;UACIgC,MAAM2S,EAAN,KAAa,MAAjB,EAAyB;YACnBxS,MAAM6Y,YAAYhJ,MAAZ,CAAmBhQ,MAAM2S,EAAzB,CAAV;YACIxS,GAAJ,EAAS;;iBACAnC,KAAP,IAAgB,KAAKxK,IAAL,CAAUspB,QAAV,CAAmB3c,GAAnB,EAAwBH,MAAM2U,UAA9B,CAAhB;;;;;;6BAMRoJ,uCAActL,YAAYuL,sBAAsB7kB,OAAO8kB,UAAU;;;QAC3DC,aAAa,EAAjB;WACO/kB,OAAP,EAAgB;UACVgH,MAAM,KAAKiT,QAAL,CAAczE,KAAd,CAAoBwP,gBAApB,CAAqCrV,OAArC,CAA6CkV,sBAA7C,CAAV;iBACWnrB,IAAX,CAAgB,KAAKW,IAAL,CAAUspB,QAAV,CAAmB3c,GAAnB,CAAhB;;;QAGE,CAAC8d,QAAL,EAAe;;;;oBAIV5d,MAAL,EAAY8b,MAAZ,iBAAmB1J,UAAnB,EAA+B,CAA/B,SAAqCyL,UAArC;;;6BAGF3C,uDAAsBvb,OAAOiK,OAAOjM,OAAO;QACrCiM,MAAMiB,KAAN,GAAcoP,QAAlB,EAA4B;WACrBgC,WAAL,GAAmBte,KAAnB;;;QAGEiM,MAAMmU,iBAAN,KAA4B,MAAhC,EAAwC;UAClCjlB,QAAQ,CAAC8Q,MAAMiB,KAAN,GAAc8P,mBAAf,MAAwC,CAApD;UACIiD,WAAW,CAAC,EAAEhU,MAAMiB,KAAN,GAAc4P,oBAAhB,CAAhB;WACKiD,aAAL,CAAmB,KAAKzB,WAAxB,EAAqCrS,MAAMmU,iBAA3C,EAA8DjlB,KAA9D,EAAqE8kB,QAArE;;;QAGEhU,MAAMoU,kBAAN,KAA6B,MAAjC,EAAyC;UACnCllB,SAAQ,CAAC8Q,MAAMiB,KAAN,GAAc6P,oBAAf,MAAyC,CAArD;UACIkD,YAAW,CAAC,EAAEhU,MAAMiB,KAAN,GAAc2P,qBAAhB,CAAhB;WACKkD,aAAL,CAAmB/f,KAAnB,EAA0BiM,MAAMoU,kBAAhC,EAAoDllB,MAApD,EAA2D8kB,SAA3D;;;;6BAIJK,uDAAuB;QACjBpH,WAAW,EAAf;0BACkB,KAAK3I,IAAL,CAAUkN,MAA5B,oHAAoC;;;;;;;;;;;;UAA3BC,KAA2B;;4BACdA,MAAMxE,QAA1B,oHAAoC;;;;;;;;;;;;YAA3BC,OAA2B;;iBACzBtkB,IAAT,CAAc,CAACskB,QAAQyE,WAAT,EAAsBzE,QAAQ0E,cAA9B,CAAd;;;;WAIG3E,QAAP;;;6BAGFqH,yCAAepe,KAAK;QACd,CAAC,KAAKqb,UAAV,EAAsB;WACfgD,kBAAL;;;WAGK,KAAKhD,UAAL,CAAgBrb,GAAhB,KAAwB,EAA/B;;;6BAGFqe,mDAAqB;SACdhD,UAAL,GAAkB,EAAlB;;0BAEkB,KAAKjN,IAAL,CAAUkN,MAA5B,oHAAoC;;;;;;;;;;;;UAA3BC,KAA2B;;UAC9BxQ,QAAQwQ,MAAMC,YAAlB;;4BAEqBD,MAAMM,SAA3B,oHAAsC;;;;;;;;;;;;YAA7B5I,QAA6B;;YAChCA,SAAS6I,eAAT,GAA2B/Q,KAA/B,EAAsC;eAC/BuT,yBAAL,CAA+BrL,QAA/B;;;;;;6BAMRqL,+DAA0BrL,UAAU;;;;QAE9BA,SAAStd,IAAT,KAAkB,CAAtB,EAAyB;;;;QAIrBojB,UAAU,CAAC,EAAE9F,SAASL,QAAT,GAAoB6H,iBAAtB,CAAf;QACI1B,OAAJ,EAAa;YACL,IAAIllB,KAAJ,CAAU,kCAAV,CAAN;;;SAGGof,QAAL,GAAgBA,QAAhB;SACKgJ,aAAL,GAAqB,EAArB;;QAEIG,eAAe,KAAKC,eAAL,CAAqBpJ,QAArB,CAAnB;QACInb,UAAU,KAAKwkB,YAAL,EAAd;;QAEIiC,QAAQ,EAAZ;QACIC,QAAQ,EAAZ;SACKte,MAAL,GAAc,EAAd;;iBAEauZ,QAAb,CAAsB;aACb,eAAC5Z,KAAD,EAAQiK,KAAR,EAAkB;YACnB5J,SAAS,MAAKA,MAAlB;cACMxN,IAAN,CAAW;kBACDwN,OAAOiX,KAAP,EADC;yBAEM,MAAK8E,aAAL,CAAmB9E,KAAnB;SAFjB;;;YAMIhF,IAAI,MAAK9e,IAAL,CAAUspB,QAAV,CAAmB9c,KAAnB,CAAR;cACMnN,IAAN,CAAWyf,CAAX;eACOzf,IAAP,CAAY6rB,MAAMA,MAAM/qB,MAAN,GAAe,CAArB,CAAZ;;;gBAGQ0M,OAAOA,OAAO1M,MAAP,GAAgB,CAAvB,CAAR,EAAmCsW,KAAnC,EAA0C5J,OAAO1M,MAAP,GAAgB,CAA1D;;;YAGIwF,QAAQ,CAAZ;YACIylB,QAAQ,CAAZ;aACK,IAAIlrB,IAAI,CAAb,EAAgBA,IAAI2M,OAAO1M,MAAX,IAAqBwF,SAAS,CAA9C,EAAiDzF,GAAjD,EAAsD;cAChD2M,OAAO3M,CAAP,EAAUif,EAAV,KAAiB,MAArB,EAA6B;;oBAEnBtS,OAAO3M,CAAP,EAAUif,EAAlB;;;;YAIAxZ,UAAU,CAAd,EAAiB;cACXvE,SAAS8pB,MAAMpiB,GAAN,CAAU;mBAAKgW,EAAEK,EAAP;WAAV,CAAb;cACI1e,SAAQ,MAAKunB,UAAL,CAAgBoD,KAAhB,CAAZ;cACI3qB,MAAJ,EAAW;mBACHpB,IAAN,CAAW+B,MAAX;WADF,MAEO;kBACA4mB,UAAL,CAAgBoD,KAAhB,IAAyB,CAAChqB,MAAD,CAAzB;;;OAhCc;;YAqCd,gBAAM;yBACkD+pB,MAAMjB,GAAN,EADlD;;cACKrd,MADL,cACRA,MADQ;cACiC+b,aADjC,cACaA,aADb;;cAEJsB,GAAN;;KAvCJ;;;;0EA9MDzpB;;AA2PH,AAGA,SAAS4qB,IAAT,CAAcxe,MAAd,EAAsBye,MAAtB,EAA8BC,MAA9B,EAA0E;MAApCC,QAAoC,uEAAzB,KAAyB;MAAlBC,QAAkB,uEAAP,KAAO;;MACpE5kB,MAAMgG,OAAO8b,MAAP,CAAc4C,OAAO,CAAP,KAAaA,OAAO,CAAP,IAAY,CAAzB,CAAd,EAA2CA,OAAO,CAAP,CAA3C,CAAV;MACIE,QAAJ,EAAc;QACR/F,OAAJ;;;MAGE9e,QAAQiG,OAAO8b,MAAP,gBAAc2C,OAAO,CAAP,CAAd,EAAyBA,OAAO,CAAP,CAAzB,SAAuCzkB,GAAvC,EAAZ;MACI2kB,QAAJ,EAAc;UACN9F,OAAN;;;SAGKiD,MAAP,gBAAc4C,OAAO,CAAP,KAAaD,OAAO,CAAP,IAAY,CAAzB,CAAd,EAA2C,CAA3C,SAAiD1kB,KAAjD;SACOiG,MAAP;;;AAGF,SAAS6e,aAAT,CAAuB7e,MAAvB,EAA+B8e,IAA/B,EAAqCzV,UAArC,EAAiDD,SAAjD,EAA4D;MACtD9V,SAAS8V,YAAYC,UAAZ,GAAyB,CAAtC;UACQyV,IAAR;SACO,CAAL;;aACS9e,MAAP;;SAEG,CAAL;;aACSwe,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,CAAP;;SAEG,CAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,CAAP;;SAEG,CAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,CAAP;;SAEG,CAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,CAAP;;SAEG,CAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,EAA8C,IAA9C,EAAoD,KAApD,CAAP;;SAEG,CAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,CAAP;;SAEG,CAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,EAA8C,KAA9C,EAAqD,IAArD,CAAP;;SAEG,CAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,CAAP;;SAEG,CAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,EAA8C,KAA9C,EAAqD,IAArD,CAAP;;SAEG,EAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,CAAP;;SAEG,EAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,EAA8C,IAA9C,EAAoD,KAApD,CAAP;;SAEG,EAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,CAAP;;SAEG,EAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,EAA8C,IAA9C,EAAoD,KAApD,CAAP;;SAEG,EAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,EAA8C,KAA9C,EAAqD,IAArD,CAAP;;SAEG,EAAL;;aACSoV,KAAKxe,MAAL,EAAa,CAACqJ,UAAD,EAAa,CAAb,CAAb,EAA8B,CAACD,SAAD,EAAY,CAAZ,CAA9B,EAA8C,IAA9C,EAAoD,IAApD,CAAP;;;YAGM,IAAIzV,KAAJ,oBAA2BmrB,IAA3B,CAAN;;;;IClaeC;2BACP5rB,IAAZ,EAAkB;;;SACXA,IAAL,GAAYA,IAAZ;SACK6rB,aAAL,GAAqB,IAAIpE,gBAAJ,CAAqBznB,IAArB,CAArB;;;4BAGF8rB,iCAAWjf,QAAQ6W,UAAUN,QAAQve,UAAU;;;QAGzCknB,QAAQ/c,SAAA,CAAiBoU,MAAjB,MAA6B,KAAzC;QACI2I,KAAJ,EAAW;aACFrG,OAAP;;;SAGGmG,aAAL,CAAmBpnB,OAAnB,CAA2BoI,MAA3B,EAAmCmf,UAAA,CAAyBtI,QAAzB,CAAnC;WACO7W,MAAP;;;4BAGFof,qDAAqB7I,QAAQve,UAAU;WAC9BmnB,UAAA,CAAyB,KAAKH,aAAL,CAAmBf,oBAAnB,EAAzB,CAAP;;;4BAGFoB,2CAAgBvf,KAAK;QACfwf,eAAe,KAAKN,aAAL,CAAmBd,cAAnB,CAAkCpe,GAAlC,CAAnB;QACIvL,SAAS,UAAb;;yBAEmB+qB,YAAnB,6GAAiC;;;;;;;;;;;;UAAxBtf,MAAwB;;WAC1Buf,WAAL,CAAiBvf,MAAjB,EAAyB,CAAzB,EAA4BzL,MAA5B,EAAoC,EAApC;;;WAGKA,MAAP;;;4BAGFgrB,mCAAYvf,QAAQrC,OAAO6hB,SAASnnB,QAAQ;QACtCic,aAAa,KAAKnhB,IAAL,CAAUssB,cAAV,CAAyB3N,kBAAzB,CAA4C9R,OAAOrC,KAAP,CAA5C,CAAjB;;0BAEsB2W,UAAtB,oHAAkC;;;;;;;;;;;;UAAzBiB,SAAyB;;UAC5Bhb,IAAIlC,SAAS,sBAAqBkd,SAArB,CAAjB;UACI5X,QAAQqC,OAAO1M,MAAP,GAAgB,CAA5B,EAA+B;aACxBisB,WAAL,CAAiBvf,MAAjB,EAAyBrC,QAAQ,CAAjC,EAAoC6hB,OAApC,EAA6CjlB,CAA7C;OADF,MAEO;gBACGof,GAAR,CAAYpf,CAAZ;;;;;;;;AC3CR;;;;;;;;;;IASqBmlB;uBACPvsB,IAAZ,EAAkBojB,MAAlB,EAA0Bve,QAA1B,EAAoC;;;SAC7B7E,IAAL,GAAYA,IAAZ;SACKojB,MAAL,GAAcA,MAAd;SACKve,QAAL,GAAgBA,QAAhB;SACK4e,SAAL,GAAiBzU,SAAA,CAAiBoU,MAAjB,CAAjB;SACKoJ,MAAL,GAAc,EAAd;SACKC,cAAL,GAAsB,EAAtB;SACKC,WAAL,GAAmB,EAAnB;;;;;;;;;wBAOFC,qCAAajJ,UAAU;QACjBkJ,QAAQ,KAAKJ,MAAL,CAAY,KAAKA,MAAL,CAAYrsB,MAAZ,GAAqB,CAAjC,CAAZ;yBACoBujB,QAApB,6GAA8B;;;;;;;;;;;;UAArBC,OAAqB;;UACxB,CAAC,KAAK+I,WAAL,CAAiB/I,OAAjB,CAAL,EAAgC;cACxBtkB,IAAN,CAAWskB,OAAX;aACK+I,WAAL,CAAiB/I,OAAjB,IAA4B,IAA5B;;;;;;;;;;wBAQNkJ,iCAAWnJ,UAAU;0BACCA,QAApB,oHAA8B;;;;;;;;;;;;UAArBC,OAAqB;;WACvB8I,cAAL,CAAoB9I,OAApB,IAA+B,IAA/B;;;;;;;;;wBAOJ6C,mBAAIsG,KAAoB;QAAfC,MAAe,uEAAN,IAAM;;QAClB,KAAKP,MAAL,CAAYrsB,MAAZ,KAAuB,CAA3B,EAA8B;WACvBqsB,MAAL,CAAYntB,IAAZ,CAAiB,EAAjB;;;QAGE,OAAOytB,GAAP,KAAe,QAAnB,EAA6B;YACrB,CAACA,GAAD,CAAN;;;QAGE5qB,MAAMkD,OAAN,CAAc0nB,GAAd,CAAJ,EAAwB;WACjBH,YAAL,CAAkBG,GAAlB;UACIC,MAAJ,EAAY;aACLF,UAAL,CAAgBC,GAAhB;;KAHJ,MAKO,IAAI,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;UAC9BpJ,WAAW,CAACoJ,IAAIC,MAAJ,IAAc,EAAf,EAAmBC,MAAnB,CAA0BF,IAAIG,KAAJ,IAAa,EAAvC,CAAf;WACKN,YAAL,CAAkBjJ,QAAlB;UACIoJ,IAAIC,MAAR,EAAgB;aACTF,UAAL,CAAgBC,IAAIC,MAApB;;KAJG,MAMA;YACC,IAAIvsB,KAAJ,CAAU,yCAAV,CAAN;;;;;;;;;wBAOJ0sB,6BAASJ,KAAKC,QAAQ;QAChB,OAAOD,GAAP,KAAe,UAAnB,EAA+B;WACxBN,MAAL,CAAYntB,IAAZ,CAAiBytB,GAAjB,EAAsB,EAAtB;KADF,MAEO;WACAN,MAAL,CAAYntB,IAAZ,CAAiB,EAAjB;WACKmnB,GAAL,CAASsG,GAAT,EAAcC,MAAd;;;;;;;;;wBAOJI,qDAAqBtgB,QAAQ;0BACTA,MAAlB,oHAA0B;;;;;;;;;;;;UAAjBL,KAAiB;;WACnB,IAAImX,OAAT,IAAoB,KAAK8I,cAAzB,EAAyC;cACjC/I,QAAN,CAAeC,OAAf,IAA0B,IAA1B;;;;;;;;;;wBAQNlf,2BAAQ2oB,WAAWvgB,QAAQmS,WAAW;cAC1BqO,YAAV,CAAuB,KAAKjK,MAA5B,EAAoC,KAAKve,QAAzC;;0BAEkB,KAAK2nB,MAAvB,oHAA+B;;;;;;;;;;;;UAAtBI,KAAsB;;UACzB,OAAOA,KAAP,KAAiB,UAArB,EAAiC;YAC3B,CAAC5N,SAAL,EAAgB;gBACR,KAAKhf,IAAX,EAAiB6M,MAAjB,EAAyBmS,SAAzB;;OAFJ,MAKO,IAAI4N,MAAMzsB,MAAN,GAAe,CAAnB,EAAsB;kBACjBmtB,aAAV,CAAwBV,KAAxB,EAA+B/f,MAA/B,EAAuCmS,SAAvC;;;;;;;;;;AC7GR,AAEA,IAAMuO,kBAAkB,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,CAAxB;AACA,IAAMC,sBAAsB,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAA5B;AACA,IAAMC,sBAAsB,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,CAA5B;AACA,AACA,IAAMC,uBAAuB;OACtB,CAAC,MAAD,EAAS,MAAT,CADsB;OAEtB,CAAC,MAAD,EAAS,MAAT;CAFP;;IAKqBC;;;;;gBAEZC,qBAAKA,OAAM/gB,QAAQ6W,UAAU;;SAE7BmK,iBAAL,CAAuBD,KAAvB;SACKE,YAAL,CAAkBF,KAAlB;SACKG,kBAAL,CAAwBH,KAAxB,EAA8BlK,QAA9B;;;UAGKyJ,oBAAL,CAA0BtgB,MAA1B;;;SAGKmhB,cAAL,CAAoBJ,KAApB,EAA0B/gB,MAA1B;;;gBAGKghB,+CAAkBD,MAAM;SACxBpH,GAAL,CAAS;cACCkH,qBAAqBE,KAAKnK,SAA1B,CADD;aAEA+J;KAFT;;;gBAMKM,qCAAaF,MAAM;;;;gBAInBG,iDAAmBH,MAAMK,cAAc;SACvCzH,GAAL,WAAa+G,eAAb,EAAiCE,mBAAjC,EAAyDQ,YAAzD;;;gBAGKD,yCAAeJ,MAAM/gB,QAAQ;;QAE9B3M,IAAI,CAAR;WACOA,IAAI2M,OAAO1M,MAAlB,EAA0B;UACpBqM,QAAQK,OAAO3M,CAAP,CAAZ;UACIsM,MAAM2U,UAAN,CAAiB,CAAjB,MAAwB,MAA5B,EAAoC;;YAC9Bva,QAAQ1G,IAAI,CAAhB;YACI2G,MAAM3G,IAAI,CAAd;;;eAGO0G,SAAS,CAAT,IAAcyb,QAAQ6L,OAAR,CAAgBrhB,OAAOjG,KAAP,EAAcua,UAAd,CAAyB,CAAzB,CAAhB,CAArB,EAAmE;iBAC1Dva,KAAP,EAAc8c,QAAd,CAAuByK,IAAvB,GAA8B,IAA9B;iBACOvnB,KAAP,EAAc8c,QAAd,CAAuB0K,IAAvB,GAA8B,IAA9B;;;;;eAKKvnB,MAAMgG,OAAO1M,MAAb,IAAuBkiB,QAAQ6L,OAAR,CAAgBrhB,OAAOhG,GAAP,EAAYsa,UAAZ,CAAuB,CAAvB,CAAhB,CAA9B,EAA0E;iBACjEta,GAAP,EAAY6c,QAAZ,CAAqB2K,IAArB,GAA4B,IAA5B;iBACOxnB,GAAP,EAAY6c,QAAZ,CAAqB0K,IAArB,GAA4B,IAA5B;;;;;cAKI1K,QAAN,CAAe0K,IAAf,GAAsB,IAAtB;YACIvnB,MAAM,CAAV;OApBF,MAsBO;;;;;;;cAxDJynB,iBAAiB;;ACR1B,IAAMC,OAAO,IAAIC,WAAJ,CAAgBzvB,QAAQ,IAAR,EAAcW,YAAd,CAA2B+uB,YAAY,YAAvC,CAAhB,CAAb;AACA,IAAMC,WAAW,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,CAAjB;;AAEA,IAAMC,iBAAiB;eACR,CADQ;gBAEP,CAFO;iBAGN,CAHM;gBAIP,CAJO;gBAKP,CALO;SAMd,CANc;iBAON,CAPM;eAQR;CARf;;AAWA,IAAMC,OAAO,MAAb;AACA,IAAMC,OAAO,MAAb;AACA,IAAMC,OAAO,MAAb;AACA,IAAMC,OAAO,MAAb;AACA,IAAMC,OAAO,MAAb;AACA,IAAMC,OAAO,MAAb;AACA,IAAMC,OAAO,MAAb;AACA,IAAMC,OAAO,IAAb;;;AAGA,IAAMC,cAAc;;;AAGlB,CAAE,CAAED,IAAF,EAAQA,IAAR,EAAc,CAAd,CAAF,EAAsB,CAAEA,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAtB,EAA0C,CAAEO,IAAF,EAAQP,IAAR,EAAc,CAAd,CAA1C,EAA8D,CAAEO,IAAF,EAAQP,IAAR,EAAc,CAAd,CAA9D,EAAkF,CAAEO,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAlF,EAAsG,CAAEO,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAtG,CAHkB;;;AAMlB,CAAE,CAAEO,IAAF,EAAQA,IAAR,EAAc,CAAd,CAAF,EAAsB,CAAEA,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAtB,EAA0C,CAAEO,IAAF,EAAQP,IAAR,EAAc,CAAd,CAA1C,EAA8D,CAAEO,IAAF,EAAQP,IAAR,EAAc,CAAd,CAA9D,EAAkF,CAAEO,IAAF,EAAQL,IAAR,EAAc,CAAd,CAAlF,EAAsG,CAAEK,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAtG,CANkB;;;AASlB,CAAE,CAAEO,IAAF,EAAQA,IAAR,EAAc,CAAd,CAAF,EAAsB,CAAEA,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAtB,EAA0C,CAAEM,IAAF,EAAQL,IAAR,EAAc,CAAd,CAA1C,EAA8D,CAAEK,IAAF,EAAQL,IAAR,EAAc,CAAd,CAA9D,EAAkF,CAAEK,IAAF,EAAQL,IAAR,EAAc,CAAd,CAAlF,EAAsG,CAAEK,IAAF,EAAQL,IAAR,EAAc,CAAd,CAAtG,CATkB;;;AAYlB,CAAE,CAAEM,IAAF,EAAQA,IAAR,EAAc,CAAd,CAAF,EAAsB,CAAEA,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAtB,EAA0C,CAAEI,IAAF,EAAQH,IAAR,EAAc,CAAd,CAA1C,EAA8D,CAAEG,IAAF,EAAQH,IAAR,EAAc,CAAd,CAA9D,EAAkF,CAAEG,IAAF,EAAQH,IAAR,EAAc,CAAd,CAAlF,EAAsG,CAAEG,IAAF,EAAQH,IAAR,EAAc,CAAd,CAAtG,CAZkB;;;AAelB,CAAE,CAAEM,IAAF,EAAQA,IAAR,EAAc,CAAd,CAAF,EAAsB,CAAEA,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAtB,EAA0C,CAAEK,IAAF,EAAQL,IAAR,EAAc,CAAd,CAA1C,EAA8D,CAAEK,IAAF,EAAQL,IAAR,EAAc,CAAd,CAA9D,EAAkF,CAAEK,IAAF,EAAQH,IAAR,EAAc,CAAd,CAAlF,EAAsG,CAAEG,IAAF,EAAQL,IAAR,EAAc,CAAd,CAAtG,CAfkB;;;AAkBlB,CAAE,CAAEO,IAAF,EAAQA,IAAR,EAAc,CAAd,CAAF,EAAsB,CAAEA,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAtB,EAA0C,CAAEA,IAAF,EAAQA,IAAR,EAAc,CAAd,CAA1C,EAA8D,CAAEA,IAAF,EAAQA,IAAR,EAAc,CAAd,CAA9D,EAAkF,CAAEA,IAAF,EAAQE,IAAR,EAAc,CAAd,CAAlF,EAAsG,CAAEF,IAAF,EAAQA,IAAR,EAAc,CAAd,CAAtG,CAlBkB;;;AAqBlB,CAAE,CAAEO,IAAF,EAAQA,IAAR,EAAc,CAAd,CAAF,EAAsB,CAAEA,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAtB,EAA0C,CAAEO,IAAF,EAAQP,IAAR,EAAc,CAAd,CAA1C,EAA8D,CAAEO,IAAF,EAAQP,IAAR,EAAc,CAAd,CAA9D,EAAkF,CAAEO,IAAF,EAAQJ,IAAR,EAAc,CAAd,CAAlF,EAAsG,CAAEI,IAAF,EAAQP,IAAR,EAAc,CAAd,CAAtG,CArBkB,CAApB;;;;;;;;;;;IAgCqBS;;;;;;;;;eACZvB,qCAAaF,MAAM;SACnBpH,GAAL,CAAS,CAAC,MAAD,EAAS,MAAT,CAAT;SACK,IAAItmB,IAAI,CAAb,EAAgBA,IAAIwuB,SAASvuB,MAA7B,EAAqCD,GAArC,EAA0C;UACpCyjB,UAAU+K,SAASxuB,CAAT,CAAd;WACKgtB,QAAL,CAAcvJ,OAAd,EAAuB,KAAvB;;;SAGGuJ,QAAL,CAAc,MAAd;;;eAGKc,yCAAeJ,MAAM/gB,QAAQ;mBAC5BmhB,cAAN,YAAqBJ,IAArB,EAA2B/gB,MAA3B;;QAEIyiB,OAAO,CAAC,CAAZ;QACIhJ,QAAQ,CAAZ;QACIkD,UAAU,EAAd;;;SAGK,IAAItpB,IAAI,CAAb,EAAgBA,IAAI2M,OAAO1M,MAA3B,EAAmCD,GAAnC,EAAwC;UAClCqvB,kBAAJ;UAAeC,mBAAf;UACIhjB,QAAQK,OAAO3M,CAAP,CAAZ;UACIoC,OAAOmtB,gBAAgBjjB,MAAM2U,UAAN,CAAiB,CAAjB,CAAhB,CAAX;UACI7e,SAASqsB,eAAee,WAA5B,EAAyC;gBAC/BxvB,CAAR,IAAaivB,IAAb;;;;kCAI+BC,YAAY9I,KAAZ,EAAmBhkB,IAAnB,CATK;gBAAA;eAAA;WAAA;;;UAWlCktB,eAAeL,IAAf,IAAuBG,SAAS,CAAC,CAArC,EAAwC;gBAC9BA,IAAR,IAAgBE,UAAhB;;;cAGMtvB,CAAR,IAAaqvB,SAAb;aACOrvB,CAAP;;;;SAIG,IAAIsK,QAAQ,CAAjB,EAAoBA,QAAQqC,OAAO1M,MAAnC,EAA2CqK,OAA3C,EAAoD;UAC9CmZ,gBAAJ;UACInX,QAAQK,OAAOrC,KAAP,CAAZ;UACImZ,UAAU6F,QAAQhf,KAAR,CAAd,EAA8B;cACtBkZ,QAAN,CAAeC,OAAf,IAA0B,IAA1B;;;;;;EA3CkCgK;;AAiD1C,SAAS8B,eAAT,CAAyBrN,SAAzB,EAAoC;MAC9BpX,MAAMujB,KAAK1tB,GAAL,CAASuhB,SAAT,CAAV;MACIpX,GAAJ,EAAS;WACAA,MAAM,CAAb;;;MAGE2kB,WAAWtN,QAAQuN,WAAR,CAAoBxN,SAApB,CAAf;MACIuN,aAAa,IAAb,IAAqBA,aAAa,IAAlC,IAA0CA,aAAa,IAA3D,EAAiE;WACxDhB,eAAee,WAAtB;;;SAGKf,eAAekB,WAAtB;;;ICxHmBC;yBACPjjB,MAAZ,EAAoB6K,KAApB,EAA2B;;;SACpB7K,MAAL,GAAcA,MAAd;SACKkjB,KAAL,CAAWrY,KAAX;;;0BAGFqY,yBAAkB;QAAZrY,KAAY,uEAAJ,EAAI;;SACXA,KAAL,GAAaA,KAAb;SACKlN,KAAL,GAAa,CAAb;;;0BAOFwlB,qCAAaxjB,OAAOkL,OAAO;WAChBA,MAAMuY,WAAN,IAAqBzjB,MAAMsU,MAA5B,IACApJ,MAAMwY,gBAAN,IAA0B,CAAC1jB,MAAMsU,MADjC,IAEApJ,MAAMyY,eAAN,IAAyB3jB,MAAM4jB,UAFvC;;;0BAKFC,qBAAKxK,KAAK;SACHrb,KAAL,IAAcqb,GAAd;WACO,KAAK,KAAKrb,KAAV,IAAmB,KAAKA,KAAL,GAAa,KAAKqC,MAAL,CAAY1M,MAA5C,IAAsD,KAAK6vB,YAAL,CAAkB,KAAKnjB,MAAL,CAAY,KAAKrC,KAAjB,CAAlB,EAA2C,KAAKkN,KAAhD,CAA7D,EAAqH;WAC9GlN,KAAL,IAAcqb,GAAd;;;QAGE,IAAI,KAAKrb,KAAT,IAAkB,KAAKA,KAAL,IAAc,KAAKqC,MAAL,CAAY1M,MAAhD,EAAwD;aAC/C,IAAP;;;WAGK,KAAK0M,MAAL,CAAY,KAAKrC,KAAjB,CAAP;;;0BAGF2Y,uBAAO;WACE,KAAKkN,IAAL,CAAU,CAAC,CAAX,CAAP;;;0BAGFf,uBAAO;WACE,KAAKe,IAAL,CAAU,CAAC,CAAX,CAAP;;;0BAGFC,uBAAgB;QAAX3qB,KAAW,uEAAH,CAAG;;QACVqd,MAAM,KAAKxY,KAAf;QACIQ,MAAM,KAAKulB,SAAL,CAAe5qB,KAAf,CAAV;SACK6E,KAAL,GAAawY,GAAb;WACOhY,GAAP;;;0BAGFwlB,iCAAqB;QAAX7qB,KAAW,uEAAH,CAAG;;QACfqd,MAAM,KAAKxY,KAAf;SACK+lB,SAAL,CAAe5qB,KAAf;QACIqF,MAAM,KAAKR,KAAf;SACKA,KAAL,GAAawY,GAAb;WACOhY,GAAP;;;0BAGFulB,iCAAqB;QAAX5qB,KAAW,uEAAH,CAAG;;QACfkgB,MAAMlgB,QAAQ,CAAR,GAAY,CAAC,CAAb,GAAiB,CAA3B;YACQjD,KAAK+tB,GAAL,CAAS9qB,KAAT,CAAR;WACOA,OAAP,EAAgB;WACT0qB,IAAL,CAAUxK,GAAV;;;WAGK,KAAKhZ,MAAL,CAAY,KAAKrC,KAAjB,CAAP;;;;;wBArDQ;aACD,KAAKqC,MAAL,CAAY,KAAKrC,KAAjB,KAA2B,IAAlC;;;;;;;ACTJ,IAAMkmB,kBAAkB,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAxB;;IAEqBC;uBACP3wB,IAAZ,EAAkBmb,KAAlB,EAAyB;;;SAClBnb,IAAL,GAAYA,IAAZ;SACKmb,KAAL,GAAaA,KAAb;;SAEKiI,MAAL,GAAc,IAAd;SACKwN,SAAL,GAAiB,IAAjB;;SAEK/rB,QAAL,GAAgB,IAAhB;SACKgsB,WAAL,GAAmB,IAAnB;;SAEKnN,QAAL,GAAgB,EAAhB;SACKoN,OAAL,GAAe,EAAf;;;SAGKzD,YAAL;;;SAGKxgB,MAAL,GAAc,EAAd;SACKmS,SAAL,GAAiB,EAAjB,CAlBuB;SAmBlB+R,UAAL,GAAkB,CAAlB;;;wBAGFC,iCAAW5N,QAAQ;QACb,KAAKjI,KAAL,CAAW8V,UAAX,IAAyB,IAA7B,EAAmC;aAC1B,IAAP;;;QAGE,CAAC/uB,MAAMkD,OAAN,CAAcge,MAAd,CAAL,EAA4B;eACjB,CAAEA,MAAF,CAAT;;;yBAGgB,KAAKjI,KAAL,CAAW8V,UAA7B,6GAAyC;;;;;;;;;;;;UAAhCxa,KAAgC;;4BACzB2M,MAAd,oHAAsB;;;;;;;;;;;;YAAbhc,CAAa;;YAChBqP,MAAM1R,GAAN,KAAcqC,CAAlB,EAAqB;iBACZqP,KAAP;;;;;WAKC,IAAP;;;wBAGF4W,qCAAajK,QAAQve,UAAU;QACzBqsB,UAAU,KAAd;QACIza,cAAJ;QACI,CAAC,KAAK2M,MAAN,IAAgBA,WAAW,KAAKwN,SAApC,EAA+C;cACrC,KAAKI,UAAL,CAAgB5N,MAAhB,CAAR;UACIA,MAAJ,EAAY;gBACF,KAAK4N,UAAL,CAAgB5N,MAAhB,CAAR;;;UAGE,CAAC3M,KAAL,EAAY;gBACF,KAAKua,UAAL,CAAgBN,eAAhB,CAAR;;;UAGE,CAACja,KAAL,EAAY;;;;WAIPma,SAAL,GAAiBna,MAAM1R,GAAvB;WACKqe,MAAL,GAAc3M,MAAM2M,MAApB;WACKK,SAAL,GAAiBzU,SAAA,CAAiBoU,MAAjB,CAAjB;WACKve,QAAL,GAAgB,IAAhB;gBACU,IAAV;;;QAGE,CAACA,QAAD,IAAaA,aAAa,KAAKssB,UAAnC,EAA+C;4BAC5B,KAAK/N,MAAL,CAAYgO,cAA7B,oHAA6C;;;;;;;;;;;;YAApCC,IAAoC;;YACvCA,KAAKtsB,GAAL,KAAaF,QAAjB,EAA2B;eACpBA,QAAL,GAAgBwsB,KAAKC,OAArB;eACKH,UAAL,GAAkBE,KAAKtsB,GAAvB;oBACU,IAAV;;;;;;QAMF,CAAC,KAAKF,QAAV,EAAoB;WACbA,QAAL,GAAgB,KAAKue,MAAL,CAAYmO,cAA5B;;;;QAIEL,OAAJ,EAAa;WACNxN,QAAL,GAAgB,EAAhB;UACI,KAAK7e,QAAT,EAAmB;8BACQ,KAAKA,QAAL,CAAc2sB,cAAvC,oHAAuD;;;;;;;;;;;;cAA9CC,YAA8C;;cACjD7sB,SAAS,KAAKuW,KAAL,CAAWuW,WAAX,CAAuBD,YAAvB,CAAb;eACK/N,QAAL,CAAc9e,OAAOG,GAArB,IAA4BH,OAAO+e,OAAnC;;;;;;wBAMRgO,mDAA+C;QAA5B1D,YAA4B,uEAAb,EAAa;QAAT2D,OAAS;;QACzCd,UAAU,EAAd;0BACgB7C,YAAhB,oHAA8B;;;;;;;;;;;;UAArBlpB,GAAqB;;UACxB4e,UAAU,KAAKD,QAAL,CAAc3e,GAAd,CAAd;UACI,CAAC4e,OAAL,EAAc;;;;4BAIUA,QAAQkO,iBAAhC,oHAAmD;;;;;;;;;;;;YAA1CC,WAA0C;;YAC7CF,WAAWA,QAAQrsB,OAAR,CAAgBusB,WAAhB,MAAiC,CAAC,CAAjD,EAAoD;;;;gBAI5CzyB,IAAR,CAAa;mBACF0F,GADE;iBAEJ+sB,WAFI;kBAGH,KAAK3W,KAAL,CAAW4W,UAAX,CAAsBlxB,GAAtB,CAA0BixB,WAA1B;SAHV;;;;YAQIE,IAAR,CAAa,UAACC,CAAD,EAAIpqB,CAAJ;aAAUoqB,EAAEznB,KAAF,GAAU3C,EAAE2C,KAAtB;KAAb;WACOsmB,OAAP;;;wBAGFxD,uCAAcW,cAAcphB,QAAQqlB,UAAU;QACxCpB,UAAU,KAAKa,kBAAL,CAAwB1D,YAAxB,CAAd;SACKkE,YAAL,CAAkBrB,OAAlB,EAA2BjkB,MAA3B,EAAmCqlB,QAAnC;;;wBAGFC,qCAAarB,SAASjkB,QAAQmS,WAAW;SAClCnS,MAAL,GAAcA,MAAd;SACKmS,SAAL,GAAiBA,SAAjB;SACKoT,aAAL,GAAqB,IAAItC,aAAJ,CAAkBjjB,MAAlB,CAArB;;0BAE8BikB,OAA9B,oHAAuC;;;;;;;;;;;;;UAA7BnN,OAA6B,SAA7BA,OAA6B;UAApBnH,MAAoB,SAApBA,MAAoB;;WAChC4V,aAAL,CAAmBrC,KAAnB,CAAyBvT,OAAO9E,KAAhC;;aAEO,KAAK0a,aAAL,CAAmB5nB,KAAnB,GAA2BqC,OAAO1M,MAAzC,EAAiD;YAC3C,EAAEwjB,WAAW,KAAKyO,aAAL,CAAmBC,GAAnB,CAAuB3O,QAApC,CAAJ,EAAmD;eAC5C0O,aAAL,CAAmBjP,IAAnB;;;;8BAIgB3G,OAAO8V,SAAzB,oHAAoC;;;;;;;;;;;;cAA3BnX,KAA2B;;cAC9BnQ,MAAM,KAAKunB,WAAL,CAAiB/V,OAAOhG,UAAxB,EAAoC2E,KAApC,CAAV;cACInQ,GAAJ,EAAS;;;;;aAKNonB,aAAL,CAAmBjP,IAAnB;;;;;wBAKNoP,mCAAY/V,QAAQrB,OAAO;UACnB,IAAI3a,KAAJ,CAAU,+CAAV,CAAN;;;wBAGFgyB,2CAAgBC,eAAe;QACzBxT,aAAa,KAAKmT,aAAL,CAAmB5nB,KAApC;;0BAEyBioB,aAAzB,oHAAwC;;;;;;;;;;;;UAA/BC,YAA+B;;WACjCN,aAAL,CAAmB5nB,KAAnB,GAA2ByU,UAA3B;WACKmT,aAAL,CAAmB7B,SAAnB,CAA6BmC,aAAaC,aAA1C;;UAEInW,SAAS,KAAKrB,KAAL,CAAW4W,UAAX,CAAsBlxB,GAAtB,CAA0B6xB,aAAaE,eAAvC,CAAb;6BACkBpW,OAAO8V,SAAzB,2HAAoC;;;;;;;;;;;;YAA3BnX,KAA2B;;aAC7BoX,WAAL,CAAiB/V,OAAOhG,UAAxB,EAAoC2E,KAApC;;;;SAICiX,aAAL,CAAmB5nB,KAAnB,GAA2ByU,UAA3B;WACO,IAAP;;;wBAGF4T,uCAActT,UAAU/S,OAAO;QACzBA,SAAS,IAAb,EAAmB;cACT,KAAK4lB,aAAL,CAAmBC,GAAnB,CAAuBlT,EAA/B;;;YAGMI,SAASla,OAAjB;WACO,CAAL;eACSka,SAAS1S,MAAT,CAAgBtH,OAAhB,CAAwBiH,KAAxB,CAAP;;WAEG,CAAL;+BACoB+S,SAASuT,YAA3B,2HAAyC;;;;;;;;;;;;cAAhC7nB,KAAgC;;cACnCA,MAAMrE,KAAN,IAAe4F,KAAf,IAAwBA,SAASvB,MAAMpE,GAA3C,EAAgD;mBACvCoE,MAAM8nB,kBAAN,GAA2BvmB,KAA3B,GAAmCvB,MAAMrE,KAAhD;;;;;;;WAOD,CAAC,CAAR;;;wBAGFosB,uBAAML,eAAeM,UAAUjyB,IAAIkyB,SAAS;QACtCzsB,MAAM,KAAK2rB,aAAL,CAAmB5nB,KAA7B;QACIgC,QAAQ,KAAK4lB,aAAL,CAAmB7B,SAAnB,CAA6BoC,aAA7B,CAAZ;QACI3P,MAAM,CAAV;;WAEOA,MAAMiQ,SAAS9yB,MAAf,IAAyBqM,KAAzB,IAAkCxL,GAAGiyB,SAASjQ,GAAT,CAAH,EAAkBxW,MAAM2S,EAAxB,CAAzC,EAAsE;UAChE+T,OAAJ,EAAa;gBACH7zB,IAAR,CAAa,KAAK+yB,aAAL,CAAmB5nB,KAAhC;;;;cAIM,KAAK4nB,aAAL,CAAmBjP,IAAnB,EAAR;;;SAGGiP,aAAL,CAAmB5nB,KAAnB,GAA2B/D,GAA3B;QACIuc,MAAMiQ,SAAS9yB,MAAnB,EAA2B;aAClB,KAAP;;;WAGK+yB,WAAW,IAAlB;;;wBAGFC,2CAAgBR,eAAeM,UAAU;WAChC,KAAKD,KAAL,CAAWL,aAAX,EAA0BM,QAA1B,EAAoC,UAAC5I,SAAD,EAAY7d,KAAZ;aAAsB6d,cAAc7d,KAApC;KAApC,CAAP;;;wBAGF4mB,qDAAqBT,eAAeM,UAAU;WACrC,KAAKD,KAAL,CAAWL,aAAX,EAA0BM,QAA1B,EAAoC,UAAC5I,SAAD,EAAY7d,KAAZ;aAAsB6d,cAAc7d,KAApC;KAApC,EAA+E,EAA/E,CAAP;;;wBAGF6mB,2DAAwBV,eAAeM,UAAU;;;WACxC,KAAKD,KAAL,CAAWL,aAAX,EAA0BM,QAA1B,EAAoC,UAAC1T,QAAD,EAAW/S,KAAX;aACzC,MAAKqmB,aAAL,CAAmBtT,QAAnB,EAA6B/S,KAA7B,KAAuC,CADE;KAApC,CAAP;;;wBAKF8mB,iCAAW9mB,OAAO+mB,UAAU;YAClBA,SAASluB,OAAjB;WACO,CAAL;;YACMnF,IAAIsM,QAAQ+mB,SAASC,UAAzB;YACItzB,KAAK,CAAL,IAAUA,IAAIqzB,SAASE,eAAT,CAAyBtzB,MAA3C,EAAmD;iBAC1CozB,SAASE,eAAT,CAAyBvzB,CAAzB,CAAP;;;;;WAKC,CAAL;+BACoBqzB,SAASG,gBAA3B,2HAA6C;;;;;;;;;;;;cAApCzoB,KAAoC;;cACvCA,MAAMrE,KAAN,IAAe4F,KAAf,IAAwBA,SAASvB,MAAMpE,GAA3C,EAAgD;mBACvCoE,MAAM0oB,KAAb;;;;;;;WAOD,CAAP;;;wBAGFC,qDAAqBjB,eAAeM,UAAUM,UAAU;;;WAC/C,KAAKP,KAAL,CAAWL,aAAX,EAA0BM,QAA1B,EAAoC,UAACY,OAAD,EAAUrnB,KAAV;aACzCqnB,YAAY,OAAKP,UAAL,CAAgB9mB,KAAhB,EAAuB+mB,QAAvB,CAD6B;KAApC,CAAP;;;wBAKFO,qCAAa3Y,OAAO;YACVA,MAAM9V,OAAd;WACO,CAAL;YACMmF,QAAQ,KAAKqoB,aAAL,CAAmB1X,MAAMoE,QAAzB,CAAZ;YACI/U,UAAU,CAAC,CAAf,EAAkB;iBACT,KAAP;;;YAGElJ,MAAM6Z,MAAM4Y,QAAN,CAAevpB,KAAf,CAAV;+BACiBlJ,GAAjB,2HAAsB;;;;;;;;;;;;cAAb0yB,IAAa;;cAChB,KAAKb,eAAL,CAAqB,CAArB,EAAwBa,KAAK9I,KAA7B,CAAJ,EAAyC;mBAChC,KAAKsH,eAAL,CAAqBwB,KAAKvB,aAA1B,CAAP;;;;;;WAMD,CAAL;YACM,KAAKI,aAAL,CAAmB1X,MAAMoE,QAAzB,MAAuC,CAAC,CAA5C,EAA+C;iBACtC,KAAP;;;gBAGM,KAAK+T,UAAL,CAAgB,KAAKlB,aAAL,CAAmBC,GAAnB,CAAuBlT,EAAvC,EAA2ChE,MAAMoY,QAAjD,CAAR;YACI/oB,UAAU,CAAC,CAAf,EAAkB;iBACT,KAAP;;;cAGI2Q,MAAM8Y,QAAN,CAAezpB,KAAf,CAAN;+BACiBlJ,GAAjB,2HAAsB;;;;;;;;;;;;cAAb0yB,KAAa;;cAChB,KAAKJ,oBAAL,CAA0B,CAA1B,EAA6BI,MAAKE,OAAlC,EAA2C/Y,MAAMoY,QAAjD,CAAJ,EAAgE;mBACvD,KAAKf,eAAL,CAAqBwB,MAAKvB,aAA1B,CAAP;;;;;;WAMD,CAAL;YACM,KAAKY,uBAAL,CAA6B,CAA7B,EAAgClY,MAAMgZ,SAAtC,CAAJ,EAAsD;iBAC7C,KAAK3B,eAAL,CAAqBrX,MAAMsX,aAA3B,CAAP;;;;;;WAMC,KAAP;;;wBAGF2B,qDAAqBjZ,OAAO;YAClBA,MAAM9V,OAAd;WACO,CAAL;YACMmF,QAAQ,KAAKqoB,aAAL,CAAmB1X,MAAMoE,QAAzB,CAAZ;YACI/U,UAAU,CAAC,CAAf,EAAkB;iBACT,KAAP;;;YAGElJ,MAAM6Z,MAAMkZ,aAAN,CAAoB7pB,KAApB,CAAV;+BACiBlJ,GAAjB,2HAAsB;;;;;;;;;;;;cAAb0yB,IAAa;;cAChB,KAAKb,eAAL,CAAqB,CAACa,KAAKM,SAAL,CAAen0B,MAArC,EAA6C6zB,KAAKM,SAAlD,KACG,KAAKnB,eAAL,CAAqB,CAArB,EAAwBa,KAAK9I,KAA7B,CADH,IAEG,KAAKiI,eAAL,CAAqB,IAAIa,KAAK9I,KAAL,CAAW/qB,MAApC,EAA4C6zB,KAAKO,SAAjD,CAFP,EAEoE;mBAC3D,KAAK/B,eAAL,CAAqBwB,KAAKvB,aAA1B,CAAP;;;;;;WAMD,CAAL;YACM,KAAKI,aAAL,CAAmB1X,MAAMoE,QAAzB,MAAuC,CAAC,CAA5C,EAA+C;iBACtC,KAAP;;;gBAGM,KAAK+T,UAAL,CAAgB,KAAKlB,aAAL,CAAmBC,GAAnB,CAAuBlT,EAAvC,EAA2ChE,MAAMqZ,aAAjD,CAAR;YACIC,QAAQtZ,MAAMuZ,aAAN,CAAoBlqB,KAApB,CAAZ;YACI,CAACiqB,KAAL,EAAY;iBACH,KAAP;;;+BAGeA,KAAjB,2HAAwB;;;;;;;;;;;;cAAfT,MAAe;;cAClB,KAAKJ,oBAAL,CAA0B,CAACI,OAAKM,SAAL,CAAen0B,MAA1C,EAAkD6zB,OAAKM,SAAvD,EAAkEnZ,MAAMwZ,iBAAxE,KACA,KAAKf,oBAAL,CAA0B,CAA1B,EAA6BI,OAAK9I,KAAlC,EAAyC/P,MAAMqZ,aAA/C,CADA,IAEA,KAAKZ,oBAAL,CAA0B,IAAII,OAAK9I,KAAL,CAAW/qB,MAAzC,EAAiD6zB,OAAKO,SAAtD,EAAiEpZ,MAAMyZ,iBAAvE,CAFJ,EAE+F;mBACtF,KAAKpC,eAAL,CAAqBwB,OAAKvB,aAA1B,CAAP;;;;;;WAMD,CAAL;YACM,KAAKY,uBAAL,CAA6B,CAAClY,MAAM0Z,mBAApC,EAAyD1Z,MAAM2Z,iBAA/D,KACA,KAAKzB,uBAAL,CAA6B,CAA7B,EAAgClY,MAAM4Z,aAAtC,CADA,IAEA,KAAK1B,uBAAL,CAA6BlY,MAAM5K,eAAnC,EAAoD4K,MAAM6Z,iBAA1D,CAFJ,EAEkF;iBACzE,KAAKxC,eAAL,CAAqBrX,MAAMsX,aAA3B,CAAP;;;;;;WAMC,KAAP;;;;;;ICrWiBwC;qBACPj1B,IAAZ,EAAkBmf,EAAlB,EAAsD;QAAhCgC,UAAgC,uEAAnB,EAAmB;QAAfuC,QAAe,uEAAJ,EAAI;;;;SAC/CwR,KAAL,GAAal1B,IAAb;SACKmhB,UAAL,GAAkBA,UAAlB;SACKhC,EAAL,GAAUA,EAAV;;SAEKuE,QAAL,GAAgB,EAAhB;QACIxhB,MAAMkD,OAAN,CAAcse,QAAd,CAAJ,EAA6B;WACtB,IAAIxjB,IAAI,CAAb,EAAgBA,IAAIwjB,SAASvjB,MAA7B,EAAqCD,GAArC,EAA0C;YACpCyjB,UAAUD,SAASxjB,CAAT,CAAd;aACKwjB,QAAL,CAAcC,OAAd,IAAyB,IAAzB;;KAHJ,MAKO,IAAI,QAAOD,QAAP,yCAAOA,QAAP,OAAoB,QAAxB,EAAkC;qBACzB,KAAKA,QAAnB,EAA6BA,QAA7B;;;SAGGqN,UAAL,GAAkB,IAAlB;SACKoE,iBAAL,GAAyB,IAAzB;SACKC,OAAL,GAAe,KAAf;SACKC,iBAAL,GAAyB,IAAzB;SACKC,cAAL,GAAsB,IAAtB;SACKC,UAAL,GAAkB,IAAlB;SACKC,WAAL,GAAmB,KAAnB;;;;;wBAGO;aACA,KAAKC,GAAZ;;sBAGKtW,IAAI;WACJsW,GAAL,GAAWtW,EAAX;WACKqW,WAAL,GAAmB,IAAnB;;UAEI,KAAKN,KAAL,CAAWpb,IAAX,IAAmB,KAAKob,KAAL,CAAWpb,IAAX,CAAgB4b,aAAvC,EAAsD;;YAEhD7B,UAAUlD,YAAYgF,SAAZ,CAAsBrC,UAAtB,CAAiCnU,EAAjC,EAAqC,KAAK+V,KAAL,CAAWpb,IAAX,CAAgB4b,aAArD,CAAd;aACK5U,MAAL,GAAc+S,YAAY,CAA1B;aACKzD,UAAL,GAAkByD,YAAY,CAA9B;OAJF,MAKO;aACA/S,MAAL,GAAc,KAAKK,UAAL,CAAgByU,KAAhB,CAAsBvT,QAAQvB,MAA9B,CAAd;aACKsP,UAAL,GAAkB,KAAKjP,UAAL,CAAgBhhB,MAAhB,GAAyB,CAA3C;;;;;;;;;;AC3CN,AACA,AAEA;;;;;;;;;;;;;;;;;;;;;;IAsBqB01B;;;;;;;;;eAEZ/H,qCAAaF,MAAM;SACnBpH,GAAL,CAAS,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAT,EAAmC,KAAnC;;;eAGKwH,yCAAeJ,MAAM/gB,QAAQ;QAC9ByZ,QAAQ,CAAZ;QACIpmB,IAAI,CAAR;WACOA,IAAI2M,OAAO1M,MAAlB,EAA0B;UACpB0pB,eAAJ;UACIrd,QAAQK,OAAO3M,CAAP,CAAZ;UACI+iB,OAAOzW,MAAM2U,UAAN,CAAiB,CAAjB,CAAX;UACI7e,OAAOwzB,QAAQ7S,IAAR,CAAX;;kCAEoBmM,cAAY9I,KAAZ,EAAmBhkB,IAAnB,CANI;YAAA;WAAA;;;cAQhBunB,MAAR;aACOkM,SAAL;;cAEM,CAACnI,KAAK5tB,IAAL,CAAUg2B,oBAAV,CAA+B/S,IAA/B,CAAL,EAA2C;gBACrCgT,UAAUppB,MAAV,EAAkB3M,CAAlB,EAAqB0tB,KAAK5tB,IAA1B,CAAJ;;;;aAICk2B,OAAL;;cAEMC,QAAQtpB,MAAR,EAAgB3M,CAAhB,EAAmB0tB,KAAK5tB,IAAxB,CAAJ;;;aAGGo2B,SAAL;;0BAEkBvpB,MAAhB,EAAwB3M,CAAxB,EAA2B0tB,KAAK5tB,IAAhC;;;aAGGq2B,OAAL;;cAEMC,mBAAmBzpB,MAAnB,EAA2B3M,CAA3B,EAA8B0tB,KAAK5tB,IAAnC,CAAJ;;;;;;;;;EArCgC2tB,yBACjCW,iBAAiB;AA6C1B,IAAMiI,cAAe,MAArB;AACA,IAAMC,aAAe,MAArB;AACA,IAAMC,eAAeD,aAAaD,WAAb,GAA2B,CAAhD;AACA,IAAMG,SAAU,MAAhB;AACA,IAAMC,SAAU,MAAhB;AACA,IAAMC,SAAU,MAAhB;AACA,IAAMC,UAAU,EAAhB;AACA,IAAMC,UAAU,EAAhB;AACA,IAAMC,UAAU,EAAhB;AACA,IAAMC,QAAUN,SAASG,OAAT,GAAmB,CAAnC;AACA,IAAMI,QAAUN,SAASG,OAAT,GAAmB,CAAnC;AACA,IAAMI,QAAUN,SAASG,OAAT,GAAmB,CAAnC;AACA,IAAMI,gBAAgB,MAAtB;;AAEA,IAAMC,MAAS,SAATA,GAAS;SAAQ,UAAUnU,IAAV,IAAkBA,QAAQ,MAA1B,IAAoC,UAAUA,IAAV,IAAkBA,QAAQ,MAAtE;CAAf;AACA,IAAMoU,MAAS,SAATA,GAAS;SAAQ,UAAUpU,IAAV,IAAkBA,QAAQ,MAA1B,IAAoC,UAAUA,IAAV,IAAkBA,QAAQ,MAAtE;CAAf;AACA,IAAMqU,MAAS,SAATA,GAAS;SAAQ,UAAUrU,IAAV,IAAkBA,QAAQ,MAA1B,IAAoC,UAAUA,IAAV,IAAkBA,QAAQ,MAAtE;CAAf;AACA,IAAMsU,SAAS,SAATA,MAAS;SAAQ,UAAUtU,IAAV,IAAkBA,QAAQ,MAAlC;CAAf;AACA,IAAMuU,QAAS,SAATA,KAAS;SAAQjB,eAAetT,IAAf,IAAuBA,QAAQuT,UAAvC;CAAf;AACA,IAAMiB,OAAS,SAATA,IAAS;SAASxU,OAAOsT,WAAR,GAAuBE,YAAvB,IAAuC,CAACxT,OAAOsT,WAAR,IAAuBQ,OAAvB,KAAmC,CAAlF;CAAf;AACA,IAAMW,eAAe,SAAfA,YAAe;SAAQhB,UAAUzT,IAAV,IAAkBA,QAAQ+T,KAAlC;CAArB;AACA,IAAMW,eAAe,SAAfA,YAAe;SAAQhB,UAAU1T,IAAV,IAAkBA,QAAQgU,KAAlC;CAArB;AACA,IAAMW,eAAe,SAAfA,YAAe;SAAQhB,SAAS,CAAT,IAAc,KAAK3T,IAAnB,IAA2BA,QAAQiU,KAA3C;CAArB;;;AAGA,IAAMW,IAAM,CAAZ;AACA,IAAMC,IAAM,CAAZ;AACA,IAAMC,IAAM,CAAZ;AACA,IAAMC,IAAM,CAAZ;AACA,IAAMC,KAAM,CAAZ;AACA,IAAMC,MAAM,CAAZ;AACA,IAAMC,IAAM,CAAZ;;;AAGA,SAASrC,OAAT,CAAiB7S,IAAjB,EAAuB;MACjBmU,IAAInU,IAAJ,CAAJ,EAAkB;WAAS6U,CAAP;;MAChBT,IAAIpU,IAAJ,CAAJ,EAAkB;WAAS8U,CAAP;;MAChBT,IAAIrU,IAAJ,CAAJ,EAAkB;WAAS+U,CAAP;;MAChBP,KAAKxU,IAAL,CAAJ,EAAkB;WAASgV,EAAP;;MAChBT,MAAMvU,IAAN,CAAJ,EAAkB;WAASiV,GAAP;;MAChBX,OAAOtU,IAAP,CAAJ,EAAkB;WAASkV,CAAP;;SACbN,CAAP;;;;AAIF,IAAMO,YAAY,CAAlB;AACA,IAAMrC,YAAY,CAAlB;AACA,IAAMG,UAAY,CAAlB;AACA,IAAME,YAAY,CAAlB;AACA,IAAMC,UAAY,CAAlB;;;;AAIA,IAAMjH,gBAAc;;;AAGlB,CAAE,CAAEgJ,SAAF,EAAa,CAAb,CAAF,EAAoB,CAAEA,SAAF,EAAa,CAAb,CAApB,EAAsC,CAAEA,SAAF,EAAa,CAAb,CAAtC,EAAwD,CAAEA,SAAF,EAAa,CAAb,CAAxD,EAA0E,CAAErC,SAAF,EAAa,CAAb,CAA1E,EAA4F,CAAEA,SAAF,EAAa,CAAb,CAA5F,EAA8G,CAAGM,OAAH,EAAY,CAAZ,CAA9G,CAHkB;;;AAMlB,CAAE,CAAE+B,SAAF,EAAa,CAAb,CAAF,EAAoB,CAAEA,SAAF,EAAa,CAAb,CAApB,EAAsC,CAAGlC,OAAH,EAAY,CAAZ,CAAtC,EAAwD,CAAEkC,SAAF,EAAa,CAAb,CAAxD,EAA0E,CAAErC,SAAF,EAAa,CAAb,CAA1E,EAA4F,CAAEA,SAAF,EAAa,CAAb,CAA5F,EAA8G,CAAGM,OAAH,EAAY,CAAZ,CAA9G,CANkB;;;AASlB,CAAE,CAAE+B,SAAF,EAAa,CAAb,CAAF,EAAoB,CAAEA,SAAF,EAAa,CAAb,CAApB,EAAsC,CAAEA,SAAF,EAAa,CAAb,CAAtC,EAAwD,CAAGlC,OAAH,EAAY,CAAZ,CAAxD,EAA0E,CAAEH,SAAF,EAAa,CAAb,CAA1E,EAA4F,CAAEA,SAAF,EAAa,CAAb,CAA5F,EAA8G,CAAEK,SAAF,EAAa,CAAb,CAA9G,CATkB;;;AAYlB,CAAE,CAAEgC,SAAF,EAAa,CAAb,CAAF,EAAoB,CAAEA,SAAF,EAAa,CAAb,CAApB,EAAsC,CAAEA,SAAF,EAAa,CAAb,CAAtC,EAAwD,CAAEA,SAAF,EAAa,CAAb,CAAxD,EAA0E,CAAErC,SAAF,EAAa,CAAb,CAA1E,EAA4F,CAAEA,SAAF,EAAa,CAAb,CAA5F,EAA8G,CAAEK,SAAF,EAAa,CAAb,CAA9G,CAZkB,CAApB;;AAeA,SAAS9M,QAAT,CAAkBtpB,IAAlB,EAAwBijB,IAAxB,EAA8BS,QAA9B,EAAwC;SAC/B,IAAIuR,SAAJ,CAAcj1B,IAAd,EAAoBA,KAAKq4B,iBAAL,CAAuBpV,IAAvB,EAA6B9D,EAAjD,EAAqD,CAAC8D,IAAD,CAArD,EAA6DS,QAA7D,CAAP;;;AAGF,SAASuS,SAAT,CAAmBppB,MAAnB,EAA2B3M,CAA3B,EAA8BF,IAA9B,EAAoC;MAC9BwM,QAAQK,OAAO3M,CAAP,CAAZ;MACI+iB,OAAOzW,MAAM2U,UAAN,CAAiB,CAAjB,CAAX;;MAEI/Z,IAAI6b,OAAOsT,WAAf;MACI3zB,IAAIg0B,SAASxvB,IAAI2vB,OAArB;MACI3vB,IAAI2vB,OAAJ,GAAc,CAAlB;MACIuB,IAAI5B,SAAStvB,IAAI0vB,OAAb,GAAuB,CAA/B;MACIyB,IAAI5B,SAASvvB,IAAI0vB,OAArB;;;MAGI,CAAC92B,KAAKg2B,oBAAL,CAA0BsC,CAA1B,CAAD,IACA,CAACt4B,KAAKg2B,oBAAL,CAA0BuC,CAA1B,CADD,IAEC31B,MAAMg0B,MAAN,IAAgB,CAAC52B,KAAKg2B,oBAAL,CAA0BpzB,CAA1B,CAFtB,EAEqD;WAC5C1C,CAAP;;;;;MAKEs4B,OAAOlP,SAAStpB,IAAT,EAAes4B,CAAf,EAAkB9rB,MAAMkX,QAAxB,CAAX;OACKA,QAAL,CAAc8U,IAAd,GAAqB,IAArB;;MAEIC,OAAOnP,SAAStpB,IAAT,EAAeu4B,CAAf,EAAkB/rB,MAAMkX,QAAxB,CAAX;OACKA,QAAL,CAAc+U,IAAd,GAAqB,IAArB;;MAEIC,SAAS,CAAEF,IAAF,EAAQC,IAAR,CAAb;;MAEI71B,IAAIg0B,MAAR,EAAgB;QACV+B,OAAOrP,SAAStpB,IAAT,EAAe4C,CAAf,EAAkB4J,MAAMkX,QAAxB,CAAX;SACKA,QAAL,CAAciV,IAAd,GAAqB,IAArB;WACOt5B,IAAP,CAAYs5B,IAAZ;;;SAGKhQ,MAAP,gBAAczoB,CAAd,EAAiB,CAAjB,SAAuBw4B,MAAvB;SACOx4B,IAAIw4B,OAAOv4B,MAAX,GAAoB,CAA3B;;;AAGF,SAASg2B,OAAT,CAAiBtpB,MAAjB,EAAyB3M,CAAzB,EAA4BF,IAA5B,EAAkC;MAC5BwM,QAAQK,OAAO3M,CAAP,CAAZ;MACI+iB,OAAOpW,OAAO3M,CAAP,EAAUihB,UAAV,CAAqB,CAArB,CAAX;MACI7e,OAAOwzB,QAAQ7S,IAAR,CAAX;;MAEIqM,OAAOziB,OAAO3M,IAAI,CAAX,EAAcihB,UAAd,CAAyB,CAAzB,CAAX;MACIyX,WAAW9C,QAAQxG,IAAR,CAAf;;;MAGIuJ,WAAJ;MAAQL,aAAR;MAAcC,aAAd;MAAoBE,aAApB;MACIC,aAAaX,EAAb,IAAmB31B,SAAS01B,CAAhC,EAAmC;;SAE5B1I,IAAL;WACO9iB,KAAP;GAHF,MAIO;QACDlK,SAASy1B,CAAb,EAAgB;;aAEPlrB,OAAO3M,IAAI,CAAX,CAAP;aACOsM,KAAP;KAHF,MAIO;;aAEEK,OAAO3M,IAAI,CAAX,CAAP;aACO2M,OAAO3M,IAAI,CAAX,CAAP;aACOsM,KAAP;;;QAGE8rB,IAAIE,KAAKrX,UAAL,CAAgB,CAAhB,CAAR;QACIoX,IAAIE,KAAKtX,UAAL,CAAgB,CAAhB,CAAR;;;QAGIuW,aAAaY,CAAb,KAAmBX,aAAaY,CAAb,CAAvB,EAAwC;WACjChC,cAAc,CAAC,CAAC+B,IAAI5B,MAAL,IAAeI,OAAf,IAA0ByB,IAAI5B,MAA9B,CAAD,IAA0CI,OAA7D;;;;MAIAn0B,IAAK+1B,QAAQA,KAAKxX,UAAL,CAAgB,CAAhB,CAAT,IAAgCyV,MAAxC;MACKiC,MAAM,IAAP,KAAiBj2B,MAAMg0B,MAAN,IAAgBgB,aAAah1B,CAAb,CAAjC,CAAJ,EAAuD;QACjDwE,IAAIyxB,MAAMj2B,IAAIg0B,MAAV,CAAR;;;;QAII52B,KAAKg2B,oBAAL,CAA0B5uB,CAA1B,CAAJ,EAAkC;UAC5B0xB,MAAMF,aAAab,CAAb,GAAiB,CAAjB,GAAqB,CAA/B;aACOpP,MAAP,CAAczoB,IAAI44B,GAAJ,GAAU,CAAxB,EAA2BA,GAA3B,EAAgCxP,SAAStpB,IAAT,EAAeoH,CAAf,EAAkBoF,MAAMkX,QAAxB,CAAhC;aACOxjB,IAAI44B,GAAJ,GAAU,CAAjB;;;;;MAKAN,IAAJ,EAAU;SAAO9U,QAAL,CAAc8U,IAAd,GAAqB,IAArB;;MACRC,IAAJ,EAAU;SAAO/U,QAAL,CAAc+U,IAAd,GAAqB,IAArB;;MACRE,IAAJ,EAAU;SAAOjV,QAAL,CAAciV,IAAd,GAAqB,IAArB;;;MAERC,aAAaX,EAAjB,EAAqB;;;;cAITprB,MAAV,EAAkB3M,IAAI,CAAtB,EAAyBF,IAAzB;WACOE,IAAI,CAAX;;;SAGKA,CAAP;;;AAGF,SAAS64B,SAAT,CAAmB9V,IAAnB,EAAyB;UACf6S,QAAQ7S,IAAR,CAAR;SACOgV,EAAL;SACKC,GAAL;aACS,CAAP;SACGH,CAAL;aACS,CAAP;SACGC,CAAL;aACS,CAAP;;;;AAIN,SAASgB,eAAT,CAAyBnsB,MAAzB,EAAiC3M,CAAjC,EAAoCF,IAApC,EAA0C;MACpCwM,QAAQK,OAAO3M,CAAP,CAAZ;MACI+iB,OAAOpW,OAAO3M,CAAP,EAAUihB,UAAV,CAAqB,CAArB,CAAX;;;MAGInhB,KAAKq4B,iBAAL,CAAuBpV,IAAvB,EAA6BgW,YAA7B,KAA8C,CAAlD,EAAqD;;;;MAEjD3J,OAAOziB,OAAO3M,IAAI,CAAX,EAAcihB,UAAd,CAAyB,CAAzB,CAAX;MACI7X,MAAMyvB,UAAUzJ,IAAV,CAAV;;SAEO3G,MAAP,CAAczoB,CAAd,EAAiB,CAAjB;SACO2M,OAAO8b,MAAP,CAAczoB,IAAIoJ,GAAlB,EAAuB,CAAvB,EAA0BkD,KAA1B,CAAP;;;AAGF,SAAS8pB,kBAAT,CAA4BzpB,MAA5B,EAAoC3M,CAApC,EAAuCF,IAAvC,EAA6C;MACvCwM,QAAQK,OAAO3M,CAAP,CAAZ;MACI+iB,OAAOpW,OAAO3M,CAAP,EAAUihB,UAAV,CAAqB,CAArB,CAAX;;MAEInhB,KAAKg2B,oBAAL,CAA0BmB,aAA1B,CAAJ,EAA8C;QACxC+B,eAAe5P,SAAStpB,IAAT,EAAem3B,aAAf,EAA8B3qB,MAAMkX,QAApC,CAAnB;;;QAGIV,MAAMhjB,KAAKq4B,iBAAL,CAAuBpV,IAAvB,EAA6BgW,YAA7B,KAA8C,CAA9C,GAAkD/4B,CAAlD,GAAsDA,IAAI,CAApE;WACOyoB,MAAP,CAAc3F,GAAd,EAAmB,CAAnB,EAAsBkW,YAAtB;;;;SAIKh5B,CAAP;;;;;;;;;;;;;;;;;;AC3RF,AACA,AACA,AACA,AACA,AAEOi5B,IAAAA,aAA8BC,QAA9BD;AAAYE,IAAAA,iBAAkBD,QAAlBC;AACnB,IAAM9K,SAAO,IAAIC,WAAJ,CAAgBzvB,QAAQ,IAAR,EAAcW,YAAd,CAA2B+uB,YAAY,WAAvC,CAAhB,CAAb;AACA,IAAM1F,eAAe,IAAIuQ,YAAJ,CAAiBF,OAAjB,CAArB;;;;;;;IAOqBG;;;;;;;;;kBAEZzL,qCAAaF,MAAM;SACnBV,QAAL,CAAcsM,cAAd;;;SAGKtM,QAAL,CAAc,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CAAd;;;SAGKA,QAAL,CAAcuM,sBAAd;SACKvM,QAAL,CAAc,CAAC,MAAD,CAAd,EAAwB,KAAxB;SACKA,QAAL,CAAcwM,UAAd;SACKxM,QAAL,CAAcuM,sBAAd;SACKvM,QAAL,CAAc,CAAC,MAAD,CAAd;SACKA,QAAL,CAAcyM,UAAd;;;SAGKzM,QAAL,CAAc,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,CAAd;SACKA,QAAL,CAAc0M,OAAd;;;;;;;SAOK1M,QAAL,CAAc,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,CAAd;;;kBAGKc,yCAAeJ,MAAM/gB,QAAQ;+BAGzB3M,CAHyB;UAI5Buc,YAAY5P,OAAO3M,CAAP,EAAUihB,UAAV,CAAqB,CAArB,CAAhB;UACIkY,eAAe5c,SAAf,CAAJ,EAA+B;YACzBod,aAAaR,eAAe5c,SAAf,EAA0B3T,GAA1B,CAA8B,aAAK;cAC9CgW,IAAI8O,KAAK5tB,IAAL,CAAUq4B,iBAAV,CAA4BxZ,CAA5B,CAAR;iBACO,IAAIoW,SAAJ,CAAcrH,KAAK5tB,IAAnB,EAAyB8e,EAAEK,EAA3B,EAA+B,CAACN,CAAD,CAA/B,EAAoChS,OAAO3M,CAAP,EAAUwjB,QAA9C,CAAP;SAFe,CAAjB;;eAKOiF,MAAP,gBAAczoB,CAAd,EAAiB,CAAjB,SAAuB25B,UAAvB;;;;;;SARC,IAAI35B,IAAI2M,OAAO1M,MAAP,GAAgB,CAA7B,EAAgCD,KAAK,CAArC,EAAwCA,GAAxC,EAA6C;YAApCA,CAAoC;;;;;EA/BJytB,yBACpCW,iBAAiB;AA4C1B,SAASwL,WAAT,CAAqBttB,KAArB,EAA4B;SACnB+hB,OAAK1tB,GAAL,CAAS2L,MAAM2U,UAAN,CAAiB,CAAjB,CAAT,CAAP;;;IAGI4Y,UACJ,iBAAYpK,QAAZ,EAAsBqK,YAAtB,EAAoCC,QAApC,EAA8C;;;OACvCtK,QAAL,GAAgBA,QAAhB;OACKqK,YAAL,GAAoBA,YAApB;OACKC,QAAL,GAAgBA,QAAhB;;;AAIJ,SAAST,cAAT,CAAwBx5B,IAAxB,EAA8B6M,MAA9B,EAAsC;MAChCotB,WAAW,CAAf;uBAC+BlR,aAAaiK,KAAb,CAAmBnmB,OAAO/D,GAAP,CAAWgxB,WAAX,CAAnB,CAA/B,6GAA4E;;;;;;;;;;;;;QAAlElzB,KAAkE;QAA3DC,GAA2D;QAAtDqzB,IAAsD;;MACxED,QAAF;;;SAGK,IAAI/5B,IAAI0G,KAAb,EAAoB1G,KAAK2G,GAAzB,EAA8B3G,GAA9B,EAAmC;aAC1BA,CAAP,EAAUq1B,UAAV,GAAuB,IAAIwE,OAAJ,CAAYZ,WAAWW,YAAYjtB,OAAO3M,CAAP,CAAZ,CAAX,CAAZ,EAAgDg6B,KAAK,CAAL,CAAhD,EAAyDD,QAAzD,CAAvB;;;;QAIEE,QAAQttB,OAAOjG,KAAP,EAAc2uB,UAAd,CAAyB5F,QAAzB,KAAsC,GAAtC,GAA4C,CAA5C,GAAgDjtB,KAAKqZ,GAAL,CAAS,CAAT,EAAYlV,MAAMD,KAAlB,CAA5D;SACK,IAAI1G,MAAI0G,KAAb,EAAoB1G,MAAI0G,QAAQuzB,KAAhC,EAAuCj6B,KAAvC,EAA4C;aACnCA,GAAP,EAAUwjB,QAAV,CAAmB0W,IAAnB,GAA0B,IAA1B;;;;;AAKN,SAASX,sBAAT,CAAgCz5B,IAAhC,EAAsC6M,MAAtC,EAA8C;wBAC1BA,MAAlB,oHAA0B;;;;;;;;;;;;QAAjBL,KAAiB;;UAClBgpB,WAAN,GAAoB,KAApB;;;;AAIJ,SAASkE,UAAT,CAAoB15B,IAApB,EAA0B6M,MAA1B,EAAkC;wBACdA,MAAlB,oHAA0B;;;;;;;;;;;;QAAjBL,KAAiB;;QACpBA,MAAMgpB,WAAN,IAAqBhpB,MAAMkX,QAAN,CAAe0W,IAAxC,EAA8C;;YAEtC7E,UAAN,CAAiB5F,QAAjB,GAA4B,GAA5B;;;;;AAKN,SAASgK,UAAT,CAAoB35B,IAApB,EAA0B6M,MAA1B,EAAkC;wBACdA,MAAlB,oHAA0B;;;;;;;;;;;;QAAjBL,KAAiB;;QACpBA,MAAMgpB,WAAV,EAAuB;;YAEfD,UAAN,CAAiB5F,QAAjB,GAA4B,MAA5B;;;;;AAKN,SAASiK,OAAT,CAAiB55B,IAAjB,EAAuB6M,MAAvB,EAA+B;MACzBqsB,eAAel5B,KAAKq4B,iBAAL,CAAuB,MAAvB,EAA+BlZ,EAAlD;;OAEK,IAAIvY,QAAQ,CAAZ,EAAeC,MAAMwzB,aAAaxtB,MAAb,EAAqB,CAArB,CAA1B,EAAmDjG,QAAQiG,OAAO1M,MAAlE,EAA0EyG,QAAQC,GAAR,EAAaA,MAAMwzB,aAAaxtB,MAAb,EAAqBjG,KAArB,CAA7F,EAA0H;QACpH1G,UAAJ;QAAOo6B,UAAP;QACIC,OAAO1tB,OAAOjG,KAAP,EAAc2uB,UAAzB;QACIjzB,OAAOi4B,KAAKP,YAAhB;;;QAGI13B,SAAS,2BAAT,IAAwCA,SAAS,kBAAjD,IAAuEA,SAAS,gBAApF,EAAsG;;;;;QAKlGA,SAAS,gBAAT,IAA6B42B,YAAjC,EAA+C;UACzCpa,IAAI,IAAImW,SAAJ,CAAcj1B,IAAd,EAAoBk5B,YAApB,EAAkC,CAAC,MAAD,CAAlC,CAAR;QACE3D,UAAF,GAAegF,IAAf;;;WAGKr6B,IAAI0G,KAAT,EAAgB1G,IAAI2G,GAAJ,IAAWgG,OAAO3M,CAAP,EAAUq1B,UAAV,CAAqB5F,QAArB,KAAkC,GAA7D,EAAkEzvB,GAAlE;aACOyoB,MAAP,CAAc,EAAEzoB,CAAhB,EAAmB,CAAnB,EAAsB4e,CAAtB;;;;;QAKEyb,KAAK5K,QAAL,KAAkB,GAAlB,IAAyB9oB,MAAMD,KAAN,GAAc,CAA3C,EAA8C;;WAEvC1G,IAAI0G,QAAQ,CAAjB,EAAoB1G,IAAI2G,GAAxB,EAA6B3G,GAA7B,EAAkC;eACzB2M,OAAO3M,CAAP,EAAUq1B,UAAjB;YACIiF,OAAOD,IAAP,KAAgBE,SAAS5tB,OAAO3M,CAAP,CAAT,CAApB,EAAyC;;;cAGnCu6B,SAAS5tB,OAAO3M,CAAP,CAAT,CAAJ,EAAyB;;;;iBAIlByoB,MAAP,gBAAc/hB,KAAd,EAAqB,CAArB,SAA2BiG,OAAO8b,MAAP,CAAc/hB,QAAQ,CAAtB,EAAyB1G,IAAI0G,KAA7B,CAA3B,GAAgEiG,OAAO3M,CAAP,CAAhE;;;;;;;SAODA,IAAI0G,KAAJ,EAAW0zB,IAAIzzB,GAApB,EAAyB3G,IAAI2G,GAA7B,EAAkC3G,GAAlC,EAAuC;aAC9B2M,OAAO3M,CAAP,EAAUq1B,UAAjB;UACIiF,OAAOD,IAAP,KAAgBE,SAAS5tB,OAAO3M,CAAP,CAAT,CAApB,EAAyC;;;YAGnCu6B,SAAS5tB,OAAO3M,CAAP,CAAT,IAAsBA,IAAI,CAA1B,GAA8BA,CAAlC;OAHF,MAIO,IAAI,CAACq6B,KAAK5K,QAAL,KAAkB,MAAlB,IAA4B4K,KAAK5K,QAAL,KAAkB,OAA/C,KAA2D2K,IAAIp6B,CAAnE,EAAsE;eACpEyoB,MAAP,gBAAc2R,CAAd,EAAiB,CAAjB,EAAoBztB,OAAO3M,CAAP,CAApB,SAAkC2M,OAAO8b,MAAP,CAAc2R,CAAd,EAAiBp6B,IAAIo6B,CAArB,CAAlC;;;;;;AAMR,SAASD,YAAT,CAAsBxtB,MAAtB,EAA8BjG,KAA9B,EAAqC;MAC/BA,SAASiG,OAAO1M,MAApB,EAA4B,OAAOyG,KAAP;MACxBqzB,WAAWptB,OAAOjG,KAAP,EAAc2uB,UAAd,CAAyB0E,QAAxC;SACO,EAAErzB,KAAF,GAAUiG,OAAO1M,MAAjB,IAA2B0M,OAAOjG,KAAP,EAAc2uB,UAAd,CAAyB0E,QAAzB,KAAsCA,QAAxE;SACOrzB,KAAP;;;AAGF,SAAS6zB,QAAT,CAAkBjuB,KAAlB,EAAyB;SAChBA,MAAM+oB,UAAN,CAAiB5F,QAAjB,KAA8B,GAA9B,IAAqC,CAACnjB,MAAMkuB,SAAnD;;;AAGF,SAASF,MAAT,CAAgBD,IAAhB,EAAsB;SACbA,KAAK5K,QAAL,KAAkB,GAAlB,IAAyB4K,KAAK5K,QAAL,KAAkB,IAAlD;;;ACjLF,IAAMgL,UAAU;QACRtL,YADQ;QAERA,YAFQ;QAGRA,YAHQ;UAINA,YAJM;QAKRA,YALQ;QAMRA,YANQ;QAORA,YAPQ;QAQRA,YARQ;;QAURwG,YAVQ;;QAYR0D,eAZQ;QAaRA,eAbQ;QAcRA,eAdQ;QAeRA,eAfQ;QAgBRA,eAhBQ;QAiBRA,eAjBQ;QAkBRA,eAlBQ;QAmBRA,eAnBQ;QAoBRA,eApBQ;QAqBRA,eArBQ;QAsBRA,eAtBQ;QAuBRA,eAvBQ;QAwBRA,eAxBQ;QAyBRA,eAzBQ;QA0BRA,eA1BQ;QA2BRA,eA3BQ;QA4BRA,eA5BQ;QA6BRA,eA7BQ;QA8BRA,eA9BQ;QA+BRA,eA/BQ;;;QAkCRA,eAlCQ;QAmCRA,eAnCQ;;;QAsCRA,eAtCQ;;;QAyCRA,eAzCQ;QA0CRA,eA1CQ;QA2CRA,eA3CQ;QA4CRA,eA5CQ;QA6CRA,eA7CQ;QA8CRA,eA9CQ;QA+CRA,eA/CQ;QAgDRA,eAhDQ;QAiDRA,eAjDQ;QAkDRA,eAlDQ;QAmDRA,eAnDQ;QAoDRA,eApDQ;QAqDRA,eArDQ;QAsDRA,eAtDQ;QAuDRA,eAvDQ;QAwDRA,eAxDQ;;QA0DR5L,aA1DQ;QA2DRA,aA3DQ;CAAhB;;AA8DA,AAAO,SAASiN,MAAT,CAAgBxX,MAAhB,EAAwB;MACzByX,SAASF,QAAQvX,MAAR,CAAb;MACIyX,MAAJ,EAAY;WAASA,MAAP;;;SAEPlN,aAAP;;;ICpEmBmN;;;;;;;;;0BACnBvI,mCAAY/b,YAAY2E,OAAO;;;YACrB3E,UAAR;WACO,CAAL;;;cACMhM,QAAQ,KAAKqoB,aAAL,CAAmB1X,MAAMoE,QAAzB,CAAZ;cACI/U,UAAU,CAAC,CAAf,EAAkB;mBACT,KAAP;;;cAGEgC,QAAQ,KAAK4lB,aAAL,CAAmBC,GAA/B;kBACQlX,MAAM9V,OAAd;iBACO,CAAL;oBACQ8Z,EAAN,GAAY3S,MAAM2S,EAAN,GAAWhE,MAAM4f,YAAlB,GAAkC,MAA7C;;;iBAGG,CAAL;oBACQ5b,EAAN,GAAWhE,MAAM2Q,UAAN,CAAiBjrB,GAAjB,CAAqB2J,KAArB,CAAX;;;;iBAIG,IAAP;;;WAGG,CAAL;;;cACMA,SAAQ,KAAKqoB,aAAL,CAAmB1X,MAAMoE,QAAzB,CAAZ;cACI/U,WAAU,CAAC,CAAf,EAAkB;;;;kBACZyoB,WAAW9X,MAAM6f,SAAN,CAAgBn6B,GAAhB,CAAoB2J,MAApB,CAAf;qBACK4nB,aAAL,CAAmBC,GAAnB,CAAuBlT,EAAvB,GAA4B8T,SAAS,CAAT,CAA5B;qBACKb,aAAL,CAAmBC,GAAnB,CAAuB8C,iBAAvB,GAA2C,CAA3C;;kBAEIzR,WAAW,OAAK0O,aAAL,CAAmBC,GAAnB,CAAuB3O,QAAtC;kBACIuX,WAAW,OAAK7I,aAAL,CAAmBC,GAAlC;kBACI6I,cAAcjI,SAASnP,KAAT,CAAe,CAAf,EAAkBhb,GAAlB,CAAsB,UAAC6D,GAAD,EAAMzM,CAAN,EAAY;oBAC9CsM,QAAQ,IAAIyoB,SAAJ,CAAc,OAAKj1B,IAAnB,EAAyB2M,GAAzB,EAA8BwuB,SAA9B,EAAyCzX,QAAzC,CAAZ;sBACM6R,UAAN,GAAmB0F,SAAS1F,UAA5B;sBACMmF,SAAN,GAAkBO,SAASP,SAA3B;sBACMvF,iBAAN,GAA0Bj1B,IAAI,CAA9B;sBACMs1B,WAAN,GAAoB,IAApB;uBACOhpB,KAAP;eANgB,CAAlB;;gCASKK,MAAL,EAAY8b,MAAZ,iBAAmB,OAAKyJ,aAAL,CAAmB5nB,KAAnB,GAA2B,CAA9C,EAAiD,CAAjD,SAAuD0wB,WAAvD;;mBACO;;;;;;;iBAGF,KAAP;;;WAGG,CAAL;;;cACM1wB,UAAQ,KAAKqoB,aAAL,CAAmB1X,MAAMoE,QAAzB,CAAZ;cACI/U,YAAU,CAAC,CAAf,EAAkB;gBACZ4wB,aAAa,CAAjB,CADgB;iBAEXhJ,aAAL,CAAmBC,GAAnB,CAAuBlT,EAAvB,GAA4BhE,MAAMkgB,YAAN,CAAmBx6B,GAAnB,CAAuB2J,OAAvB,EAA8B4wB,UAA9B,CAA5B;mBACO,IAAP;;;iBAGK,KAAP;;;WAGG,CAAL;;;cACM5wB,UAAQ,KAAKqoB,aAAL,CAAmB1X,MAAMoE,QAAzB,CAAZ;cACI/U,YAAU,CAAC,CAAf,EAAkB;mBACT,KAAP;;;+BAGmB2Q,MAAMmgB,YAAN,CAAmBz6B,GAAnB,CAAuB2J,OAAvB,CAArB,6GAAoD;;;;;;;;;;;;gBAA3C+wB,QAA2C;;gBAC9CrI,UAAU,KAAKE,oBAAL,CAA0B,CAA1B,EAA6BmI,SAAS7R,UAAtC,CAAd;gBACI,CAACwJ,OAAL,EAAc;;;;gBAIV+H,YAAW,KAAK7I,aAAL,CAAmBC,GAAlC;;;gBAGImJ,aAAaP,UAAS9Z,UAAT,CAAoB2C,KAApB,EAAjB;kCACkBoP,OAAlB,oHAA2B;;;;;;;;;;;;kBAAlB1oB,OAAkB;;yBACdnL,IAAX,mBAAmB,KAAKwN,MAAL,CAAYrC,OAAZ,EAAmB2W,UAAtC;;;;gBAIEsa,gBAAgB,IAAIxG,SAAJ,CAAc,KAAKj1B,IAAnB,EAAyBu7B,SAAS/uB,KAAlC,EAAyCgvB,UAAzC,EAAqDP,UAASvX,QAA9D,CAApB;0BACc6R,UAAd,GAA2B0F,UAAS1F,UAApC;0BACcmF,SAAd,GAA0B,IAA1B;0BACclF,WAAd,GAA4B,IAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;gBA0BIkG,iBAAiBT,UAASna,MAA9B;iBACK,IAAI5gB,IAAI,CAAb,EAAgBA,IAAIgzB,QAAQ/yB,MAAZ,IAAsBu7B,cAAtC,EAAsDx7B,GAAtD,EAA2D;+BACxC,KAAK2M,MAAL,CAAYqmB,QAAQhzB,CAAR,CAAZ,EAAwB4gB,MAAzC;;;0BAGYiQ,UAAd,GAA2B2K,iBAAiB,IAAjB,GAAwB,KAAK3K,UAAL,EAAnD;;gBAEI4K,YAAYV,UAASlK,UAAzB;gBACI6K,eAAeX,UAAS9Z,UAAT,CAAoBhhB,MAAvC;gBACI07B,WAAWD,YAAf;gBACI5Y,MAAM,KAAKoP,aAAL,CAAmB5nB,KAAnB,GAA2B,CAArC;;;;kCAIuB0oB,OAAvB,oHAAgC;;;;;;;;;;;;kBAAvB4I,UAAuB;;;kBAE1BJ,cAAJ,EAAoB;sBACZI,UAAN;eADF,MAEO;uBACE9Y,MAAM8Y,UAAb,EAAyB;sBACnB3G,oBAAoB0G,WAAWD,YAAX,GAA0Bl5B,KAAKqZ,GAAL,CAAS,KAAKlP,MAAL,CAAYmW,GAAZ,EAAiBmS,iBAAjB,IAAsC,CAA/C,EAAkDyG,YAAlD,CAAlD;uBACK/uB,MAAL,CAAYmW,GAAZ,EAAiB+N,UAAjB,GAA8B0K,cAAc1K,UAA5C;uBACKlkB,MAAL,CAAYmW,GAAZ,EAAiBmS,iBAAjB,GAAqCA,iBAArC;;;;;0BAKQ,KAAKtoB,MAAL,CAAYmW,GAAZ,EAAiB+N,UAA7B;6BACe,KAAKlkB,MAAL,CAAYmW,GAAZ,EAAiB7B,UAAjB,CAA4BhhB,MAA3C;0BACYy7B,YAAZ;oBAf8B;;;;gBAoB5BD,aAAa,CAACD,cAAlB,EAAkC;mBAC3B,IAAIx7B,MAAI8iB,GAAb,EAAkB9iB,MAAI,KAAK2M,MAAL,CAAY1M,MAAlC,EAA0CD,KAA1C,EAA+C;oBACzC,KAAK2M,MAAL,CAAY3M,GAAZ,EAAe6wB,UAAf,KAA8B4K,SAAlC,EAA6C;sBACvCxG,oBAAoB0G,WAAWD,YAAX,GAA0Bl5B,KAAKqZ,GAAL,CAAS,KAAKlP,MAAL,CAAY3M,GAAZ,EAAei1B,iBAAf,IAAoC,CAA7C,EAAgDyG,YAAhD,CAAlD;uBACK/uB,MAAL,CAAY3M,GAAZ,EAAei1B,iBAAf,GAAmCA,iBAAnC;iBAFF,MAGO;;;;;;;iBAON,IAAIj1B,MAAIgzB,QAAQ/yB,MAAR,GAAiB,CAA9B,EAAiCD,OAAK,CAAtC,EAAyCA,KAAzC,EAA8C;mBACvC2M,MAAL,CAAY8b,MAAZ,CAAmBuK,QAAQhzB,GAAR,CAAnB,EAA+B,CAA/B;;;iBAGG2M,MAAL,CAAY,KAAKulB,aAAL,CAAmB5nB,KAA/B,IAAwCixB,aAAxC;mBACO,IAAP;;;iBAGK,KAAP;;;WAGG,CAAL;;eACS,KAAK3H,YAAL,CAAkB3Y,KAAlB,CAAP;;WAEG,CAAL;;eACS,KAAKiZ,oBAAL,CAA0BjZ,KAA1B,CAAP;;WAEG,CAAL;;eACS,KAAKoX,WAAL,CAAiBpX,MAAM3E,UAAvB,EAAmC2E,MAAMpI,SAAzC,CAAP;;;cAGM,IAAIvS,KAAJ,sBAA6BgW,UAA7B,uBAAN;;;;;EAhLmCma;;ICDtBoL;;;;;;;;;0BACnBC,iDAAmBrJ,eAAe7xB,OAAO;QACnC8gB,WAAW,KAAK5C,SAAL,CAAe,KAAKoT,aAAL,CAAmB5B,SAAnB,CAA6BmC,aAA7B,CAAf,CAAf;QACI7xB,MAAMue,QAAN,IAAkB,IAAtB,EAA4B;eACjBA,QAAT,IAAqBve,MAAMue,QAA3B;;;QAGEve,MAAMqhB,QAAN,IAAkB,IAAtB,EAA4B;eACjBA,QAAT,IAAqBrhB,MAAMqhB,QAA3B;;;QAGErhB,MAAMm7B,UAAN,IAAoB,IAAxB,EAA8B;eACnB3a,OAAT,IAAoBxgB,MAAMm7B,UAA1B;;;QAGEn7B,MAAMo7B,UAAN,IAAoB,IAAxB,EAA8B;eACnB3a,OAAT,IAAoBzgB,MAAMo7B,UAA1B;;;;;;0BAMJ3J,mCAAY/b,YAAY2E,OAAO;YACrB3E,UAAR;WACO,CAAL;;;cACMhM,QAAQ,KAAKqoB,aAAL,CAAmB1X,MAAMoE,QAAzB,CAAZ;cACI/U,UAAU,CAAC,CAAf,EAAkB;mBACT,KAAP;;;kBAGM2Q,MAAM9V,OAAd;iBACO,CAAL;mBACO22B,kBAAL,CAAwB,CAAxB,EAA2B7gB,MAAMra,KAAjC;;;iBAGG,CAAL;mBACOk7B,kBAAL,CAAwB,CAAxB,EAA2B7gB,MAAMiF,MAAN,CAAavf,GAAb,CAAiB2J,KAAjB,CAA3B;;;;iBAIG,IAAP;;;WAGG,CAAL;;;cACM2xB,YAAY,KAAK/J,aAAL,CAAmB9B,IAAnB,EAAhB;cACI,CAAC6L,SAAL,EAAgB;mBACP,KAAP;;;cAGE3xB,SAAQ,KAAKqoB,aAAL,CAAmB1X,MAAMoE,QAAzB,CAAZ;cACI/U,WAAU,CAAC,CAAf,EAAkB;mBACT,KAAP;;;kBAGM2Q,MAAM9V,OAAd;iBACO,CAAL;;kBACM/D,MAAM6Z,MAAMihB,QAAN,CAAev7B,GAAf,CAAmB2J,MAAnB,CAAV;;mCAEiBlJ,GAAjB,6GAAsB;;;;;;;;;;;;oBAAbwe,KAAa;;oBAChBA,MAAKuc,WAAL,KAAqBF,UAAUhd,EAAnC,EAAuC;uBAChC6c,kBAAL,CAAwB,CAAxB,EAA2Blc,MAAKwc,MAAhC;uBACKN,kBAAL,CAAwB,CAAxB,EAA2Blc,MAAKyc,MAAhC;yBACO,IAAP;;;;qBAIG,KAAP;;iBAEG,CAAL;;kBACMC,SAAS,KAAKlJ,UAAL,CAAgB,KAAKlB,aAAL,CAAmBC,GAAnB,CAAuBlT,EAAvC,EAA2ChE,MAAMshB,SAAjD,CAAb;kBACIC,SAAS,KAAKpJ,UAAL,CAAgB6I,UAAUhd,EAA1B,EAA8BhE,MAAMwhB,SAApC,CAAb;kBACIH,WAAW,CAAC,CAAZ,IAAiBE,WAAW,CAAC,CAAjC,EAAoC;uBAC3B,KAAP;;;kBAGE5c,OAAO3E,MAAMyhB,YAAN,CAAmB/7B,GAAnB,CAAuB27B,MAAvB,EAA+B37B,GAA/B,CAAmC67B,MAAnC,CAAX;mBACKV,kBAAL,CAAwB,CAAxB,EAA2Blc,KAAKwc,MAAhC;mBACKN,kBAAL,CAAwB,CAAxB,EAA2Blc,KAAKyc,MAAhC;qBACO,IAAP;;;;WAID,CAAL;;;cACMM,YAAY,KAAKzK,aAAL,CAAmB5B,SAAnB,EAAhB;cACI2L,aAAY,KAAKtvB,MAAL,CAAYgwB,SAAZ,CAAhB;cACI,CAACV,UAAL,EAAgB;mBACP,KAAP;;;cAGEW,YAAY3hB,MAAM4hB,gBAAN,CAAuB,KAAKlK,aAAL,CAAmB1X,MAAMoE,QAAzB,CAAvB,CAAhB;cACI,CAACud,SAAD,IAAc,CAACA,UAAUE,UAA7B,EAAyC;mBAChC,KAAP;;;cAGEC,aAAa9hB,MAAM4hB,gBAAN,CAAuB,KAAKlK,aAAL,CAAmB1X,MAAMoE,QAAzB,EAAmC4c,WAAUhd,EAA7C,CAAvB,CAAjB;cACI,CAAC8d,UAAD,IAAe,CAACA,WAAWC,WAA/B,EAA4C;mBACnC,KAAP;;;cAGEzmB,QAAQ,KAAK0mB,SAAL,CAAeF,WAAWC,WAA1B,CAAZ;cACIxW,OAAO,KAAKyW,SAAL,CAAeL,UAAUE,UAAzB,CAAX;;cAEI3K,MAAM,KAAKrT,SAAL,CAAe,KAAKoT,aAAL,CAAmB5nB,KAAlC,CAAV;cACI2Y,OAAO,KAAKnE,SAAL,CAAe6d,SAAf,CAAX;;kBAEQ,KAAKpZ,SAAb;iBACO,KAAL;kBACMpE,QAAJ,GAAeqH,KAAK1I,CAAL,GAASqU,IAAI/Q,OAA5B;;kBAEI8b,IAAI3mB,MAAMuH,CAAN,GAAUmF,KAAK7B,OAAvB;mBACKjC,QAAL,IAAiB+d,CAAjB;mBACK9b,OAAL,IAAgB8b,CAAhB;;;iBAGG,KAAL;kBACM1W,KAAK1I,CAAL,GAASqU,IAAI/Q,OAAjB;kBACIjC,QAAJ,IAAgB+d,CAAhB;kBACI9b,OAAJ,IAAe8b,CAAf;mBACK/d,QAAL,GAAgB5I,MAAMuH,CAAN,GAAUmF,KAAK7B,OAA/B;;;;cAIA,KAAK8Q,aAAL,CAAmB1a,KAAnB,CAAyB2lB,WAA7B,EAA0C;iBACnCjL,aAAL,CAAmBC,GAAnB,CAAuBgD,iBAAvB,GAA2CwH,SAA3C;gBACItb,OAAJ,GAAc9K,MAAMgM,CAAN,GAAUiE,KAAKjE,CAA7B;WAFF,MAGO;uBACK4S,iBAAV,GAA8B,KAAKjD,aAAL,CAAmB5nB,KAAjD;gBACI+W,OAAJ,GAAcmF,KAAKjE,CAAL,GAAShM,MAAMgM,CAA7B;;;iBAGK,IAAP;;;WAGG,CAAL;;;cACM4G,YAAY,KAAKwJ,aAAL,CAAmB1X,MAAMmiB,YAAzB,CAAhB;cACIjU,cAAc,CAAC,CAAnB,EAAsB;mBACb,KAAP;;;;cAIEkU,iBAAiB,KAAKnL,aAAL,CAAmB5nB,KAAxC;iBACO,EAAE+yB,cAAF,IAAoB,CAApB,IAAyB,KAAK1wB,MAAL,CAAY0wB,cAAZ,EAA4Bzc,MAA5D;;cAEIyc,iBAAiB,CAArB,EAAwB;mBACf,KAAP;;;cAGEC,YAAY,KAAK3K,aAAL,CAAmB1X,MAAMsiB,YAAzB,EAAuC,KAAK5wB,MAAL,CAAY0wB,cAAZ,EAA4Bpe,EAAnE,CAAhB;cACIqe,cAAc,CAAC,CAAnB,EAAsB;mBACb,KAAP;;;cAGEE,aAAaviB,MAAMwiB,SAAN,CAAgBtU,SAAhB,CAAjB;cACIuU,aAAaziB,MAAM0iB,SAAN,CAAgBL,SAAhB,EAA2BE,WAAW/J,KAAtC,CAAjB;eACKmK,WAAL,CAAiBJ,UAAjB,EAA6BE,UAA7B,EAAyCL,cAAzC;iBACO,IAAP;;;WAGG,CAAL;;;cACMlU,aAAY,KAAKwJ,aAAL,CAAmB1X,MAAMmiB,YAAzB,CAAhB;cACIjU,eAAc,CAAC,CAAnB,EAAsB;mBACb,KAAP;;;;cAIEkU,kBAAiB,KAAKnL,aAAL,CAAmB5nB,KAAxC;iBACO,EAAE+yB,eAAF,IAAoB,CAApB,IAAyB,KAAK1wB,MAAL,CAAY0wB,eAAZ,EAA4Bzc,MAA5D;;cAEIyc,kBAAiB,CAArB,EAAwB;mBACf,KAAP;;;cAGEQ,WAAW,KAAKlL,aAAL,CAAmB1X,MAAM6iB,gBAAzB,EAA2C,KAAKnxB,MAAL,CAAY0wB,eAAZ,EAA4Bpe,EAAvE,CAAf;cACI4e,aAAa,CAAC,CAAlB,EAAqB;mBACZ,KAAP;;;cAGEE,YAAY9iB,MAAM+iB,aAAN,CAAoBH,QAApB,CAAhB;cACII,YAAY,KAAK/L,aAAL,CAAmBC,GAAnC;cACI+L,WAAW,KAAKvxB,MAAL,CAAY0wB,eAAZ,CAAf;cACIc,YAAYD,SAASrN,UAAT,IAAuBqN,SAASrN,UAAT,KAAwBoN,UAAUpN,UAAzD,IAAwEoN,UAAUhJ,iBAAV,IAA+B,IAAvG,GACZzyB,KAAKqZ,GAAL,CAASoiB,UAAUhJ,iBAAnB,EAAsCiJ,SAASjd,UAAT,CAAoBhhB,MAA1D,IAAoE,CADxD,GAEZi+B,SAASjd,UAAT,CAAoBhhB,MAApB,GAA6B,CAFjC;;cAIIu9B,cAAaviB,MAAMwiB,SAAN,CAAgBtU,UAAhB,CAAjB;cACIuU,cAAaK,UAAUI,SAAV,EAAqBX,YAAW/J,KAAhC,CAAjB;eACKmK,WAAL,CAAiBJ,WAAjB,EAA6BE,WAA7B,EAAyCL,eAAzC;iBACO,IAAP;;;WAGG,CAAL;;;cACMe,aAAa,KAAKzL,aAAL,CAAmB1X,MAAMojB,aAAzB,CAAjB;cACID,eAAe,CAAC,CAApB,EAAuB;mBACd,KAAP;;;;cAIEE,YAAY,KAAKpM,aAAL,CAAmB5B,SAAnB,CAA6B,CAAC,CAA9B,CAAhB;cACIlB,OAAO,KAAKziB,MAAL,CAAY2xB,SAAZ,CAAX;cACI,CAAClP,IAAD,IAAS,CAACA,KAAKxO,MAAnB,EAA2B;mBAClB,KAAP;;;cAGEuR,OAAM,KAAKD,aAAL,CAAmBC,GAA7B;;;cAGIoM,OAAO,KAAX;cACIpM,KAAItB,UAAJ,KAAmBzB,KAAKyB,UAA5B,EAAwC;gBAClC,CAACsB,KAAItB,UAAT,EAAqB;;qBACZ,IAAP;aADF,MAEO,IAAIsB,KAAI8C,iBAAJ,KAA0B7F,KAAK6F,iBAAnC,EAAsD;;qBACpD,IAAP;;WAJJ,MAMO;;;gBAGA9C,KAAItB,UAAJ,IAAkB,CAACsB,KAAI8C,iBAAxB,IAA+C7F,KAAKyB,UAAL,IAAmB,CAACzB,KAAK6F,iBAA5E,EAAgG;qBACvF,IAAP;;;;cAIA,CAACsJ,IAAL,EAAW;mBACF,KAAP;;;cAGEC,aAAa,KAAK7L,aAAL,CAAmB1X,MAAMwjB,aAAzB,EAAwCrP,KAAKnQ,EAA7C,CAAjB;cACIuf,eAAe,CAAC,CAApB,EAAuB;mBACd,KAAP;;;cAGEhB,eAAaviB,MAAMyjB,UAAN,CAAiBN,UAAjB,CAAjB;cACIV,eAAaziB,MAAM0jB,UAAN,CAAiBH,UAAjB,EAA6BhB,aAAW/J,KAAxC,CAAjB;eACKmK,WAAL,CAAiBJ,YAAjB,EAA6BE,YAA7B,EAAyCY,SAAzC;iBACO,IAAP;;;WAGG,CAAL;;eACS,KAAK1K,YAAL,CAAkB3Y,KAAlB,CAAP;;WAEG,CAAL;;eACS,KAAKiZ,oBAAL,CAA0BjZ,KAA1B,CAAP;;WAEG,CAAL;;eACS,KAAKoX,WAAL,CAAiBpX,MAAM3E,UAAvB,EAAmC2E,MAAMpI,SAAzC,CAAP;;;cAGM,IAAIvS,KAAJ,8BAAqCgW,UAArC,CAAN;;;;0BAINsnB,mCAAYJ,YAAYE,YAAYL,gBAAgB;QAC9CuB,aAAa,KAAK3B,SAAL,CAAeS,UAAf,CAAjB;QACImB,aAAa,KAAK5B,SAAL,CAAeO,WAAWsB,UAA1B,CAAjB;;QAEIC,UAAU,KAAKjgB,SAAL,CAAeue,cAAf,CAAd;QACI2B,UAAU,KAAKlgB,SAAL,CAAe,KAAKoT,aAAL,CAAmB5nB,KAAlC,CAAd;;YAEQ8W,OAAR,GAAkBwd,WAAW9gB,CAAX,GAAe+gB,WAAW/gB,CAA5C;YACQuD,OAAR,GAAkBud,WAAWrc,CAAX,GAAesc,WAAWtc,CAA5C;SACK2P,aAAL,CAAmBC,GAAnB,CAAuBiD,cAAvB,GAAwCiI,cAAxC;;;0BAGFJ,+BAAUgC,QAAQ;;WAET;SACFA,OAAOC,WADL;SAEFD,OAAOE;KAFZ;;;0BAMF/R,uCAAcW,cAAcphB,QAAQqlB,UAAU;2BACtC5E,aAAN,YAAoBW,YAApB,EAAkCphB,MAAlC,EAA0CqlB,QAA1C;;SAEK,IAAIhyB,IAAI,CAAb,EAAgBA,IAAI,KAAK2M,MAAL,CAAY1M,MAAhC,EAAwCD,GAAxC,EAA6C;WACtCo/B,oBAAL,CAA0Bp/B,CAA1B;;;SAGGq/B,iBAAL;;;0BAGFD,qDAAqBp/B,GAAG;QAClBsM,QAAQ,KAAKK,MAAL,CAAY3M,CAAZ,CAAZ;QACIsM,MAAM6oB,iBAAN,IAA2B,IAA/B,EAAqC;UAC/BiF,IAAI9tB,MAAM6oB,iBAAd;;YAEMA,iBAAN,GAA0B,IAA1B;WACKiK,oBAAL,CAA0BhF,CAA1B;;WAEKtb,SAAL,CAAe9e,CAAf,EAAkBqhB,OAAlB,IAA6B,KAAKvC,SAAL,CAAesb,CAAf,EAAkB/Y,OAA/C;;;;0BAIJge,iDAAoB;SACb,IAAIr/B,IAAI,CAAb,EAAgBA,IAAI,KAAK2M,MAAL,CAAY1M,MAAhC,EAAwCD,GAAxC,EAA6C;UACvCsM,QAAQ,KAAKK,MAAL,CAAY3M,CAAZ,CAAZ;UACIsM,MAAM8oB,cAAN,IAAwB,IAA5B,EAAkC;YAC5BgF,IAAI9tB,MAAM8oB,cAAd;;aAEKtW,SAAL,CAAe9e,CAAf,EAAkBohB,OAAlB,IAA6B,KAAKtC,SAAL,CAAesb,CAAf,EAAkBhZ,OAA/C;aACKtC,SAAL,CAAe9e,CAAf,EAAkBqhB,OAAlB,IAA6B,KAAKvC,SAAL,CAAesb,CAAf,EAAkB/Y,OAA/C;;YAEI,KAAKkC,SAAL,KAAmB,KAAvB,EAA8B;eACvB,IAAIla,IAAI+wB,CAAb,EAAgB/wB,IAAIrJ,CAApB,EAAuBqJ,GAAvB,EAA4B;iBACrByV,SAAL,CAAe9e,CAAf,EAAkBohB,OAAlB,IAA6B,KAAKtC,SAAL,CAAezV,CAAf,EAAkB8V,QAA/C;iBACKL,SAAL,CAAe9e,CAAf,EAAkBqhB,OAAlB,IAA6B,KAAKvC,SAAL,CAAezV,CAAf,EAAkB4Y,QAA/C;;;;;;;;EAhT+BwO;;ICItB6O;0BACPx/B,IAAZ,EAAkB;;;SACXA,IAAL,GAAYA,IAAZ;SACKy/B,UAAL,GAAkB,IAAlB;SACK7R,IAAL,GAAY,IAAZ;SACKkN,aAAL,GAAqB,IAArB;SACKiB,aAAL,GAAqB,IAArB;;QAEI/7B,KAAKga,IAAT,EAAe;WACR8gB,aAAL,GAAqB,IAAIA,aAAJ,CAAkB96B,IAAlB,EAAwBA,KAAKga,IAA7B,CAArB;;;QAGEha,KAAK+Z,IAAT,EAAe;WACRgiB,aAAL,GAAqB,IAAIA,aAAJ,CAAkB/7B,IAAlB,EAAwBA,KAAK+Z,IAA7B,CAArB;;;;2BAIJ2lB,uBAAM7yB,QAAQ6W,UAAUN,QAAQve,UAAU;;;;;SAGnC46B,UAAL,GAAkB5yB,OAAO/D,GAAP,CAAW;aAAS,IAAImsB,SAAJ,CAAc,MAAKj1B,IAAnB,EAAyBwM,MAAM2S,EAA/B,YAAuC3S,MAAM2U,UAA7C,EAAT;KAAX,CAAlB;;;;SAIK0Z,MAAL,GAAc8E,MAAA,CAAevc,MAAf,CAAd;SACKwK,IAAL,GAAY,IAAIrB,WAAJ,CAAgB,KAAKvsB,IAArB,EAA2BojB,MAA3B,EAAmCve,QAAnC,CAAZ;WACO,KAAKg2B,MAAL,CAAYjN,IAAZ,CAAiB,KAAKA,IAAtB,EAA4B,KAAK6R,UAAjC,EAA6C/b,QAA7C,CAAP;;;2BAGFoI,iCAAWjf,QAAQ;;;QACb,KAAKiuB,aAAT,EAAwB;WACjBlN,IAAL,CAAUnpB,OAAV,CAAkB,KAAKq2B,aAAvB,EAAsC,KAAK2E,UAA3C;;;eAGS,KAAKA,UAAL,CAAgB32B,GAAhB,CAAoB;eAAa,OAAK9I,IAAL,CAAUspB,QAAV,CAAmBsW,UAAUzgB,EAA7B,EAAiCygB,UAAUze,UAA3C,CAAb;OAApB,CAAT;;;WAGKtU,MAAP;;;2BAGF+U,6BAAS/U,QAAQmS,WAAW;QACtB,KAAK6b,MAAL,CAAYvM,cAAZ,KAA+B,aAAnC,EAAkD;WAC3CuR,gBAAL,CAAsB7gB,SAAtB;;;QAGE,KAAK+c,aAAT,EAAwB;WACjBnO,IAAL,CAAUnpB,OAAV,CAAkB,KAAKs3B,aAAvB,EAAsC,KAAK0D,UAA3C,EAAuDzgB,SAAvD;;;QAGE,KAAK6b,MAAL,CAAYvM,cAAZ,KAA+B,YAAnC,EAAiD;WAC1CuR,gBAAL,CAAsB7gB,SAAtB;;;;QAIE,KAAK4O,IAAL,CAAUnK,SAAV,KAAwB,KAA5B,EAAmC;aAC1BiC,OAAP;gBACUA,OAAV;;;WAGK,KAAKqW,aAAL,IAAsB,KAAKA,aAAL,CAAmBrY,QAAhD;;;2BAGFmc,6CAAiB7gB,WAAW;SACrB,IAAI9e,IAAI,CAAb,EAAgBA,IAAI,KAAKu/B,UAAL,CAAgBt/B,MAApC,EAA4CD,GAA5C,EAAiD;UAC3C,KAAKu/B,UAAL,CAAgBv/B,CAAhB,EAAmB4gB,MAAvB,EAA+B;kBACnB5gB,CAAV,EAAamf,QAAb,GAAwB,CAAxB;kBACUnf,CAAV,EAAaiiB,QAAb,GAAwB,CAAxB;;;;;2BAKN2d,6BAAU;SACHL,UAAL,GAAkB,IAAlB;SACK7R,IAAL,GAAY,IAAZ;SACKiN,MAAL,GAAc,IAAd;;;2BAGF5O,qDAAqB7I,QAAQve,UAAU;QACjC6e,WAAW,EAAf;;QAEI,KAAKoX,aAAT,EAAwB;WACjBA,aAAL,CAAmBzN,YAAnB,CAAgCjK,MAAhC,EAAwCve,QAAxC;eACSxF,IAAT,iBAAiB,aAAY,KAAKy7B,aAAL,CAAmBpX,QAA/B,CAAjB;;;QAGE,KAAKqY,aAAT,EAAwB;WACjBA,aAAL,CAAmB1O,YAAnB,CAAgCjK,MAAhC,EAAwCve,QAAxC;eACSxF,IAAT,iBAAiB,aAAY,KAAK08B,aAAL,CAAmBrY,QAA/B,CAAjB;;;WAGKA,QAAP;;;;;;ICvFiBqc;wBACP//B,IAAZ,EAAkB;;;SACXA,IAAL,GAAYA,IAAZ;SACKggC,mBAAL,GAA2B,IAA3B;SACKC,aAAL,GAAqB,IAArB;;;;QAII,KAAKjgC,IAAL,CAAU+a,IAAd,EAAoB;WACbmlB,MAAL,GAAc,IAAItU,eAAJ,CAAoB,KAAK5rB,IAAzB,CAAd;KADF,MAGO,IAAI,KAAKA,IAAL,CAAUga,IAAV,IAAkB,KAAKha,IAAL,CAAU+Z,IAAhC,EAAsC;WACtCmmB,MAAL,GAAc,IAAIV,cAAJ,CAAmB,KAAKx/B,IAAxB,CAAd;;;;yBAIJmgC,yBAAOj7B,QAAyC;QAAjCwe,QAAiC,uEAAtB,EAAsB;QAAlBN,MAAkB;QAAVve,QAAU;;;QAE1C,OAAO6e,QAAP,KAAoB,QAAxB,EAAkC;eACvBA,QAAT;iBACWN,MAAX;iBACW,EAAX;;;;QAIE,OAAOle,MAAP,KAAkB,QAAtB,EAAgC;;UAE1Bke,UAAU,IAAd,EAAoB;iBACTpU,SAAA,CAAiB9J,MAAjB,CAAT;;;UAGE2H,SAAS,KAAK7M,IAAL,CAAUogC,eAAV,CAA0Bl7B,MAA1B,CAAb;KANF,MAOO;;UAEDke,UAAU,IAAd,EAAoB;YACdjC,aAAa,EAAjB;6BACkBjc,MAAlB,6GAA0B;;;;;;;;;;;;cAAjBsH,KAAiB;;qBACbnN,IAAX,mBAAmBmN,MAAM2U,UAAzB;;;iBAGOnS,aAAA,CAAqBmS,UAArB,CAAT;;;UAGEtU,SAAS3H,MAAb;;;;QAIE2H,OAAO1M,MAAP,KAAkB,CAAtB,EAAyB;aAChB,IAAIuiB,QAAJ,CAAa7V,MAAb,EAAqB,EAArB,CAAP;;;;QAIE,KAAKqzB,MAAL,IAAe,KAAKA,MAAL,CAAYR,KAA/B,EAAsC;WAC/BQ,MAAL,CAAYR,KAAZ,CAAkB7yB,MAAlB,EAA0B6W,QAA1B,EAAoCN,MAApC,EAA4Cve,QAA5C;;;;aAIO,KAAKinB,UAAL,CAAgBjf,MAAhB,EAAwB6W,QAAxB,EAAkCN,MAAlC,EAA0Cve,QAA1C,CAAT;QACIma,YAAY,KAAK4C,QAAL,CAAc/U,MAAd,EAAsB6W,QAAtB,EAAgCN,MAAhC,EAAwCve,QAAxC,CAAhB;;;QAGI,KAAKq7B,MAAL,IAAe,KAAKA,MAAL,CAAYJ,OAA/B,EAAwC;WACjCI,MAAL,CAAYJ,OAAZ;;;WAGK,IAAIpd,QAAJ,CAAa7V,MAAb,EAAqBmS,SAArB,CAAP;;;yBAGF8M,iCAAWjf,QAAQ6W,UAAUN,QAAQve,UAAU;;QAEzC,KAAKq7B,MAAL,IAAe,KAAKA,MAAL,CAAYpU,UAA/B,EAA2C;eAChC,KAAKoU,MAAL,CAAYpU,UAAZ,CAAuBjf,MAAvB,EAA+B6W,QAA/B,EAAyCN,MAAzC,EAAiDve,QAAjD,CAAT;;;WAGKgI,MAAP;;;yBAGF+U,6BAAS/U,QAAQ6W,UAAUN,QAAQve,UAAU;;QAEvCma,YAAYnS,OAAO/D,GAAP,CAAW;aAAS,IAAI+Z,aAAJ,CAAkBrW,MAAMysB,YAAxB,CAAT;KAAX,CAAhB;QACIoH,aAAa,IAAjB;;;QAGI,KAAKH,MAAL,IAAe,KAAKA,MAAL,CAAYte,QAA/B,EAAyC;mBAC1B,KAAKse,MAAL,CAAYte,QAAZ,CAAqB/U,MAArB,EAA6BmS,SAA7B,EAAwC0E,QAAxC,EAAkDN,MAAlD,EAA0Dve,QAA1D,CAAb;;;;QAIE,CAACw7B,UAAL,EAAiB;UACX,CAAC,KAAKL,mBAAV,EAA+B;aACxBA,mBAAL,GAA2B,IAAItf,mBAAJ,CAAwB,KAAK1gB,IAA7B,CAA3B;;;WAGGggC,mBAAL,CAAyBrf,cAAzB,CAAwC9T,MAAxC,EAAgDmS,SAAhD;;;;QAIE,CAAC,CAACqhB,UAAD,IAAe,CAACA,WAAWhmB,IAA5B,KAAqC,KAAKra,IAAL,CAAUqa,IAAnD,EAAyD;UACnD,CAAC,KAAK4lB,aAAV,EAAyB;aAClBA,aAAL,GAAqB,IAAIlhB,aAAJ,CAAkB,KAAK/e,IAAvB,CAArB;;;WAGGigC,aAAL,CAAmBx7B,OAAnB,CAA2BoI,MAA3B,EAAmCmS,SAAnC;;;WAGKA,SAAP;;;yBAGFiN,qDAAqB7I,QAAQve,UAAU;QACjC6e,WAAW,EAAf;;QAEI,KAAKwc,MAAT,EAAiB;eACN7gC,IAAT,iBAAiB,KAAK6gC,MAAL,CAAYjU,oBAAZ,CAAiC7I,MAAjC,EAAyCve,QAAzC,CAAjB;;;QAGE,KAAK7E,IAAL,CAAUqa,IAAV,IAAkBqJ,SAASne,OAAT,CAAiB,MAAjB,MAA6B,CAAC,CAApD,EAAuD;eAC5ClG,IAAT,CAAc,MAAd;;;WAGKqkB,QAAP;;;yBAGFwI,2CAAgBvf,KAAK;QACfvL,SAAS,UAAb;;QAEI+f,aAAa,KAAKnhB,IAAL,CAAUssB,cAAV,CAAyB3N,kBAAzB,CAA4ChS,GAA5C,CAAjB;0BACsBwU,UAAtB,oHAAkC;;;;;;;;;;;;UAAzBiB,SAAyB;;aACzBoE,GAAP,CAAW,sBAAqBpE,SAArB,CAAX;;;QAGE,KAAK8d,MAAL,IAAe,KAAKA,MAAL,CAAYhU,eAA/B,EAAgD;4BAC3B,KAAKgU,MAAL,CAAYhU,eAAZ,CAA4Bvf,GAA5B,CAAnB,oHAAqD;;;;;;;;;;;;YAA5CzH,MAA4C;;eAC5CshB,GAAP,CAAWthB,MAAX;;;;WAIG,YAAW9D,MAAX,CAAP;;;;;;AC/IJ,IAAMk/B,eAAe;UACX,GADW;UAEX,GAFW;oBAGD,GAHC;iBAIJ,GAJI;aAKR;CALb;;;;;;;;;IAcqBC;kBACL;;;SACPC,QAAL,GAAgB,EAAhB;SACKC,KAAL,GAAa,IAAb;SACKC,KAAL,GAAa,IAAb;;;;;;;;;;iBAQFC,mCAAa;QACPC,OAAO,KAAKJ,QAAL,CAAc13B,GAAd,CAAkB;wBAAc+V,EAAEgiB,OAAhB,SAA2BhiB,EAAE3d,IAAF,CAAO4/B,IAAP,CAAY,IAAZ,CAA3B;KAAlB,CAAX;WACO,IAAIC,QAAJ,CAAa,KAAb,EAAoBH,KAAKE,IAAL,CAAU,IAAV,CAApB,CAAP;;;;;;;;;iBAOFE,yBAAQ;QACFJ,OAAO,KAAKJ,QAAL,CAAc13B,GAAd,CAAkB,aAAK;UAC5B5H,OAAO2d,EAAE3d,IAAF,CAAO4H,GAAP,CAAW;eAAOpG,KAAKu+B,KAAL,CAAWnU,MAAM,GAAjB,IAAwB,GAA/B;OAAX,CAAX;kBACUwT,aAAazhB,EAAEgiB,OAAf,CAAV,GAAoC3/B,KAAK4/B,IAAL,CAAU,GAAV,CAApC;KAFS,CAAX;;WAKOF,KAAKE,IAAL,CAAU,EAAV,CAAP;;;;;;;;;;;;;;wBAUS;UACL,CAAC,KAAKJ,KAAV,EAAiB;YACXzf,OAAO,IAAIqB,IAAJ,EAAX;6BACoB,KAAKke,QAAzB,6GAAmC;;;;;;;;;;;;cAA1BK,OAA0B;;eAC5B,IAAI3gC,MAAI,CAAb,EAAgBA,MAAI2gC,QAAQ3/B,IAAR,CAAaf,MAAjC,EAAyCD,OAAK,CAA9C,EAAiD;iBAC1CsiB,QAAL,CAAcqe,QAAQ3/B,IAAR,CAAahB,GAAb,CAAd,EAA+B2gC,QAAQ3/B,IAAR,CAAahB,MAAI,CAAjB,CAA/B;;;;aAICwgC,KAAL,GAAa,eAAczf,IAAd,CAAb;;;aAGK,KAAKyf,KAAZ;;;;;;;;;;;wBAQS;UACL,KAAKD,KAAT,EAAgB;eACP,KAAKA,KAAZ;;;UAGE9d,OAAO,IAAIL,IAAJ,EAAX;UACI4e,KAAK,CAAT;UAAYC,KAAK,CAAjB;;UAEI9c,IAAI,SAAJA,CAAI;eACN3hB,KAAK0+B,GAAL,CAAS,IAAIx+B,CAAb,EAAgB,CAAhB,IAAqBy+B,GAAGnhC,CAAH,CAArB,GACI,IAAIwC,KAAK0+B,GAAL,CAAS,IAAIx+B,CAAb,EAAgB,CAAhB,CAAJ,GAAyBA,CAAzB,GAA6B0+B,GAAGphC,CAAH,CADjC,GAEI,KAAK,IAAI0C,CAAT,IAAcF,KAAK0+B,GAAL,CAASx+B,CAAT,EAAY,CAAZ,CAAd,GAA+B2+B,GAAGrhC,CAAH,CAFnC,GAGIwC,KAAK0+B,GAAL,CAASx+B,CAAT,EAAY,CAAZ,IAAiB4+B,GAAGthC,CAAH,CAJf;OAAR;;4BAOc,KAAKsgC,QAAnB,oHAA6B;;;;;;;;;;;;YAApB3hB,CAAoB;;gBACnBA,EAAEgiB,OAAV;eACO,QAAL;eACK,QAAL;0BACehiB,EAAE3d,IADjB;gBACO8c,CADP;gBACUyE,CADV;;iBAEOD,QAAL,CAAcxE,CAAd,EAAiByE,CAAjB;iBACKzE,CAAL;iBACKyE,CAAL;;;eAGG,kBAAL;eACK,eAAL;gBACM5D,EAAEgiB,OAAF,KAAc,kBAAlB,EAAsC;;6BAEPhiB,EAAE3d,IAFK;kBAE/BugC,IAF+B;kBAEzBC,IAFyB;kBAEnBC,GAFmB;kBAEdC,GAFc;;kBAGhCC,OAAOX,KAAK,IAAI,CAAJ,IAASO,OAAOP,EAAhB,CAAhB,CAHoC;kBAIhCY,OAAOX,KAAK,IAAI,CAAJ,IAASO,OAAOP,EAAhB,CAAhB;kBACIY,OAAOJ,MAAM,IAAI,CAAJ,IAASF,OAAOE,GAAhB,CAAjB,CALoC;kBAMhCK,OAAOJ,MAAM,IAAI,CAAJ,IAASF,OAAOE,GAAhB,CAAjB;aANF,MAOO;6BACoC/iB,EAAE3d,IADtC;kBACA2gC,IADA;kBACMC,IADN;kBACYC,IADZ;kBACkBC,IADlB;kBACwBL,GADxB;kBAC6BC,GAD7B;;;;iBAKFpf,QAAL,CAAcmf,GAAd,EAAmBC,GAAnB;;gBAEIP,KAAK,CAACH,EAAD,EAAKC,EAAL,CAAT;gBACIG,KAAK,CAACO,IAAD,EAAOC,IAAP,CAAT;gBACIP,KAAK,CAACQ,IAAD,EAAOC,IAAP,CAAT;gBACIR,KAAK,CAACG,GAAD,EAAMC,GAAN,CAAT;;iBAEK,IAAI1hC,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;kBACvB2H,IAAI,IAAIw5B,GAAGnhC,CAAH,CAAJ,GAAY,KAAKohC,GAAGphC,CAAH,CAAjB,GAAyB,IAAIqhC,GAAGrhC,CAAH,CAArC;kBACI+xB,IAAI,CAAC,CAAD,GAAKoP,GAAGnhC,CAAH,CAAL,GAAa,IAAIohC,GAAGphC,CAAH,CAAjB,GAAyB,IAAIqhC,GAAGrhC,CAAH,CAA7B,GAAqC,IAAIshC,GAAGthC,CAAH,CAAjD;kBACI,IAAIohC,GAAGphC,CAAH,CAAJ,GAAY,IAAImhC,GAAGnhC,CAAH,CAApB;;kBAEI+xB,MAAM,CAAV,EAAa;oBACPpqB,MAAM,CAAV,EAAa;;;;oBAITjF,IAAI,CAACic,CAAD,GAAKhX,CAAb;oBACI,IAAIjF,CAAJ,IAASA,IAAI,CAAjB,EAAoB;sBACd1C,MAAM,CAAV,EAAa;yBACNsiB,QAAL,CAAc6B,EAAEzhB,CAAF,CAAd,EAAoB+f,KAAKV,IAAzB;mBADF,MAEO,IAAI/hB,MAAM,CAAV,EAAa;yBACbsiB,QAAL,CAAcG,KAAKZ,IAAnB,EAAyBsC,EAAEzhB,CAAF,CAAzB;;;;;;;kBAOFq/B,OAAOv/B,KAAK0+B,GAAL,CAASv5B,CAAT,EAAY,CAAZ,IAAiB,IAAIgX,CAAJ,GAAQoT,CAApC;kBACIgQ,OAAO,CAAX,EAAc;;;;kBAIVC,KAAK,CAAC,CAACr6B,CAAD,GAAKnF,KAAKy/B,IAAL,CAAUF,IAAV,CAAN,KAA0B,IAAIhQ,CAA9B,CAAT;kBACI,IAAIiQ,EAAJ,IAAUA,KAAK,CAAnB,EAAsB;oBAChBhiC,MAAM,CAAV,EAAa;uBACNsiB,QAAL,CAAc6B,EAAE6d,EAAF,CAAd,EAAqBvf,KAAKV,IAA1B;iBADF,MAEO,IAAI/hB,MAAM,CAAV,EAAa;uBACbsiB,QAAL,CAAcG,KAAKZ,IAAnB,EAAyBsC,EAAE6d,EAAF,CAAzB;;;;kBAIAE,KAAK,CAAC,CAACv6B,CAAD,GAAKnF,KAAKy/B,IAAL,CAAUF,IAAV,CAAN,KAA0B,IAAIhQ,CAA9B,CAAT;kBACI,IAAImQ,EAAJ,IAAUA,KAAK,CAAnB,EAAsB;oBAChBliC,MAAM,CAAV,EAAa;uBACNsiB,QAAL,CAAc6B,EAAE+d,EAAF,CAAd,EAAqBzf,KAAKV,IAA1B;iBADF,MAEO,IAAI/hB,MAAM,CAAV,EAAa;uBACbsiB,QAAL,CAAcG,KAAKZ,IAAnB,EAAyBsC,EAAE+d,EAAF,CAAzB;;;;;iBAKDT,GAAL;iBACKC,GAAL;;;;;aAKC,KAAKnB,KAAL,GAAa,eAAc9d,IAAd,CAApB;;;;;;;WAIgB,CAAC,QAAD,EAAW,QAAX,EAAqB,kBAArB,EAAyC,eAAzC,EAA0D,WAA1D;;;MAAXke,mBAAJ;OACElL,SAAL,CAAekL,OAAf,IAA0B,YAAkB;sCAAN3/B,IAAM;UAAA;;;SACrCu/B,KAAL,GAAa,KAAKC,KAAL,GAAa,IAA1B;SACKF,QAAL,CAAcnhC,IAAd,CAAmB;sBAAA;;KAAnB;;WAKO,IAAP;GAPF;;;AADF,4CAA4F;;;;AC/K5F,oBAAe,CACb,SADa,EACF,OADE,EACO,kBADP,EAC2B,OAD3B,EACoC,QADpC,EAC8C,UAD9C,EAC0D,YAD1D,EACwE,QADxE,EACkF,SADlF,EAEb,WAFa,EAEA,aAFA,EAEe,WAFf,EAE4B,YAF5B,EAE0C,UAF1C,EAEsD,MAFtD,EAE8D,OAF9D,EAEuE,QAFvE,EAEiF,QAFjF,EAE2F,OAF3F,EAGb,MAHa,EAGL,KAHK,EAGE,KAHF,EAGS,OAHT,EAGkB,MAHlB,EAG0B,MAH1B,EAGkC,KAHlC,EAGyC,OAHzC,EAGkD,OAHlD,EAG2D,MAH3D,EAGmE,OAHnE,EAG4E,WAH5E,EAGyF,MAHzF,EAIb,OAJa,EAIJ,SAJI,EAIO,UAJP,EAImB,IAJnB,EAIyB,GAJzB,EAI8B,GAJ9B,EAImC,GAJnC,EAIwC,GAJxC,EAI6C,GAJ7C,EAIkD,GAJlD,EAIuD,GAJvD,EAI4D,GAJ5D,EAIiE,GAJjE,EAIsE,GAJtE,EAI2E,GAJ3E,EAIgF,GAJhF,EAIqF,GAJrF,EAI0F,GAJ1F,EAI+F,GAJ/F,EAKb,GALa,EAKR,GALQ,EAKH,GALG,EAKE,GALF,EAKO,GALP,EAKY,GALZ,EAKiB,GALjB,EAKsB,GALtB,EAK2B,GAL3B,EAKgC,GALhC,EAKqC,GALrC,EAK0C,aAL1C,EAKyD,WALzD,EAKsE,cALtE,EAMb,aANa,EAME,YANF,EAMgB,OANhB,EAMyB,GANzB,EAM8B,GAN9B,EAMmC,GANnC,EAMwC,GANxC,EAM6C,GAN7C,EAMkD,GANlD,EAMuD,GANvD,EAM4D,GAN5D,EAMiE,GANjE,EAMsE,GANtE,EAM2E,GAN3E,EAMgF,GANhF,EAMqF,GANrF,EAM0F,GAN1F,EAM+F,GAN/F,EAOb,GAPa,EAOR,GAPQ,EAOH,GAPG,EAOE,GAPF,EAOO,GAPP,EAOY,GAPZ,EAOiB,GAPjB,EAOsB,GAPtB,EAO2B,GAP3B,EAOgC,GAPhC,EAOqC,GAPrC,EAO0C,WAP1C,EAOuD,KAPvD,EAO8D,YAP9D,EAO4E,YAP5E,EAQb,WARa,EAQA,OARA,EAQS,UART,EAQqB,QARrB,EAQ+B,QAR/B,EAQyC,WARzC,EAQsD,WARtD,EAQmE,QARnE,EAQ6E,QAR7E,EASb,aATa,EASE,WATF,EASe,QATf,EASyB,OATzB,EASkC,UATlC,EAS8C,QAT9C,EASwD,QATxD,EASkE,aATlE,EASiF,WATjF,EAUb,QAVa,EAUH,QAVG,EAUO,aAVP,EAUsB,WAVtB,EAUmC,QAVnC,EAU6C,QAV7C,EAUuD,QAVvD,EAUiE,aAVjE,EAUgF,WAVhF,EAWb,QAXa,EAWH,QAXG,EAWO,QAXP,EAWiB,aAXjB,EAWgC,WAXhC,EAW6C,QAX7C,EAWuD,QAXvD,EAWiE,MAXjE,EAWyE,UAXzE,EAWqF,SAXrF,EAYb,QAZa,EAYH,WAZG,EAYU,YAZV,EAYwB,YAZxB,EAYsC,WAZtC,EAYmD,WAZnD,EAYgE,OAZhE,EAYyE,UAZzE,EAYqF,UAZrF,EAab,IAba,EAaP,QAbO,EAaG,UAbH,EAae,WAbf,EAa4B,WAb5B,EAayC,cAbzC,EAayD,KAbzD,EAagE,IAbhE,EAasE,aAbtE,EAaqF,WAbrF,EAcb,SAda,EAcF,IAdE,EAcI,UAdJ,EAcgB,aAdhB,EAc+B,cAd/B,EAc+C,OAd/C,EAcwD,IAdxD,EAc8D,QAd9D,EAcwE,cAdxE,EAeb,YAfa,EAeC,YAfD,EAee,SAff,EAe0B,QAf1B,EAeoC,aAfpC,EAemD,OAfnD,EAe4D,eAf5D,EAe6E,gBAf7E,EAgBb,UAhBa,EAgBD,kBAhBC,EAgBmB,QAhBnB,EAgB6B,QAhB7B,EAgBuC,QAhBvC,EAgBiD,IAhBjD,EAgBuD,IAhBvD,EAgB6D,QAhB7D,EAgBuE,QAhBvE,EAgBiF,cAhBjF,EAiBb,eAjBa,EAiBI,WAjBJ,EAiBiB,YAjBjB,EAiB+B,QAjB/B,EAiByC,SAjBzC,EAiBoD,WAjBpD,EAiBiE,WAjBjE,EAiB8E,UAjB9E,EAkBb,UAlBa,EAkBD,eAlBC,EAkBgB,gBAlBhB,EAkBkC,IAlBlC,EAkBwC,IAlBxC,EAkB8C,WAlB9C,EAkB2D,gBAlB3D,EAkB6E,gBAlB7E,EAmBb,cAnBa,EAmBG,aAnBH,EAmBkB,aAnBlB,EAmBiC,aAnBjC,EAmBgD,QAnBhD,EAmB0D,WAnB1D,EAmBuE,QAnBvE,EAmBiF,QAnBjF,EAoBb,aApBa,EAoBE,WApBF,EAoBe,QApBf,EAoByB,QApBzB,EAoBmC,aApBnC,EAoBkD,OApBlD,EAoB2D,QApB3D,EAoBqE,QApBrE,EAoB+E,aApB/E,EAqBb,QArBa,EAqBH,UArBG,EAqBS,YArBT,EAqBuB,OArBvB,EAqBgC,QArBhC,EAqB0C,OArB1C,EAqBmD,WArBnD,EAqBgE,MArBhE,EAqBwE,SArBxE,EAqBmF,cArBnF,EAsBb,QAtBa,EAsBH,OAtBG,EAsBM,QAtBN,EAsBgB,QAtBhB,EAsB0B,QAtB1B,EAsBoC,QAtBpC,EAsB8C,QAtB9C,EAsBwD,QAtBxD,EAsBkE,WAtBlE,EAsB+E,KAtB/E,EAsBsF,KAtBtF,EAuBb,QAvBa,EAuBH,QAvBG,EAuBO,OAvBP,EAuBgB,OAvBhB,EAuByB,OAvBzB,EAuBkC,UAvBlC,EAuB8C,aAvB9C,EAuB6D,aAvB7D,EAuB4E,eAvB5E,EAwBb,SAxBa,EAwBF,YAxBE,EAwBY,eAxBZ,EAwB6B,OAxB7B,EAwBsC,QAxBtC,EAwBgD,QAxBhD,EAwB0D,YAxB1D,EAwBwE,UAxBxE,EAwBoF,UAxBpF,EAyBb,QAzBa,EAyBH,QAzBG,EAyBO,QAzBP,EAyBiB,QAzBjB,EAyB2B,QAzB3B,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,AACA,AACA,AACA,AAEA;;;;;;;;IAQqBgjC;iBACPljB,EAAZ,EAAgBgC,UAAhB,EAA4BnhB,IAA5B,EAAkC;;;;;;;SAK3Bmf,EAAL,GAAUA,EAAV;;;;;;;;SAQKgC,UAAL,GAAkBA,UAAlB;SACK+T,KAAL,GAAal1B,IAAb;;;SAGK8gB,MAAL,GAAc,KAAKK,UAAL,CAAgByU,KAAhB,CAAsBvT,QAAQvB,MAA9B,CAAd;SACKsP,UAAL,GAAkB,KAAKjP,UAAL,CAAgBhhB,MAAhB,GAAyB,CAA3C;;;kBAGFmiC,+BAAW;WACF,IAAI/B,IAAJ,EAAP;;;kBAGFgC,+BAAW;WACF,KAAKC,IAAL,CAAUvhB,IAAjB;;;kBAGFwhB,+BAAW;WACF,KAAKD,IAAL,CAAU7f,IAAjB;;;kBAGF+f,6CAAiBvnB,OAAO;QAClB,KAAKgE,EAAL,GAAUhE,MAAMwnB,OAAN,CAAcxiC,MAA5B,EAAoC;aAC3Bgb,MAAMwnB,OAAN,CAAc9hC,GAAd,CAAkB,KAAKse,EAAvB,CAAP;;;QAGEyjB,SAASznB,MAAMwnB,OAAN,CAAc9hC,GAAd,CAAkBsa,MAAMwnB,OAAN,CAAcxiC,MAAd,GAAuB,CAAzC,CAAb;QACI6K,MAAM;eACC43B,SAASA,OAAOC,OAAhB,GAA0B,CAD3B;eAEC1nB,MAAM2nB,QAAN,CAAejiC,GAAf,CAAmB,KAAKse,EAAL,GAAUhE,MAAMwnB,OAAN,CAAcxiC,MAA3C,KAAsD;KAFjE;;WAKO6K,GAAP;;;kBAGF+3B,mCAAY9hB,MAAM;QACZ,KAAK+hB,QAAT,EAAmB;aAAS,KAAKA,QAAZ;;;4BAE6B,KAAKN,gBAAL,CAAsB,KAAKxN,KAAL,CAAWjc,IAAjC,CAHlC;QAGHggB,YAHG,qBAGX4J,OAHW;QAGmBI,WAHnB,qBAGWC,OAHX;;;;;QAMZ,KAAKhO,KAAL,CAAWza,IAAf,EAAqB;8BAC+B,KAAKioB,gBAAL,CAAsB,KAAKxN,KAAL,CAAWza,IAAjC,CAD/B;UACN0oB,aADM,qBACdN,OADc;UACiBO,UADjB,qBACSF,OADT;KAArB,MAGO;UACDG,YAAJ;UACI,OAAOpiB,IAAP,KAAgB,WAAhB,IAA+BA,SAAS,IAA5C,EAAkD;YAAA,GAAc,IAAd,CAAKA,IAAL;;;UAE9C,CAACoiB,MAAM,KAAKnO,KAAL,CAAW,MAAX,CAAP,KAA8BmO,IAAIh+B,OAAJ,GAAc,CAAhD,EAAmD;YAC7C89B,gBAAgBzgC,KAAK+tB,GAAL,CAAS4S,IAAIC,YAAJ,GAAmBD,IAAIE,aAAhC,CAApB;YACIH,aAAaC,IAAIC,YAAJ,GAAmBriB,KAAKgB,IAAzC;OAFF,MAIO;YACC1e,IADD,GACU,KAAK2xB,KADf,CACC3xB,IADD;;YAED4/B,gBAAgBzgC,KAAK+tB,GAAL,CAASltB,KAAKigC,MAAL,GAAcjgC,KAAKkgC,OAA5B,CAApB;YACIL,aAAa7/B,KAAKigC,MAAL,GAAcviB,KAAKgB,IAApC;;;;WAIG,KAAK+gB,QAAL,GAAgB,EAAE/J,0BAAF,EAAgBkK,4BAAhB,EAA+BF,wBAA/B,EAA4CG,sBAA5C,EAAvB;;;;;;;;;;;;;;;;kBA4DFM,+BAAW;QACHxqB,IADG,GACM,KAAKgc,KADX,CACHhc,IADG;;QAEL,CAACA,IAAL,EAAW;aACF,IAAP;;;YAGMA,KAAK7T,OAAb;WACO,CAAL;eACSs+B,cAAc,KAAKxkB,EAAnB,CAAP;;WAEG,CAAL;YACMA,KAAKjG,KAAK0qB,cAAL,CAAoB,KAAKzkB,EAAzB,CAAT;YACIA,KAAKwkB,cAAcxjC,MAAvB,EAA+B;iBACtBwjC,cAAcxkB,EAAd,CAAP;;;eAGKjG,KAAK2qB,KAAL,CAAW1kB,KAAKwkB,cAAcxjC,MAA9B,CAAP;;WAEG,GAAL;eACSwjC,cAAc,KAAKxkB,EAAL,GAAUjG,KAAKhT,OAAL,CAAa,KAAKiZ,EAAlB,CAAxB,CAAP;;WAEG,CAAL;eACShb,OAAO2/B,YAAP,CAAoB5qB,KAAKpQ,GAAL,CAAS,KAAKqW,EAAd,CAApB,CAAP;;;;;;;;;;;;;;;kBAkBN4kB,yBAAO96B,KAAKpD,MAAM;QACZm+B,IAAJ;;QAEIC,QAAQ,IAAI,KAAK/O,KAAL,CAAWlc,IAAX,CAAgByI,UAApB,GAAiC5b,IAA7C;QACIo+B,KAAJ,CAAUA,KAAV,EAAiBA,KAAjB;;QAEIjjC,KAAK,KAAKwhC,IAAL,CAAU7B,UAAV,EAAT;OACG13B,GAAH;QACIi7B,IAAJ;;QAEIC,OAAJ;;;;;wBA/FS;aACF,KAAK5B,QAAL,EAAP;;;;;;;;;;;wBASS;aACF,KAAKE,QAAL,EAAP;;;;;;;;;;wBAQS;;;aAGF,KAAKH,QAAL,EAAP;;;;;;;;;;wBAQiB;aACV,KAAKS,WAAL,GAAmB9J,YAA1B;;;;;;;;;;wBAQkB;aACX,KAAK8J,WAAL,GAAmBI,aAA1B;;;;wBAG2B;;;wBAiClB;aACF,KAAKO,QAAL,EAAP;;;;;+DA9EDjjC,oJAUAA,oJASAA,4JAWAA,qKASAA,6JAqCAA;;AC1KH;AACA,IAAI2jC,aAAa,IAAI/jC,EAAEmB,MAAN,CAAa;oBACVnB,EAAEqB,KADQ;QAEVrB,EAAEqB,KAFQ;QAGVrB,EAAEqB,KAHQ;QAIVrB,EAAEqB,KAJQ;QAKVrB,EAAEqB;CALL,CAAjB;;;AASA,IAAM2iC,WAAkB,KAAK,CAA7B;AACA,IAAMC,iBAAkB,KAAK,CAA7B;AACA,IAAMC,iBAAkB,KAAK,CAA7B;AACA,IAAMC,SAAkB,KAAK,CAA7B;AACA,IAAMC,SAAkB,KAAK,CAA7B;AACA,IAAMC,SAAkB,KAAK,CAA7B;;;AAGA,IAAMC,wBAA4B,KAAK,CAAvC;AACA,AACA,AACA,IAAMC,kBAA4B,KAAK,CAAvC;AACA,IAAMC,kBAA4B,KAAK,CAAvC;AACA,IAAMC,2BAA4B,KAAK,CAAvC;AACA,IAAMC,uBAA4B,KAAK,CAAvC;AACA,IAAMC,uBAA4B,KAAK,CAAvC;AACA,AACA,AACA,AACA,AAEA;AACA,IAAaC,KAAb;iBACcC,OAAZ,EAAqBC,UAArB,EAA+C;QAAdnnB,CAAc,uEAAV,CAAU;QAAPyE,CAAO,uEAAH,CAAG;;;;SACxCyiB,OAAL,GAAeA,OAAf;SACKC,UAAL,GAAkBA,UAAlB;SACKnnB,CAAL,GAASA,CAAT;SACKyE,CAAL,GAASA,CAAT;;;kBAGFvB,IARF,mBAQS;WACE,IAAI+jB,KAAJ,CAAU,KAAKC,OAAf,EAAwB,KAAKC,UAA7B,EAAyC,KAAKnnB,CAA9C,EAAiD,KAAKyE,CAAtD,CAAP;GATJ;;;;;;;IAcM2iB,YACJ,mBAAYxnB,OAAZ,EAAqBynB,EAArB,EAAyBC,EAAzB,EAA6B;;;OACtB1nB,OAAL,GAAeA,OAAf;OACKynB,EAAL,GAAUA,EAAV;OACKC,EAAL,GAAUA,EAAV;OACK7+B,GAAL,GAAW,CAAX;OACK8+B,MAAL,GAAc,KAAKC,MAAL,GAAc,CAA5B;OACKC,OAAL,GAAe,KAAKC,OAAL,GAAe,CAA9B;;;;;;;;IAOiBC;;;;;;;;;;qBAEnBpD,6BAASqD,UAAU;;;QAGb,KAAK1Q,KAAL,CAAW2Q,mBAAX,IAAkC,CAACD,QAAvC,EAAiD;aACxC,KAAKpD,IAAL,CAAUvhB,IAAjB;;;QAGEvc,SAAS,KAAKwwB,KAAL,CAAW4Q,eAAX,CAA2B,MAA3B,CAAb;WACOr/B,GAAP,IAAc,KAAKyuB,KAAL,CAAWjvB,IAAX,CAAgBC,OAAhB,CAAwB,KAAKiZ,EAA7B,CAAd;QACI3S,QAAQ43B,WAAWh+B,MAAX,CAAkB1B,MAAlB,CAAZ;;QAEIuc,OAAO,IAAIqB,IAAJ,CAAS9V,MAAMu5B,IAAf,EAAqBv5B,MAAMw5B,IAA3B,EAAiCx5B,MAAMy5B,IAAvC,EAA6Cz5B,MAAM05B,IAAnD,CAAX;WACO,eAAcjlB,IAAd,CAAP;;;;;;qBAIFklB,6CAAiBzhC,QAAQ4qB,MAAM8W,OAAOC,MAAM;QACtCD,KAAJ,EAAW;UACL9gC,MAAMZ,OAAO6B,SAAP,EAAV;UACI,CAAC8/B,IAAL,EAAW;cACH,CAAC/gC,GAAP;;;aAGKgqB,IAAP;KANF,MAOO;UACD+W,IAAJ,EAAU;YACJ/gC,MAAMgqB,IAAV;OADF,MAEO;YACDhqB,MAAMgqB,OAAO5qB,OAAOgD,WAAP,EAAjB;;;;WAIGpC,GAAP;;;;;;;qBAKFghC,6BAAU;QACJC,UAAU,KAAKrR,KAAL,CAAWjvB,IAAX,CAAgBC,OAAhB,CAAwB,KAAKiZ,EAA7B,CAAd;QACIqnB,UAAU,KAAKtR,KAAL,CAAWjvB,IAAX,CAAgBC,OAAhB,CAAwB,KAAKiZ,EAAL,GAAU,CAAlC,CAAd;;;QAGIonB,YAAYC,OAAhB,EAAyB;aAAS,IAAP;;;QAEvB9hC,SAAS,KAAKwwB,KAAL,CAAW4Q,eAAX,CAA2B,MAA3B,CAAb;WACOr/B,GAAP,IAAc8/B,OAAd;QACI5/B,WAAWjC,OAAO+B,GAAtB;;QAEI+F,QAAQ43B,WAAWh+B,MAAX,CAAkB1B,MAAlB,CAAZ;;QAEI8H,MAAMi6B,gBAAN,GAAyB,CAA7B,EAAgC;WACzBC,aAAL,CAAmBl6B,KAAnB,EAA0B9H,MAA1B;KADF,MAGO,IAAI8H,MAAMi6B,gBAAN,GAAyB,CAA7B,EAAgC;WAChCE,gBAAL,CAAsBn6B,KAAtB,EAA6B9H,MAA7B,EAAqCiC,QAArC;;;WAGK6F,KAAP;;;qBAGFk6B,uCAAcl6B,OAAO9H,QAAQ;;UAErBkiC,MAAN,GAAe,EAAf;;QAEIC,mBAAmB,IAAIxmC,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB+K,MAAMi6B,gBAA5B,EAA8CrgC,MAA9C,CAAqD1B,MAArD,CAAvB;UACMoiC,YAAN,GAAqB,IAAIzmC,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB1B,EAAEoB,MAAvB,EAA+B2E,MAA/B,CAAsC1B,MAAtC,CAArB;;QAEIgT,QAAQ,EAAZ;QACIqvB,YAAYF,iBAAiBA,iBAAiB1mC,MAAjB,GAA0B,CAA3C,IAAgD,CAAhE;;WAEOuX,MAAMvX,MAAN,GAAe4mC,SAAtB,EAAiC;UAC3BC,OAAOtiC,OAAO6B,SAAP,EAAX;YACMlH,IAAN,CAAW2nC,IAAX;;;UAGIA,OAAOxC,MAAX,EAAmB;YACb7+B,QAAQjB,OAAO6B,SAAP,EAAZ;aACK,IAAI+zB,IAAI,CAAb,EAAgBA,IAAI30B,KAApB,EAA2B20B,GAA3B,EAAgC;gBACxBj7B,IAAN,CAAW2nC,IAAX;;;;;SAKD,IAAI9mC,IAAI,CAAb,EAAgBA,IAAIwX,MAAMvX,MAA1B,EAAkCD,GAAlC,EAAuC;UACjC8mC,OAAOtvB,MAAMxX,CAAN,CAAX;UACI+mC,QAAQ,IAAIhC,KAAJ,CAAU,CAAC,EAAE+B,OAAO3C,QAAT,CAAX,EAA+BwC,iBAAiBthC,OAAjB,CAAyBrF,CAAzB,KAA+B,CAA9D,EAAiE,CAAjE,EAAoE,CAApE,CAAZ;YACM0mC,MAAN,CAAavnC,IAAb,CAAkB4nC,KAAlB;;;QAGEC,KAAK,CAAT;SACK,IAAIhnC,IAAI,CAAb,EAAgBA,IAAIwX,MAAMvX,MAA1B,EAAkCD,GAAlC,EAAuC;UACjC8mC,OAAOtvB,MAAMxX,CAAN,CAAX;YACM0mC,MAAN,CAAa1mC,CAAb,EAAgB8d,CAAhB,GAAoBkpB,KAAK,KAAKf,gBAAL,CAAsBzhC,MAAtB,EAA8BwiC,EAA9B,EAAkCF,OAAO1C,cAAzC,EAAyD0C,OAAOvC,MAAhE,CAAzB;;;QAGE0C,KAAK,CAAT;SACK,IAAIjnC,IAAI,CAAb,EAAgBA,IAAIwX,MAAMvX,MAA1B,EAAkCD,GAAlC,EAAuC;UACjC8mC,OAAOtvB,MAAMxX,CAAN,CAAX;YACM0mC,MAAN,CAAa1mC,CAAb,EAAgBuiB,CAAhB,GAAoB0kB,KAAK,KAAKhB,gBAAL,CAAsBzhC,MAAtB,EAA8ByiC,EAA9B,EAAkCH,OAAOzC,cAAzC,EAAyDyC,OAAOtC,MAAhE,CAAzB;;;QAGE,KAAKxP,KAAL,CAAW2Q,mBAAf,EAAoC;UAC9Be,SAASp6B,MAAMo6B,MAAN,CAAa9iB,KAAb,EAAb;aACOzkB,IAAP,eAAe,KAAK+nC,iBAAL,CAAuB56B,KAAvB,CAAf;;WAEK0oB,KAAL,CAAW2Q,mBAAX,CAA+BwB,eAA/B,CAA+C,KAAKloB,EAApD,EAAwDynB,MAAxD;YACMU,aAAN,GAAsBV,OAAO9iB,KAAP,CAAa,CAAC,CAAd,CAAtB;;;;;;qBAMJ6iB,6CAAiBn6B,OAAO9H,QAAoB;QAAZqC,MAAY,uEAAH,CAAG;;;UAEpC2iB,UAAN,GAAmB,EAAnB;QACI6d,mBAAmB,KAAvB;QACI7vB,QAAQmtB,eAAZ;;WAEOntB,QAAQmtB,eAAf,EAAgC;cACtBngC,OAAO2B,YAAP,EAAR;UACImhC,OAAO9iC,OAAO+B,GAAP,GAAaM,MAAxB;UACI6W,UAAUlZ,OAAO2B,YAAP,EAAd;UACI,CAACkhC,gBAAL,EAAuB;2BACF,CAAC7vB,QAAQstB,oBAAT,MAAmC,CAAtD;;;UAGEttB,QAAQitB,qBAAZ,EAAmC;YAC7BU,KAAK3gC,OAAOgD,WAAP,EAAT;YACI49B,KAAK5gC,OAAOgD,WAAP,EAAT;OAFF,MAGO;YACD29B,KAAK3gC,OAAO+iC,QAAP,EAAT;YACInC,KAAK5gC,OAAO+iC,QAAP,EAAT;;;UAGEpd,YAAY,IAAI+a,SAAJ,CAAcxnB,OAAd,EAAuBynB,EAAvB,EAA2BC,EAA3B,CAAhB;gBACU7+B,GAAV,GAAgB+gC,IAAhB;;UAEI9vB,QAAQktB,eAAZ,EAA6B;;kBAEjBW,MAAV,GACAlb,UAAUmb,MAAV,GAAmB,CAAE9gC,OAAO6B,SAAP,MAAsB,EAAvB,GAA8B7B,OAAO6B,SAAP,MAAsB,EAArD,IAA4D,UAD/E;OAFF,MAKO,IAAImR,QAAQotB,wBAAZ,EAAsC;kBACjCS,MAAV,GAAmB,CAAE7gC,OAAO6B,SAAP,MAAsB,EAAvB,GAA8B7B,OAAO6B,SAAP,MAAsB,EAArD,IAA4D,UAA/E;kBACUi/B,MAAV,GAAmB,CAAE9gC,OAAO6B,SAAP,MAAsB,EAAvB,GAA8B7B,OAAO6B,SAAP,MAAsB,EAArD,IAA4D,UAA/E;OAFK,MAIA,IAAImR,QAAQqtB,oBAAZ,EAAkC;kBAC7BQ,MAAV,GAAoB,CAAE7gC,OAAO6B,SAAP,MAAsB,EAAvB,GAA8B7B,OAAO6B,SAAP,MAAsB,EAArD,IAA4D,UAAhF;kBACUk/B,OAAV,GAAoB,CAAE/gC,OAAO6B,SAAP,MAAsB,EAAvB,GAA8B7B,OAAO6B,SAAP,MAAsB,EAArD,IAA4D,UAAhF;kBACUm/B,OAAV,GAAoB,CAAEhhC,OAAO6B,SAAP,MAAsB,EAAvB,GAA8B7B,OAAO6B,SAAP,MAAsB,EAArD,IAA4D,UAAhF;kBACUi/B,MAAV,GAAoB,CAAE9gC,OAAO6B,SAAP,MAAsB,EAAvB,GAA8B7B,OAAO6B,SAAP,MAAsB,EAArD,IAA4D,UAAhF;;;YAGImjB,UAAN,CAAiBrqB,IAAjB,CAAsBgrB,SAAtB;;;QAGE,KAAK6K,KAAL,CAAW2Q,mBAAf,EAAoC;UAC9Be,SAAS,EAAb;WACK,IAAItM,IAAI,CAAb,EAAgBA,IAAI9tB,MAAMkd,UAAN,CAAiBvpB,MAArC,EAA6Cm6B,GAA7C,EAAkD;YAC5CjQ,YAAY7d,MAAMkd,UAAN,CAAiB4Q,CAAjB,CAAhB;eACOj7B,IAAP,CAAY,IAAI4lC,KAAJ,CAAU,IAAV,EAAgB,IAAhB,EAAsB5a,UAAUgb,EAAhC,EAAoChb,UAAUib,EAA9C,CAAZ;;;aAGKjmC,IAAP,eAAe,KAAK+nC,iBAAL,CAAuB56B,KAAvB,CAAf;;WAEK0oB,KAAL,CAAW2Q,mBAAX,CAA+BwB,eAA/B,CAA+C,KAAKloB,EAApD,EAAwDynB,MAAxD;YACMU,aAAN,GAAsBV,OAAOje,MAAP,CAAc,CAAC,CAAf,EAAkB,CAAlB,CAAtB;;WAEK,IAAIzoB,IAAI,CAAb,EAAgBA,IAAI0mC,OAAOzmC,MAA3B,EAAmCD,GAAnC,EAAwC;YAClC+mC,QAAQL,OAAO1mC,CAAP,CAAZ;cACMwpB,UAAN,CAAiBxpB,CAAjB,EAAoBmlC,EAApB,GAAyB4B,MAAMjpB,CAA/B;cACM0L,UAAN,CAAiBxpB,CAAjB,EAAoBolC,EAApB,GAAyB2B,MAAMxkB,CAA/B;;;;WAIG8kB,gBAAP;;;qBAGFH,+CAAkB56B,OAAO;QACnByU,OAAO,KAAKshB,QAAL,CAAc,IAAd,CAAX;QACI,KAAKS,QAAL,IAAiB,IAArB,EAA2B;WACpBA,QAAL,GAAgBX,MAAM1M,SAAN,CAAgBoN,WAAhB,CAA4BhiC,IAA5B,CAAiC,IAAjC,EAAuCkgB,IAAvC,CAAhB;;;mBAG6D,KAAK+hB,QAN7C;QAMjB/J,YANiB,YAMjBA,YANiB;QAMHkK,aANG,YAMHA,aANG;QAMYF,WANZ,YAMYA,WANZ;QAMyBG,UANzB,YAMyBA,UANzB;;;WAQhB,CACL,IAAI6B,KAAJ,CAAU,KAAV,EAAiB,IAAjB,EAAuBz4B,MAAMu5B,IAAN,GAAa9C,WAApC,EAAiD,CAAjD,CADK,EAEL,IAAIgC,KAAJ,CAAU,KAAV,EAAiB,IAAjB,EAAuBz4B,MAAMu5B,IAAN,GAAa9C,WAAb,GAA2BhK,YAAlD,EAAgE,CAAhE,CAFK,EAGL,IAAIgM,KAAJ,CAAU,KAAV,EAAiB,IAAjB,EAAuB,CAAvB,EAA0Bz4B,MAAM05B,IAAN,GAAa9C,UAAvC,CAHK,EAIL,IAAI6B,KAAJ,CAAU,KAAV,EAAiB,IAAjB,EAAuB,CAAvB,EAA0Bz4B,MAAM05B,IAAN,GAAa9C,UAAb,GAA0BD,aAApD,CAJK,CAAP;;;;;;qBASFuE,uCAAe;QACTl7B,QAAQ,KAAK85B,OAAL,EAAZ;QACI,CAAC95B,KAAL,EAAY;aAAS,EAAP;;;QAEVA,MAAMi6B,gBAAN,GAAyB,CAA7B,EAAgC;;UAE1BG,SAAS,EAAb;2BACsBp6B,MAAMkd,UAA5B,6GAAwC;;;;;;;;;;;;YAA/BW,SAA+B;;gBAC9B,KAAK6K,KAAL,CAAW5L,QAAX,CAAoBe,UAAUzM,OAA9B,EAAuC0oB,OAAvC,EAAR;;8BAEkB95B,MAAMo6B,MAAxB,oHAAgC;;;;;;;;;;;;cAAvBK,MAAuB;;iBACvB5nC,IAAP,CAAY,IAAI4lC,KAAJ,CAAUgC,OAAM/B,OAAhB,EAAyB+B,OAAM9B,UAA/B,EAA2C8B,OAAMjpB,CAAN,GAAUqM,UAAUgb,EAA/D,EAAmE4B,OAAMxkB,CAAN,GAAU4H,UAAUib,EAAvF,CAAZ;;;KAPN,MAUO;UACDsB,SAASp6B,MAAMo6B,MAAN,IAAgB,EAA7B;;;;QAIEp6B,MAAM86B,aAAV,EAAyB;WAClBtE,QAAL,CAAc/J,YAAd,GAA8BzsB,MAAM86B,aAAN,CAAoB,CAApB,EAAuBtpB,CAAvB,GAA2BxR,MAAM86B,aAAN,CAAoB,CAApB,EAAuBtpB,CAAhF;WACKglB,QAAL,CAAcG,aAAd,GAA8B32B,MAAM86B,aAAN,CAAoB,CAApB,EAAuB7kB,CAAvB,GAA2BjW,MAAM86B,aAAN,CAAoB,CAApB,EAAuB7kB,CAAhF;WACKugB,QAAL,CAAcC,WAAd,GAA8Bz2B,MAAMu5B,IAAN,GAAav5B,MAAM86B,aAAN,CAAoB,CAApB,EAAuBtpB,CAAlE;WACKglB,QAAL,CAAcI,UAAd,GAA8B52B,MAAM86B,aAAN,CAAoB,CAApB,EAAuB7kB,CAAvB,GAA2BjW,MAAM05B,IAA/D;;;QAGEyB,WAAW,EAAf;QACItV,MAAM,EAAV;SACK,IAAI9oB,IAAI,CAAb,EAAgBA,IAAIq9B,OAAOzmC,MAA3B,EAAmCoJ,GAAnC,EAAwC;UAClC09B,QAAQL,OAAOr9B,CAAP,CAAZ;UACIlK,IAAJ,CAAS4nC,KAAT;UACIA,MAAM9B,UAAV,EAAsB;iBACX9lC,IAAT,CAAcgzB,GAAd;cACM,EAAN;;;;WAIGsV,QAAP;;;qBAGF5E,qCAAc;QACR,KAAKC,QAAT,EAAmB;aACV,KAAKA,QAAZ;;;QAGE/hB,OAAO,KAAKshB,QAAL,CAAc,IAAd,CAAX;qBACMQ,WAAN,YAAkB9hB,IAAlB;;QAEI,KAAKiU,KAAL,CAAW2Q,mBAAf,EAAoC;;;WAG7BrD,IAAL;;;WAGK,KAAKQ,QAAZ;;;;;;qBAIFV,+BAAW;QACLqF,WAAW,KAAKD,YAAL,EAAf;QACIlF,OAAO,IAAIjC,IAAJ,EAAX;;SAEK,IAAIrgC,IAAI,CAAb,EAAgBA,IAAIynC,SAASxnC,MAA7B,EAAqCD,GAArC,EAA0C;UACpC0nC,UAAUD,SAASznC,CAAT,CAAd;UACI2nC,UAAUD,QAAQ,CAAR,CAAd;UACIE,SAASF,QAAQA,QAAQznC,MAAR,GAAiB,CAAzB,CAAb;UACIyG,QAAQ,CAAZ;;UAEIihC,QAAQ3C,OAAZ,EAAqB;;YAEf6C,UAAU,IAAd;gBACQ,CAAR;OAHF,MAIO;YACDD,OAAO5C,OAAX,EAAoB;;oBAER4C,MAAV;SAFF,MAGO;;oBAEK,IAAI7C,KAAJ,CAAU,KAAV,EAAiB,KAAjB,EAAwB,CAAC4C,QAAQ7pB,CAAR,GAAY8pB,OAAO9pB,CAApB,IAAyB,CAAjD,EAAoD,CAAC6pB,QAAQplB,CAAR,GAAYqlB,OAAOrlB,CAApB,IAAyB,CAA7E,CAAV;;;YAGEslB,UAAUF,OAAd;;;WAGGG,MAAL,CAAYH,QAAQ7pB,CAApB,EAAuB6pB,QAAQplB,CAA/B;;WAEK,IAAI6X,IAAI1zB,KAAb,EAAoB0zB,IAAIsN,QAAQznC,MAAhC,EAAwCm6B,GAAxC,EAA6C;YACvC2N,KAAKL,QAAQtN,CAAR,CAAT;YACI4N,SAAS5N,MAAM,CAAN,GAAUuN,OAAV,GAAoBD,QAAQtN,IAAI,CAAZ,CAAjC;;YAEI4N,OAAOhD,OAAP,IAAkB+C,GAAG/C,OAAzB,EAAkC;eAC3BiD,MAAL,CAAYF,GAAGjqB,CAAf,EAAkBiqB,GAAGxlB,CAArB;SADF,MAGO,IAAIylB,OAAOhD,OAAP,IAAkB,CAAC+C,GAAG/C,OAA1B,EAAmC;cACpC6C,UAAUE,EAAd;SADK,MAGA,IAAI,CAACC,OAAOhD,OAAR,IAAmB,CAAC+C,GAAG/C,OAA3B,EAAoC;cACrCkD,OAAO,CAACF,OAAOlqB,CAAP,GAAWiqB,GAAGjqB,CAAf,IAAoB,CAA/B;cACIqqB,OAAO,CAACH,OAAOzlB,CAAP,GAAWwlB,GAAGxlB,CAAf,IAAoB,CAA/B;eACK6lB,gBAAL,CAAsBJ,OAAOlqB,CAA7B,EAAgCkqB,OAAOzlB,CAAvC,EAA0C2lB,IAA1C,EAAgDC,IAAhD;cACIN,UAAUE,EAAd;SAJK,MAMA,IAAI,CAACC,OAAOhD,OAAR,IAAmB+C,GAAG/C,OAA1B,EAAmC;eACnCoD,gBAAL,CAAsBP,QAAQ/pB,CAA9B,EAAiC+pB,QAAQtlB,CAAzC,EAA4CwlB,GAAGjqB,CAA/C,EAAkDiqB,GAAGxlB,CAArD;cACIslB,UAAU,IAAd;SAFK,MAIA;gBACC,IAAIvnC,KAAJ,CAAU,wBAAV,CAAN;;;;;UAKAunC,OAAJ,EAAa;aACNO,gBAAL,CAAsBP,QAAQ/pB,CAA9B,EAAiC+pB,QAAQtlB,CAAzC,EAA4ColB,QAAQ7pB,CAApD,EAAuD6pB,QAAQplB,CAA/D;;;WAGG8lB,SAAL;;;WAGK/F,IAAP;;;;EA5TkCH;;AC9DtC;;;;IAGqBmG;;;;;;;;;qBACnB9E,+BAAW;WACF,KAAKxO,KAAL,CAAW,MAAX,EAAmBxoB,YAAnB,CAAgC,KAAKyS,EAArC,CAAP;;;qBAGFspB,qBAAKrhC,GAAG;QACFA,EAAEjH,MAAF,GAAW,IAAf,EAAqB;aACZ,GAAP;KADF,MAEO,IAAIiH,EAAEjH,MAAF,GAAW,KAAf,EAAsB;aACpB,IAAP;KADK,MAEA;aACE,KAAP;;;;qBAIJmiC,+BAAW;QACH59B,MADG,GACQ,KAAKwwB,KADb,CACHxwB,MADG;QAEH+B,GAFG,GAEK/B,MAFL,CAEH+B,GAFG;;;QAILiiC,MAAM,KAAKxT,KAAL,CAAW,MAAX,CAAV;QACIttB,MAAM8gC,IAAIx8B,OAAJ,CAAYd,WAAZ,CAAwB,KAAK+T,EAA7B,CAAV;QACItY,MAAMe,IAAIb,MAAJ,GAAaa,IAAIzH,MAA3B;WACOsG,GAAP,GAAamB,IAAIb,MAAjB;;QAEIy7B,OAAO,IAAIjC,IAAJ,EAAX;QACIpV,QAAQ,EAAZ;QACIwd,QAAQ,EAAZ;;QAEItnB,QAAQ,IAAZ;QACIunB,SAAS,CAAb;QACI5qB,IAAI,CAAR;QAAWyE,IAAI,CAAf;QACIomB,mBAAJ;QACIC,kBAAJ;QACIlpC,OAAO,KAAX;;SAEKmpC,WAAL,GAAmBF,aAAa,EAAhC;SACKG,UAAL,GAAkBF,YAAY,EAA9B;;QAEIG,SAASP,IAAIQ,eAAJ,IAAuB,EAApC;QACIC,aAAa,KAAKV,IAAL,CAAUQ,MAAV,CAAjB;;QAEIG,cAAcV,IAAIp7B,mBAAJ,CAAwB,KAAK6R,EAA7B,CAAlB;QACIkqB,QAAQD,YAAYE,KAAZ,IAAqB,EAAjC;QACIC,YAAY,KAAKd,IAAL,CAAUY,KAAV,CAAhB;;aAESG,UAAT,GAAsB;UAChBre,MAAMhrB,MAAN,GAAe,CAAf,KAAqB,CAAzB,EAA4B;YACtBkhB,UAAU,IAAd,EAAoB;kBACV8J,MAAMse,KAAN,KAAgBL,YAAYM,aAApC;;;;gBAIMve,MAAMhrB,MAAN,IAAgB,CAA1B;aACOgrB,MAAMhrB,MAAN,GAAe,CAAtB;;;aAGO6nC,MAAT,CAAgBhqB,CAAhB,EAAmByE,CAAnB,EAAsB;UAChB7iB,IAAJ,EAAU;aACH2oC,SAAL;;;WAGGP,MAAL,CAAYhqB,CAAZ,EAAeyE,CAAf;aACO,IAAP;;;QAGEknB,QAAQ,SAARA,KAAQ,GAAW;aACdjlC,OAAO+B,GAAP,GAAaI,GAApB,EAAyB;YACnBkC,KAAKrE,OAAO6B,SAAP,EAAT;YACIwC,KAAK,EAAT,EAAa;kBACHA,EAAR;iBACO,CAAL,CADF;iBAEO,CAAL,CAFF;iBAGO,EAAL,CAHF;iBAIO,EAAL;;;;;iBAIK,CAAL;;kBACMoiB,MAAMhrB,MAAN,GAAe,CAAnB,EAAsB;oBAChB,OAAOkhB,KAAP,KAAiB,WAAjB,IAAgCA,UAAU,IAA9C,EAAoD;0BAAU8J,MAAMse,KAAN,KAAgBL,YAAYM,aAApC;;;;mBAGnDve,MAAMse,KAAN,EAAL;qBACOzrB,CAAP,EAAUyE,CAAV;;;iBAGG,CAAL;;qBACS0I,MAAMhrB,MAAN,IAAgB,CAAvB,EAA0B;qBACnBgrB,MAAMse,KAAN,EAAL;qBACKte,MAAMse,KAAN,EAAL;qBACKtB,MAAL,CAAYnqB,CAAZ,EAAeyE,CAAf;;;;iBAIC,CAAL,CAzBF;iBA0BO,CAAL;;kBACMmnB,QAAQ7gC,OAAO,CAAnB;qBACOoiB,MAAMhrB,MAAN,IAAgB,CAAvB,EAA0B;oBACpBypC,KAAJ,EAAW;uBACJze,MAAMse,KAAN,EAAL;iBADF,MAEO;uBACAte,MAAMse,KAAN,EAAL;;;qBAGGtB,MAAL,CAAYnqB,CAAZ,EAAeyE,CAAf;wBACQ,CAACmnB,KAAT;;;;iBAIC,CAAL;;qBACSze,MAAMhrB,MAAN,GAAe,CAAtB,EAAyB;oBACnB0pC,MAAM7rB,IAAImN,MAAMse,KAAN,EAAd;oBACIK,MAAMrnB,IAAI0I,MAAMse,KAAN,EAAd;oBACIM,MAAMF,MAAM1e,MAAMse,KAAN,EAAhB;oBACIO,MAAMF,MAAM3e,MAAMse,KAAN,EAAhB;oBACIM,MAAM5e,MAAMse,KAAN,EAAV;oBACIO,MAAM7e,MAAMse,KAAN,EAAV;qBACKQ,aAAL,CAAmBJ,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuChsB,CAAvC,EAA0CyE,CAA1C;;;;iBAIC,EAAL;;kBACMjY,QAAQ2gB,MAAMjB,GAAN,KAAcqf,SAA1B;kBACIW,OAAOb,MAAM7+B,KAAN,CAAX;kBACI0/B,IAAJ,EAAU;0BACE1/B,KAAV,IAAmB,IAAnB;oBACIoY,IAAIle,OAAO+B,GAAf;oBACIxG,IAAI4G,GAAR;uBACOJ,GAAP,GAAayjC,KAAKnjC,MAAlB;sBACMmjC,KAAKnjC,MAAL,GAAcmjC,KAAK/pC,MAAzB;;uBAEOsG,GAAP,GAAamc,CAAb;sBACM3iB,CAAN;;;;iBAIC,EAAL;;;;iBAGK,EAAL;;kBACMkrB,MAAMhrB,MAAN,GAAe,CAAnB,EAAsB;oBAChB,OAAOkhB,KAAP,KAAiB,WAAjB,IAAgCA,UAAU,IAA9C,EAAoD;0BAAU8J,MAAMse,KAAN,KAAgBL,YAAYM,aAApC;;;;mBAGnDnB,SAAL;qBACO,KAAP;;;iBAGG,EAAL,CA/EF;iBAgFO,EAAL;;;qBAES9hC,GAAP,IAAemiC,SAAS,CAAV,IAAgB,CAA9B;;;iBAGG,EAAL;;kBACMzd,MAAMhrB,MAAN,GAAe,CAAnB,EAAsB;oBAChB,OAAOkhB,KAAP,KAAiB,WAAjB,IAAgCA,UAAU,IAA9C,EAAoD;0BAAU8J,MAAMse,KAAN,KAAgBL,YAAYM,aAApC;;oBAClDS,YAAY,IAAhB;;;mBAGGhf,MAAMse,KAAN,EAAL;mBACKte,MAAMse,KAAN,EAAL;qBACOzrB,CAAP,EAAUyE,CAAV;;;iBAGG,EAAL;;kBACM0I,MAAMhrB,MAAN,GAAe,CAAnB,EAAsB;oBAChB,OAAOkhB,KAAP,KAAiB,WAAjB,IAAgCA,UAAU,IAA9C,EAAoD;0BAAU8J,MAAMse,KAAN,KAAgBL,YAAYM,aAApC;;;;mBAGnDve,MAAMse,KAAN,EAAL;qBACOzrB,CAAP,EAAUyE,CAAV;;;iBAGG,EAAL;;qBACS0I,MAAMhrB,MAAN,IAAgB,CAAvB,EAA0B;oBACpB0pC,MAAM7rB,IAAImN,MAAMse,KAAN,EAAd;oBACIK,MAAMrnB,IAAI0I,MAAMse,KAAN,EAAd;oBACIM,MAAMF,MAAM1e,MAAMse,KAAN,EAAhB;oBACIO,MAAMF,MAAM3e,MAAMse,KAAN,EAAhB;oBACIM,MAAM5e,MAAMse,KAAN,EAAV;oBACIO,MAAM7e,MAAMse,KAAN,EAAV;qBACKQ,aAAL,CAAmBJ,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuChsB,CAAvC,EAA0CyE,CAA1C;;;mBAGG0I,MAAMse,KAAN,EAAL;mBACKte,MAAMse,KAAN,EAAL;mBACKtB,MAAL,CAAYnqB,CAAZ,EAAeyE,CAAf;;;iBAGG,EAAL;;qBACS0I,MAAMhrB,MAAN,IAAgB,CAAvB,EAA0B;qBACnBgrB,MAAMse,KAAN,EAAL;qBACKte,MAAMse,KAAN,EAAL;qBACKtB,MAAL,CAAYnqB,CAAZ,EAAeyE,CAAf;;;kBAGEonB,MAAM7rB,IAAImN,MAAMse,KAAN,EAAd;kBACIK,MAAMrnB,IAAI0I,MAAMse,KAAN,EAAd;kBACIM,MAAMF,MAAM1e,MAAMse,KAAN,EAAhB;kBACIO,MAAMF,MAAM3e,MAAMse,KAAN,EAAhB;kBACIM,MAAM5e,MAAMse,KAAN,EAAV;kBACIO,MAAM7e,MAAMse,KAAN,EAAV;mBACKQ,aAAL,CAAmBJ,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuChsB,CAAvC,EAA0CyE,CAA1C;;;iBAGG,EAAL;;kBACM0I,MAAMhrB,MAAN,GAAe,CAAnB,EAAsB;qBACfgrB,MAAMse,KAAN,EAAL;;;qBAGKte,MAAMhrB,MAAN,IAAgB,CAAvB,EAA0B;sBAClB6d,CAAN;sBACMyE,IAAI0I,MAAMse,KAAN,EAAV;sBACMI,MAAM1e,MAAMse,KAAN,EAAZ;sBACMK,MAAM3e,MAAMse,KAAN,EAAZ;oBACIM,GAAJ;oBACIC,MAAM7e,MAAMse,KAAN,EAAV;qBACKQ,aAAL,CAAmBJ,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuChsB,CAAvC,EAA0CyE,CAA1C;;;;iBAIC,EAAL;;kBACM0I,MAAMhrB,MAAN,GAAe,CAAnB,EAAsB;qBACfgrB,MAAMse,KAAN,EAAL;;;qBAGKte,MAAMhrB,MAAN,IAAgB,CAAvB,EAA0B;sBAClB6d,IAAImN,MAAMse,KAAN,EAAV;sBACMhnB,CAAN;sBACMonB,MAAM1e,MAAMse,KAAN,EAAZ;sBACMK,MAAM3e,MAAMse,KAAN,EAAZ;oBACIM,MAAM5e,MAAMse,KAAN,EAAV;oBACIO,GAAJ;qBACKC,aAAL,CAAmBJ,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuChsB,CAAvC,EAA0CyE,CAA1C;;;;iBAIC,EAAL;;oBACQpjB,IAAN,CAAWqF,OAAOgD,WAAP,EAAX;;;iBAGG,EAAL;;sBACUyjB,MAAMjB,GAAN,KAAcif,UAAtB;qBACOF,OAAOz+B,KAAP,CAAP;kBACI0/B,IAAJ,EAAU;2BACG1/B,KAAX,IAAoB,IAApB;oBACIoY,IAAIle,OAAO+B,GAAf;oBACIxG,IAAI4G,GAAR;uBACOJ,GAAP,GAAayjC,KAAKnjC,MAAlB;sBACMmjC,KAAKnjC,MAAL,GAAcmjC,KAAK/pC,MAAzB;;uBAEOsG,GAAP,GAAamc,CAAb;sBACM3iB,CAAN;;;;iBAIC,EAAL,CA5LF;iBA6LO,EAAL;;sBACU8I,OAAO,EAAf;qBACOoiB,MAAMhrB,MAAN,IAAgB,CAAvB,EAA0B;oBACpBypC,KAAJ,EAAW;wBACH5rB,IAAImN,MAAMse,KAAN,EAAV;wBACMhnB,CAAN;wBACMonB,MAAM1e,MAAMse,KAAN,EAAZ;wBACMK,MAAM3e,MAAMse,KAAN,EAAZ;sBACIO,MAAM7e,MAAMse,KAAN,EAAV;sBACIM,OAAO5e,MAAMhrB,MAAN,KAAiB,CAAjB,GAAqBgrB,MAAMse,KAAN,EAArB,GAAqC,CAA5C,CAAJ;iBANF,MAOO;wBACCzrB,CAAN;wBACMyE,IAAI0I,MAAMse,KAAN,EAAV;wBACMI,MAAM1e,MAAMse,KAAN,EAAZ;wBACMK,MAAM3e,MAAMse,KAAN,EAAZ;sBACIM,MAAM5e,MAAMse,KAAN,EAAV;sBACIO,OAAO7e,MAAMhrB,MAAN,KAAiB,CAAjB,GAAqBgrB,MAAMse,KAAN,EAArB,GAAqC,CAA5C,CAAJ;;;qBAGGQ,aAAL,CAAmBJ,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuChsB,CAAvC,EAA0CyE,CAA1C;wBACQ,CAACmnB,KAAT;;;;iBAIC,EAAL;mBACOllC,OAAO6B,SAAP,EAAL;sBACQwC,EAAR;qBACO,CAAL;;sBACMkpB,IAAI9G,MAAMjB,GAAN,EAAR;sBACIriB,IAAIsjB,MAAMjB,GAAN,EAAR;wBACM7qB,IAAN,CAAW4yB,KAAKpqB,CAAL,GAAS,CAAT,GAAa,CAAxB;;;qBAGG,CAAL;;sBACMsjB,MAAMjB,GAAN,EAAJ;sBACIiB,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAW4yB,KAAKpqB,CAAL,GAAS,CAAT,GAAa,CAAxB;;;qBAGG,CAAL;;sBACMsjB,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAW4yB,IAAI,CAAJ,GAAQ,CAAnB;;;qBAGG,CAAL;;sBACM9G,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAWqD,KAAK+tB,GAAL,CAASwB,CAAT,CAAX;;;qBAGG,EAAL;;sBACM9G,MAAMjB,GAAN,EAAJ;sBACIiB,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAW4yB,IAAIpqB,CAAf;;;qBAGG,EAAL;;sBACMsjB,MAAMjB,GAAN,EAAJ;sBACIiB,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAW4yB,IAAIpqB,CAAf;;;qBAGG,EAAL;;sBACMsjB,MAAMjB,GAAN,EAAJ;sBACIiB,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAW4yB,IAAIpqB,CAAf;;;qBAGG,EAAL;;sBACMsjB,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAW,CAAC4yB,CAAZ;;;qBAGG,EAAL;;sBACM9G,MAAMjB,GAAN,EAAJ;sBACIiB,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAW4yB,MAAMpqB,CAAN,GAAU,CAAV,GAAc,CAAzB;;;qBAGG,EAAL;;wBACQqiB,GAAN;;;qBAGG,EAAL;;sBACM5kB,MAAM6lB,MAAMjB,GAAN,EAAV;sBACIlH,MAAMmI,MAAMjB,GAAN,EAAV;wBACMlH,GAAN,IAAa1d,GAAb;;;qBAGG,EAAL;;wBACQ6lB,MAAMjB,GAAN,EAAN;wBACM7qB,IAAN,CAAWspC,MAAM3lB,GAAN,KAAc,CAAzB;;;qBAGG,EAAL;;sBACMonB,KAAKjf,MAAMjB,GAAN,EAAT;sBACImgB,KAAKlf,MAAMjB,GAAN,EAAT;sBACIogB,KAAKnf,MAAMjB,GAAN,EAAT;sBACIqgB,KAAKpf,MAAMjB,GAAN,EAAT;wBACM7qB,IAAN,CAAWirC,MAAMC,EAAN,GAAWH,EAAX,GAAgBC,EAA3B;;;qBAGG,EAAL;;wBACQhrC,IAAN,CAAWqD,KAAK8nC,MAAL,EAAX;;;qBAGG,EAAL;;sBACMrf,MAAMjB,GAAN,EAAJ;sBACIiB,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAW4yB,IAAIpqB,CAAf;;;qBAGG,EAAL;;sBACMsjB,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAWqD,KAAKy/B,IAAL,CAAUlQ,CAAV,CAAX;;;qBAGG,EAAL;;sBACM9G,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAW4yB,CAAX,EAAcA,CAAd;;;qBAGG,EAAL;;sBACM9G,MAAMjB,GAAN,EAAJ;sBACIiB,MAAMjB,GAAN,EAAJ;wBACM7qB,IAAN,CAAWwI,CAAX,EAAcoqB,CAAd;;;qBAGG,EAAL;;wBACQ9G,MAAMjB,GAAN,EAAN;sBACIlH,MAAM,CAAV,EAAa;0BACL,CAAN;mBADF,MAEO,IAAIA,MAAMmI,MAAMhrB,MAAN,GAAe,CAAzB,EAA4B;0BAC3BgrB,MAAMhrB,MAAN,GAAe,CAArB;;;wBAGId,IAAN,CAAW8rB,MAAMnI,GAAN,CAAX;;;qBAGG,EAAL;;sBACMynB,IAAItf,MAAMjB,GAAN,EAAR;sBACIoQ,IAAInP,MAAMjB,GAAN,EAAR;;sBAEIoQ,KAAK,CAAT,EAAY;2BACHA,IAAI,CAAX,EAAc;0BACR13B,IAAIuoB,MAAMsf,IAAI,CAAV,CAAR;2BACK,IAAIvqC,IAAIuqC,IAAI,CAAjB,EAAoBvqC,KAAK,CAAzB,EAA4BA,GAA5B,EAAiC;8BACzBA,IAAI,CAAV,IAAeirB,MAAMjrB,CAAN,CAAf;;;4BAGI,CAAN,IAAW0C,CAAX;;;mBAPJ,MAUO;2BACE03B,IAAI,CAAX,EAAc;0BACR13B,IAAIuoB,MAAM,CAAN,CAAR;2BACK,IAAIjrB,KAAI,CAAb,EAAgBA,MAAKuqC,CAArB,EAAwBvqC,IAAxB,EAA6B;8BACrBA,EAAN,IAAWirB,MAAMjrB,KAAI,CAAV,CAAX;;;4BAGIuqC,IAAI,CAAV,IAAe7nC,CAAf;;;;;;qBAMD,EAAL;;wBACQob,IAAImN,MAAMse,KAAN,EAAV;wBACMhnB,CAAN;wBACMonB,MAAM1e,MAAMse,KAAN,EAAZ;wBACMK,MAAM3e,MAAMse,KAAN,EAAZ;sBACIiB,MAAMX,MAAM5e,MAAMse,KAAN,EAAhB;sBACIkB,MAAMX,GAAV;sBACIY,MAAMF,MAAMvf,MAAMse,KAAN,EAAhB;sBACIoB,MAAMF,GAAV;sBACIG,MAAMF,MAAMzf,MAAMse,KAAN,EAAhB;sBACIsB,MAAMF,GAAV;sBACIG,MAAMF,MAAM3f,MAAMse,KAAN,EAAhB;sBACIwB,MAAMF,GAAV;sBACIC,GAAJ;sBACIC,GAAJ;;uBAEKhB,aAAL,CAAmBJ,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCU,GAAvC,EAA4CC,GAA5C;uBACKV,aAAL,CAAmBW,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,GAAvC,EAA4CC,GAA5C;;;qBAGG,EAAL;;sBACMC,MAAM,EAAV;;uBAEK,IAAIhrC,MAAI,CAAb,EAAgBA,OAAK,CAArB,EAAwBA,KAAxB,EAA6B;yBACtBirB,MAAMse,KAAN,EAAL;yBACKte,MAAMse,KAAN,EAAL;wBACIpqC,IAAJ,CAAS2e,CAAT,EAAYyE,CAAZ;;;uBAGGwnB,aAAL,aAAsBiB,IAAIpnB,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAtB;uBACKmmB,aAAL,aAAsBiB,IAAIpnB,KAAJ,CAAU,CAAV,CAAtB;wBACM2lB,KAAN,GAXF;;;qBAcK,EAAL;;wBACQzrB,IAAImN,MAAMse,KAAN,EAAV;wBACMhnB,IAAI0I,MAAMse,KAAN,EAAV;wBACMI,MAAM1e,MAAMse,KAAN,EAAZ;wBACMK,MAAM3e,MAAMse,KAAN,EAAZ;wBACMM,MAAM5e,MAAMse,KAAN,EAAZ;wBACMO,GAAN;wBACMU,MAAMvf,MAAMse,KAAN,EAAZ;wBACMkB,GAAN;wBACMC,MAAMzf,MAAMse,KAAN,EAAZ;wBACMoB,MAAM1f,MAAMse,KAAN,EAAZ;wBACMqB,MAAM3f,MAAMse,KAAN,EAAZ;wBACMsB,GAAN;sBACIC,GAAJ;sBACIC,GAAJ;;uBAEKhB,aAAL,CAAmBJ,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCU,GAAvC,EAA4CC,GAA5C;uBACKV,aAAL,CAAmBW,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,GAAvC,EAA4CC,GAA5C;;;qBAGG,EAAL;;sBACME,SAASntB,CAAb;sBACIotB,SAAS3oB,CAAb;;wBAEM,EAAN;uBACK,IAAIviB,MAAI,CAAb,EAAgBA,OAAK,CAArB,EAAwBA,KAAxB,EAA6B;yBACtBirB,MAAMse,KAAN,EAAL;yBACKte,MAAMse,KAAN,EAAL;wBACIpqC,IAAJ,CAAS2e,CAAT,EAAYyE,CAAZ;;;sBAGE/f,KAAK+tB,GAAL,CAASzS,IAAImtB,MAAb,IAAuBzoC,KAAK+tB,GAAL,CAAShO,IAAI2oB,MAAb,CAA3B,EAAiD;;yBAC1CjgB,MAAMse,KAAN,EAAL;wBACI2B,MAAJ;mBAFF,MAGO;wBACDD,MAAJ;yBACKhgB,MAAMse,KAAN,EAAL;;;sBAGEpqC,IAAJ,CAAS2e,CAAT,EAAYyE,CAAZ;uBACKwnB,aAAL,aAAsBiB,IAAIpnB,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAtB;uBACKmmB,aAAL,aAAsBiB,IAAIpnB,KAAJ,CAAU,CAAV,CAAtB;;;;wBAIM,IAAItjB,KAAJ,qBAA4BuI,EAA5B,CAAN;;;;;oBAKE,IAAIvI,KAAJ,kBAAyBuI,EAAzB,CAAN;;SAvbN,MA0bO,IAAIA,KAAK,GAAT,EAAc;gBACb1J,IAAN,CAAW0J,KAAK,GAAhB;SADK,MAEA,IAAIA,KAAK,GAAT,EAAc;cACfsiC,KAAK3mC,OAAO6B,SAAP,EAAT;gBACMlH,IAAN,CAAW,CAAC0J,KAAK,GAAN,IAAa,GAAb,GAAmBsiC,EAAnB,GAAwB,GAAnC;SAFK,MAGA,IAAItiC,KAAK,GAAT,EAAc;cACfsiC,KAAK3mC,OAAO6B,SAAP,EAAT;gBACMlH,IAAN,CAAW,EAAE0J,KAAK,GAAP,IAAc,GAAd,GAAoBsiC,EAApB,GAAyB,GAApC;SAFK,MAGA;gBACChsC,IAAN,CAAWqF,OAAOiD,WAAP,KAAuB,KAAlC;;;KAtcN;;;WA4cO66B,IAAP;;;;EA7gBkCH;;ACHtC,IAAIiJ,YAAY,IAAIjrC,EAAEmB,MAAN,CAAa;WAClBnB,EAAEoB,MADgB;WAElBpB,EAAEoB,MAFgB;QAGrB,IAAIpB,EAAE8D,MAAN,CAAa,CAAb,CAHqB;QAIrB,IAAI9D,EAAEmF,MAAN,CAAa;WAAK5C,EAAEU,MAAF,CAASioC,MAAT,GAAkB3oC,EAAEI,cAAzB;GAAb;CAJQ,CAAhB;;;;;;IAUqBwoC;;;;;;;;;;;;;;;;;sBASnBC,2CAAgB5lC,MAAM;SACf,IAAI3F,IAAI,CAAb,EAAgBA,IAAI,KAAKg1B,KAAL,CAAWxb,IAAX,CAAgBgyB,WAAhB,CAA4BvrC,MAAhD,EAAwDD,GAAxD,EAA6D;UACvDib,QAAQ,KAAK+Z,KAAL,CAAWxb,IAAX,CAAgBgyB,WAAhB,CAA4BxrC,CAA5B,CAAZ;UACIib,MAAMwwB,IAAN,IAAc9lC,IAAlB,EAAwB;;;;;QAGtBK,UAAUiV,MAAMywB,YAApB;QACIhlC,QAAQV,QAAQ,KAAKiZ,EAAb,CAAZ;QACItY,MAAMX,QAAQ,KAAKiZ,EAAL,GAAU,CAAlB,CAAV;;QAEIvY,UAAUC,GAAd,EAAmB;aACV,IAAP;;;SAGGquB,KAAL,CAAWxwB,MAAX,CAAkB+B,GAAlB,GAAwBG,KAAxB;WACO0kC,UAAUllC,MAAV,CAAiB,KAAK8uB,KAAL,CAAWxwB,MAA5B,EAAoC,EAAC6mC,QAAQ1kC,MAAMD,KAAf,EAApC,CAAP;;;sBAGFm9B,yBAAO96B,KAAKpD,MAAM;QACZgmC,MAAM,KAAKJ,eAAL,CAAqB5lC,IAArB,CAAV;QACIgmC,OAAO,IAAX,EAAiB;UACX5H,QAAQp+B,OAAO,KAAKqvB,KAAL,CAAWzT,UAA9B;UACIqqB,KAAJ,CAAUD,IAAIE,IAAd,EAAoB,EAAC7pB,QAAQrc,IAAT,EAAemY,GAAG6tB,IAAIG,OAAtB,EAA+BvpB,GAAG,CAAC,KAAKE,IAAL,CAAUX,IAAV,GAAiB6pB,IAAII,OAAtB,IAAiChI,KAAnE,EAApB;;;QAGE,KAAK/O,KAAL,CAAWxb,IAAX,CAAgBhC,KAAhB,CAAsBw0B,cAA1B,EAA0C;0BAClCnI,MAAN,YAAa96B,GAAb,EAAkBpD,IAAlB;;;;;EAnCiC8/B;;ICVjCwG,YACJ,mBAAY3/B,KAAZ,EAAmB4/B,KAAnB,EAA0B;;;OACnB5/B,KAAL,GAAaA,KAAb;OACK4/B,KAAL,GAAaA,KAAb;;;;;;;;;;IASiBC;;;;;;;;;sBACnB5J,+BAAW;QACL9f,OAAO,IAAIL,IAAJ,EAAX;SACK,IAAIpiB,IAAI,CAAb,EAAgBA,IAAI,KAAKosC,MAAL,CAAYnsC,MAAhC,EAAwCD,GAAxC,EAA6C;UACvCqsC,QAAQ,KAAKD,MAAL,CAAYpsC,CAAZ,CAAZ;UACI2H,IAAI0kC,MAAM//B,KAAN,CAAYmW,IAApB;WACKH,QAAL,CAAc3a,EAAEuZ,IAAhB,EAAsBvZ,EAAEma,IAAxB;WACKQ,QAAL,CAAc3a,EAAEka,IAAhB,EAAsBla,EAAEoa,IAAxB;;;WAGKU,IAAP;;;;;;;;;;sBAsDFohB,yBAAO96B,KAAKpD,MAAM;yBACW,KAAKymC,MAAhC,6GAAwC;;;;;;;;;;;;;UAA9B9/B,KAA8B,SAA9BA,KAA8B;UAAvB4/B,KAAuB,SAAvBA,KAAuB;;UAClCI,SAAJ,CAAc,CAACJ,MAAMK,GAAP,EAAYL,MAAMM,KAAlB,EAAyBN,MAAMO,IAA/B,CAAd,EAAoDP,MAAMQ,KAAN,GAAc,GAAd,GAAoB,GAAxE;YACM7I,MAAN,CAAa96B,GAAb,EAAkBpD,IAAlB;;;;;;;;wBAjDS;UACPgnC,OAAO,KAAK3X,KAAL,CAAWtb,IAAtB;UACIkzB,OAAO,KAAK5X,KAAL,CAAWvb,IAAtB;UACIzM,MAAM,CAAV;UACIC,OAAO2/B,KAAKC,eAAL,CAAqB5sC,MAArB,GAA8B,CAAzC;;aAEO+M,OAAOC,IAAd,EAAoB;YACdC,MAAOF,MAAMC,IAAP,IAAgB,CAA1B;YACI6/B,MAAMF,KAAKC,eAAL,CAAqB3/B,GAArB,CAAV;;YAEI,KAAK+R,EAAL,GAAU6tB,IAAIrgC,GAAlB,EAAuB;iBACdS,MAAM,CAAb;SADF,MAEO,IAAI,KAAK+R,EAAL,GAAU6tB,IAAIrgC,GAAlB,EAAuB;gBACtBS,MAAM,CAAZ;SADK,MAEA;cACD6/B,YAAYD,GAAhB;;;;;;;UAOAC,aAAa,IAAjB,EAAuB;YACjBnuB,IAAI,KAAKoW,KAAL,CAAWgY,aAAX,CAAyB,KAAK/tB,EAA9B,CAAR;YACIitB,QAAQ;eACL,CADK;iBAEH,CAFG;gBAGJ,CAHI;iBAIH;SAJT;;eAOO,CAAC,IAAID,SAAJ,CAAcrtB,CAAd,EAAiBstB,KAAjB,CAAD,CAAP;;;;UAIEE,SAAS,EAAb;WACK,IAAIpsC,IAAI+sC,UAAUE,eAAvB,EAAwCjtC,IAAI+sC,UAAUE,eAAV,GAA4BF,UAAUG,SAAlF,EAA6FltC,GAA7F,EAAkG;YAC5F8sC,MAAMF,KAAKO,YAAL,CAAkBntC,CAAlB,CAAV;YACIksC,QAAQS,KAAKS,YAAL,CAAkBN,IAAIO,YAAtB,CAAZ;YACIzuB,IAAI,KAAKoW,KAAL,CAAWgY,aAAX,CAAyBF,IAAIrgC,GAA7B,CAAR;eACOtN,IAAP,CAAY,IAAI8sC,SAAJ,CAAcrtB,CAAd,EAAiBstB,KAAjB,CAAZ;;;aAGKE,MAAP;;;;;EA7DmCjK;;ACfvC,IAAMmL,6BAA6B,MAAnC;AACA,IAAMC,mBAA6B,MAAnC;AACA,IAAMC,uBAA6B,MAAnC;AACA,IAAMC,qBAA6B,MAAnC;AACA,IAAMC,wBAA6B,MAAnC;AACA,IAAMC,mBAA6B,MAAnC;AACA,IAAMC,mBAA6B,IAAnC;AACA,IAAMC,uBAA6B,IAAnC;AACA,IAAMC,kBAA6B,IAAnC;AACA,IAAMC,mBAA6B,IAAnC;AACA,IAAMC,uBAA6B,IAAnC;;;;;;;;;;;;;;IAaqBC;mCACPnuC,IAAZ,EAAkBouC,MAAlB,EAA0B;;;SACnBpuC,IAAL,GAAYA,IAAZ;SACKquC,gBAAL,GAAwB,KAAKC,eAAL,CAAqBF,MAArB,CAAxB;;;oCAGFE,2CAAgBF,QAAQ;;;QAGlBG,aAAa,EAAjB;SACK,IAAIruC,IAAI,CAAb,EAAgBA,IAAI,KAAKF,IAAL,CAAU6a,IAAV,CAAe2zB,IAAf,CAAoBruC,MAAxC,EAAgDD,GAAhD,EAAqD;UAC/CsuC,OAAO,KAAKxuC,IAAL,CAAU6a,IAAV,CAAe2zB,IAAf,CAAoBtuC,CAApB,CAAX;UACIkuC,OAAOluC,CAAP,IAAYsuC,KAAKC,YAArB,EAAmC;mBACtBpvC,IAAX,CAAgB,CAAC+uC,OAAOluC,CAAP,IAAYsuC,KAAKC,YAAlB,KAAmCD,KAAKC,YAAL,GAAoBD,KAAKE,QAA5D,CAAhB;OADF,MAEO;mBACMrvC,IAAX,CAAgB,CAAC+uC,OAAOluC,CAAP,IAAYsuC,KAAKC,YAAlB,KAAmCD,KAAKG,QAAL,GAAgBH,KAAKC,YAAxD,CAAhB;;;;;;QAMA,KAAKzuC,IAAL,CAAU0a,IAAd,EAAoB;WACb,IAAIxa,IAAI,CAAb,EAAgBA,IAAI,KAAKF,IAAL,CAAU0a,IAAV,CAAesK,OAAf,CAAuB7kB,MAA3C,EAAmDD,GAAnD,EAAwD;YAClD8kB,UAAU,KAAKhlB,IAAL,CAAU0a,IAAV,CAAesK,OAAf,CAAuB9kB,CAAvB,CAAd;aACK,IAAIo6B,IAAI,CAAb,EAAgBA,IAAItV,QAAQ4pB,cAAR,CAAuBzuC,MAA3C,EAAmDm6B,GAAnD,EAAwD;cAClDxa,OAAOkF,QAAQ4pB,cAAR,CAAuBtU,CAAvB,CAAX;cACIA,KAAK,CAAL,IAAUiU,WAAWruC,CAAX,IAAgB4f,KAAK+uB,SAAnC,EAA8C;gBACxCvf,OAAOtK,QAAQ4pB,cAAR,CAAuBtU,IAAI,CAA3B,CAAX;uBACWp6B,CAAX,IAAgB,CAACquC,WAAWruC,CAAX,IAAgBovB,KAAKuf,SAAtB,KACb/uB,KAAKgvB,OAAL,GAAexf,KAAKwf,OADP,KACmBhvB,KAAK+uB,SAAL,GAAiBvf,KAAKuf,SADzC,IAEdvf,KAAKwf,OAFP;;;;;;;;WAUDP,UAAP;;;oCAGFlH,2CAAgB16B,KAAKoiC,aAAa;QAC5B,CAAC,KAAK/uC,IAAL,CAAU6a,IAAX,IAAmB,CAAC,KAAK7a,IAAL,CAAU4X,IAAlC,EAAwC;;;;QAElCA,IAH0B,GAGjB,KAAK5X,IAHY,CAG1B4X,IAH0B;;QAI5BjL,OAAOiL,KAAK3H,UAAhB,EAA4B;;;;QAExBlJ,SAAS6Q,KAAK1R,OAAL,CAAayG,GAAb,CAAb;QACI5F,WAAW6Q,KAAK1R,OAAL,CAAayG,MAAM,CAAnB,CAAf,EAAsC;;;;;QAGhCjI,MAV0B,GAUf,KAAK1E,IAVU,CAU1B0E,MAV0B;;WAWzB+B,GAAP,GAAaM,MAAb;QACIrC,OAAO+B,GAAP,IAAc/B,OAAOvE,MAAzB,EAAiC;;;;QAI7B6uC,aAAatqC,OAAO2B,YAAP,EAAjB;QACI4oC,eAAeloC,SAASrC,OAAO2B,YAAP,EAA5B;;QAEI2oC,aAAaxB,0BAAjB,EAA6C;UACvC0B,OAAOxqC,OAAO+B,GAAlB;aACOA,GAAP,GAAawoC,YAAb;UACIE,eAAe,KAAKC,YAAL,EAAnB;qBACe1qC,OAAO+B,GAAtB;aACOA,GAAP,GAAayoC,IAAb;;;QAGEG,aAAaN,YAAYjmC,GAAZ,CAAgB;aAAMm/B,GAAG/mB,IAAH,EAAN;KAAhB,CAAjB;;kBAEcusB,gBAAd;SACK,IAAIvtC,IAAI,CAAb,EAAgBA,IAAI8uC,UAApB,EAAgC9uC,GAAhC,EAAqC;UAC/BovC,gBAAgB5qC,OAAO2B,YAAP,EAApB;UACIkpC,aAAa7qC,OAAO2B,YAAP,EAAjB;;UAEIkpC,aAAa7B,oBAAjB,EAAuC;YACjC8B,cAAc,EAAlB;aACK,IAAIvd,IAAI,CAAb,EAAgBA,IAAIra,KAAKJ,SAAzB,EAAoCya,GAApC,EAAyC;sBAC3B5yB,IAAZ,CAAiBqF,OAAOgD,WAAP,KAAuB,KAAxC;;OAHJ,MAMO;YACD,CAAC6nC,aAAa1B,gBAAd,KAAmCj2B,KAAK63B,gBAA5C,EAA8D;gBACtD,IAAIjvC,KAAJ,CAAU,oBAAV,CAAN;;;YAGEgvC,cAAc53B,KAAK83B,YAAL,CAAkBH,aAAa1B,gBAA/B,CAAlB;;;UAGE0B,aAAa5B,kBAAjB,EAAqC;YAC/BgC,cAAc,EAAlB;aACK,IAAI1d,KAAI,CAAb,EAAgBA,KAAIra,KAAKJ,SAAzB,EAAoCya,IAApC,EAAyC;sBAC3B5yB,IAAZ,CAAiBqF,OAAOgD,WAAP,KAAuB,KAAxC;;;YAGEkoC,YAAY,EAAhB;aACK,IAAI3d,MAAI,CAAb,EAAgBA,MAAIra,KAAKJ,SAAzB,EAAoCya,KAApC,EAAyC;oBAC7B5yB,IAAV,CAAeqF,OAAOgD,WAAP,KAAuB,KAAtC;;;;;UAKAmoC,SAAS,KAAKC,WAAL,CAAiBP,UAAjB,EAA6BC,WAA7B,EAA0CG,WAA1C,EAAuDC,SAAvD,CAAb;UACIC,WAAW,CAAf,EAAkB;wBACAP,aAAhB;;;;UAIEJ,OAAOxqC,OAAO+B,GAAlB;aACOA,GAAP,GAAawoC,YAAb;;UAEIM,aAAa3B,qBAAjB,EAAwC;YAClChH,SAAS,KAAKwI,YAAL,EAAb;OADF,MAEO;YACDxI,SAASuI,YAAb;;;;UAIEY,UAAUnJ,OAAOzmC,MAAP,KAAkB,CAAlB,GAAsB4uC,YAAY5uC,MAAlC,GAA2CymC,OAAOzmC,MAAhE;UACI6vC,UAAU,KAAKC,YAAL,CAAkBF,OAAlB,CAAd;UACIG,UAAU,KAAKD,YAAL,CAAkBF,OAAlB,CAAd;;UAEInJ,OAAOzmC,MAAP,KAAkB,CAAtB,EAAyB;;aAClB,IAAID,KAAI,CAAb,EAAgBA,KAAI6uC,YAAY5uC,MAAhC,EAAwCD,IAAxC,EAA6C;cACvC+mC,QAAQ8H,YAAY7uC,EAAZ,CAAZ;gBACM8d,CAAN,IAAWtb,KAAKu+B,KAAL,CAAW+O,QAAQ9vC,EAAR,IAAa2vC,MAAxB,CAAX;gBACMptB,CAAN,IAAW/f,KAAKu+B,KAAL,CAAWiP,QAAQhwC,EAAR,IAAa2vC,MAAxB,CAAX;;OAJJ,MAMO;YACDM,YAAYd,WAAWvmC,GAAX,CAAe;iBAAMm/B,GAAG/mB,IAAH,EAAN;SAAf,CAAhB;YACIkvB,WAAWrB,YAAYjmC,GAAZ,CAAgB;iBAAM,KAAN;SAAhB,CAAf;;aAEK,IAAI5I,MAAI,CAAb,EAAgBA,MAAI0mC,OAAOzmC,MAA3B,EAAmCD,KAAnC,EAAwC;cAClC8iB,MAAM4jB,OAAO1mC,GAAP,CAAV;cACI8iB,MAAM+rB,YAAY5uC,MAAtB,EAA8B;gBACxB8mC,SAAQkJ,UAAUntB,GAAV,CAAZ;qBACSA,GAAT,IAAgB,IAAhB;;mBAEMhF,CAAN,IAAWtb,KAAKu+B,KAAL,CAAW+O,QAAQ9vC,GAAR,IAAa2vC,MAAxB,CAAX;mBACMptB,CAAN,IAAW/f,KAAKu+B,KAAL,CAAWiP,QAAQhwC,GAAR,IAAa2vC,MAAxB,CAAX;;;;aAICQ,wBAAL,CAA8BF,SAA9B,EAAyCd,UAAzC,EAAqDe,QAArD;;aAEK,IAAIlwC,MAAI,CAAb,EAAgBA,MAAI6uC,YAAY5uC,MAAhC,EAAwCD,KAAxC,EAA6C;cACvCowC,SAASH,UAAUjwC,GAAV,EAAa8d,CAAb,GAAiBqxB,WAAWnvC,GAAX,EAAc8d,CAA5C;cACIuyB,SAASJ,UAAUjwC,GAAV,EAAauiB,CAAb,GAAiB4sB,WAAWnvC,GAAX,EAAcuiB,CAA5C;;sBAEYviB,GAAZ,EAAe8d,CAAf,IAAoBsyB,MAApB;sBACYpwC,GAAZ,EAAeuiB,CAAf,IAAoB8tB,MAApB;;;;sBAIYjB,aAAhB;aACO7oC,GAAP,GAAayoC,IAAb;;;;oCAIJE,uCAAe;QACT1qC,SAAS,KAAK1E,IAAL,CAAU0E,MAAvB;QACIiB,QAAQjB,OAAO6B,SAAP,EAAZ;;QAEIZ,QAAQmoC,gBAAZ,EAA8B;cACpB,CAACnoC,QAAQooC,oBAAT,KAAkC,CAAlC,GAAsCrpC,OAAO6B,SAAP,EAA9C;;;QAGEqgC,SAAS,IAAI4J,WAAJ,CAAgB7qC,KAAhB,CAAb;QACIzF,IAAI,CAAR;QACI+mC,QAAQ,CAAZ;WACO/mC,IAAIyF,KAAX,EAAkB;UACZ8qC,MAAM/rC,OAAO6B,SAAP,EAAV;UACImqC,WAAW,CAACD,MAAM1C,oBAAP,IAA+B,CAA9C;UACI/sC,KAAKyvC,MAAM3C,gBAAN,GAAyBppC,OAAOisC,UAAhC,GAA6CjsC,OAAO6B,SAA7D;;WAEK,IAAI+zB,IAAI,CAAb,EAAgBA,IAAIoW,QAAJ,IAAgBxwC,IAAIyF,KAApC,EAA2C20B,GAA3C,EAAgD;iBACrCt5B,GAAGD,IAAH,CAAQ2D,MAAR,CAAT;eACOxE,GAAP,IAAc+mC,KAAd;;;;WAIGL,MAAP;;;oCAGFqJ,qCAAatqC,OAAO;QACdjB,SAAS,KAAK1E,IAAL,CAAU0E,MAAvB;QACIxE,IAAI,CAAR;QACI0wC,SAAS,IAAIC,UAAJ,CAAelrC,KAAf,CAAb;;WAEOzF,IAAIyF,KAAX,EAAkB;UACZ8qC,MAAM/rC,OAAO6B,SAAP,EAAV;UACImqC,WAAW,CAACD,MAAMvC,oBAAP,IAA+B,CAA9C;;UAEIuC,MAAMzC,eAAV,EAA2B;aACpB0C,QAAL;OADF,MAGO;YACD1vC,KAAKyvC,MAAMxC,gBAAN,GAAyBvpC,OAAOgD,WAAhC,GAA8ChD,OAAO+iC,QAA9D;aACK,IAAInN,IAAI,CAAb,EAAgBA,IAAIoW,QAAJ,IAAgBxwC,IAAIyF,KAApC,EAA2C20B,GAA3C,EAAgD;iBACvCp6B,GAAP,IAAcc,GAAGD,IAAH,CAAQ2D,MAAR,CAAd;;;;;WAKCksC,MAAP;;;oCAGFd,mCAAYP,YAAYC,aAAaG,aAAaC,WAAW;QACvDrB,aAAa,KAAKF,gBAAtB;QACMz2B,IAFqD,GAE5C,KAAK5X,IAFuC,CAErD4X,IAFqD;;QAGvDi4B,SAAS,CAAb;;SAEK,IAAI3vC,IAAI,CAAb,EAAgBA,IAAI0X,KAAKJ,SAAzB,EAAoCtX,GAApC,EAAyC;UACnCsvC,YAAYtvC,CAAZ,MAAmB,CAAvB,EAA0B;;;;UAItBquC,WAAWruC,CAAX,MAAkB,CAAtB,EAAyB;eAChB,CAAP;;;UAGE,CAACqvC,aAAa5B,kBAAd,MAAsC,CAA1C,EAA6C;YACtCY,WAAWruC,CAAX,IAAgBwC,KAAKqZ,GAAL,CAAS,CAAT,EAAYyzB,YAAYtvC,CAAZ,CAAZ,CAAjB,IACCquC,WAAWruC,CAAX,IAAgBwC,KAAKC,GAAL,CAAS,CAAT,EAAY6sC,YAAYtvC,CAAZ,CAAZ,CADrB,EACmD;iBAC1C,CAAP;;;iBAGQ2vC,SAAStB,WAAWruC,CAAX,CAAV,GAA2BsvC,YAAYtvC,CAAZ,CAApC;OANF,MAOO;YACAquC,WAAWruC,CAAX,IAAgByvC,YAAYzvC,CAAZ,CAAjB,IACCquC,WAAWruC,CAAX,IAAgB0vC,UAAU1vC,CAAV,CADrB,EACoC;iBAC3B,CAAP;SAFF,MAIO,IAAIquC,WAAWruC,CAAX,IAAgBsvC,YAAYtvC,CAAZ,CAApB,EAAoC;mBAC/B2vC,UAAUtB,WAAWruC,CAAX,IAAgByvC,YAAYzvC,CAAZ,CAA1B,CAAD,IAA+CsvC,YAAYtvC,CAAZ,IAAiByvC,YAAYzvC,CAAZ,CAAhE,CAAT;SADK,MAGA;mBACK2vC,UAAUD,UAAU1vC,CAAV,IAAequC,WAAWruC,CAAX,CAAzB,KAA2C0vC,UAAU1vC,CAAV,IAAesvC,YAAYtvC,CAAZ,CAA1D,CAAV;;;;;WAKC2vC,MAAP;;;;;;;;oCAMFQ,6DAAyBzJ,QAAQkK,UAAUV,UAAU;QAC/CxJ,OAAOzmC,MAAP,KAAkB,CAAtB,EAAyB;;;;QAIrB8mC,QAAQ,CAAZ;WACOA,QAAQL,OAAOzmC,MAAtB,EAA8B;UACxB4wC,aAAa9J,KAAjB;;;UAGI+J,WAAW/J,KAAf;UACIgB,KAAKrB,OAAOoK,QAAP,CAAT;aACO,CAAC/I,GAAG9C,UAAX,EAAuB;aAChByB,OAAO,EAAEoK,QAAT,CAAL;;;;aAIK/J,SAAS+J,QAAT,IAAqB,CAACZ,SAASnJ,KAAT,CAA7B,EAA8C;;;;UAI1CA,QAAQ+J,QAAZ,EAAsB;;;;UAIlBC,aAAahK,KAAjB;UACIiK,WAAWjK,KAAf;;;aAGOA,SAAS+J,QAAhB,EAA0B;;YAEpBZ,SAASnJ,KAAT,CAAJ,EAAqB;eACdkK,gBAAL,CAAsBD,WAAW,CAAjC,EAAoCjK,QAAQ,CAA5C,EAA+CiK,QAA/C,EAAyDjK,KAAzD,EAAgE6J,QAAhE,EAA0ElK,MAA1E;qBACWK,KAAX;;;;;;;UAOAiK,aAAaD,UAAjB,EAA6B;aACtBG,UAAL,CAAgBL,UAAhB,EAA4BC,QAA5B,EAAsCE,QAAtC,EAAgDJ,QAAhD,EAA0DlK,MAA1D;OADF,MAEO;;aAEAuK,gBAAL,CAAsBD,WAAW,CAAjC,EAAoCF,QAApC,EAA8CE,QAA9C,EAAwDD,UAAxD,EAAoEH,QAApE,EAA8ElK,MAA9E;;YAEIqK,aAAa,CAAjB,EAAoB;eACbE,gBAAL,CAAsBJ,UAAtB,EAAkCE,aAAa,CAA/C,EAAkDC,QAAlD,EAA4DD,UAA5D,EAAwEH,QAAxE,EAAkFlK,MAAlF;;;;cAIIoK,WAAW,CAAnB;;;;oCAIJG,6CAAiB7P,IAAIC,IAAI8P,MAAMC,MAAMR,UAAUX,WAAW;QACpD7O,KAAKC,EAAT,EAAa;;;;QAITgQ,WAAW,CAAC,GAAD,EAAM,GAAN,CAAf;SACK,IAAIrxC,IAAI,CAAb,EAAgBA,IAAIqxC,SAASpxC,MAA7B,EAAqCD,GAArC,EAA0C;UACpCqJ,IAAIgoC,SAASrxC,CAAT,CAAR;UACI4wC,SAASO,IAAT,EAAe9nC,CAAf,IAAoBunC,SAASQ,IAAT,EAAe/nC,CAAf,CAAxB,EAA2C;YACrCqZ,IAAIyuB,IAAR;eACOC,IAAP;eACO1uB,CAAP;;;UAGE4uB,MAAMV,SAASO,IAAT,EAAe9nC,CAAf,CAAV;UACIkoC,MAAMX,SAASQ,IAAT,EAAe/nC,CAAf,CAAV;UACImoC,OAAOvB,UAAUkB,IAAV,EAAgB9nC,CAAhB,CAAX;UACIooC,OAAOxB,UAAUmB,IAAV,EAAgB/nC,CAAhB,CAAX;;UAEI06B,QAAQuN,QAAQC,GAAR,GAAc,CAAd,GAAkB,CAACE,OAAOD,IAAR,KAAiBD,MAAMD,GAAvB,CAA9B;;WAEK,IAAI5uB,KAAI0e,EAAb,EAAiB1e,MAAK2e,EAAtB,EAA0B3e,IAA1B,EAA+B;YACzBgvB,MAAMd,SAASluB,EAAT,EAAYrZ,CAAZ,CAAV;;YAEIqoC,OAAOJ,GAAX,EAAgB;iBACPE,OAAOF,GAAd;SADF,MAEO,IAAII,OAAOH,GAAX,EAAgB;iBACdE,OAAOF,GAAd;SADK,MAEA;gBACCC,OAAO,CAACE,MAAMJ,GAAP,IAAcvN,KAA3B;;;kBAGQrhB,EAAV,EAAarZ,CAAb,IAAkBqoC,GAAlB;;;;;oCAKNR,iCAAW9P,IAAIC,IAAIsQ,KAAKf,UAAUX,WAAW;QACvCG,SAASH,UAAU0B,GAAV,EAAe7zB,CAAf,GAAmB8yB,SAASe,GAAT,EAAc7zB,CAA9C;QACIuyB,SAASJ,UAAU0B,GAAV,EAAepvB,CAAf,GAAmBquB,SAASe,GAAT,EAAcpvB,CAA9C;;QAEI6tB,WAAW,CAAX,IAAgBC,WAAW,CAA/B,EAAkC;;;;SAI7B,IAAI3tB,IAAI0e,EAAb,EAAiB1e,KAAK2e,EAAtB,EAA0B3e,GAA1B,EAA+B;UACzBA,MAAMivB,GAAV,EAAe;kBACHjvB,CAAV,EAAa5E,CAAb,IAAkBsyB,MAAlB;kBACU1tB,CAAV,EAAaH,CAAb,IAAkB8tB,MAAlB;;;;;;;;ICpXauB;kBACP9xC,IAAZ,EAAkB;;;SACXA,IAAL,GAAYA,IAAZ;SACK6M,MAAL,GAAc,EAAd;SACKklC,OAAL,GAAe,EAAf;;;SAGKC,YAAL,CAAkB,CAAlB;;;mBAGFA,qCAAaxlC,OAAO;QACd,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAArB,EAA+B;cACrBA,MAAM2S,EAAd;;;QAGE,KAAK4yB,OAAL,CAAavlC,KAAb,KAAuB,IAA3B,EAAiC;WAC1BK,MAAL,CAAYxN,IAAZ,CAAiBmN,KAAjB;WACKulC,OAAL,CAAavlC,KAAb,IAAsB,KAAKK,MAAL,CAAY1M,MAAZ,GAAqB,CAA3C;;;WAGK,KAAK4xC,OAAL,CAAavlC,KAAb,CAAP;;;mBAGFylC,uCAAe;;;QACT7qC,IAAI,IAAI/G,EAAE6xC,YAAN,EAAR;;YAEQC,QAAR,CAAiB,YAAM;YAChBlrC,MAAL,CAAYG,CAAZ;aACOA,EAAEP,GAAF,EAAP;KAFF;;WAKOO,CAAP;;;;;;AC/BJ;AACA,IAAMi9B,aAAkB,KAAK,CAA7B;AACA,IAAMC,mBAAkB,KAAK,CAA7B;AACA,IAAMC,mBAAkB,KAAK,CAA7B;AACA,IAAMC,WAAkB,KAAK,CAA7B;AACA,IAAMC,WAAkB,KAAK,CAA7B;AACA,IAAMC,WAAkB,KAAK,CAA7B;;IAEMO;;;;;QACGp/B,qBAAKP,KAAK;WACRA,OAAO,CAAP,IAAYA,OAAO,GAAnB,GAAyB,CAAzB,GAA6B,CAApC;;;QAGK2B,yBAAOvC,QAAQ5D,OAAO;QACvBA,SAAS,CAAT,IAAcA,SAAS,GAA3B,EAAgC;aACvBuG,UAAP,CAAkBvG,KAAlB;KADF,MAEO;aACEyH,YAAP,CAAoBzH,KAApB;;;;;;;AAKN,IAAIsxC,OAAO,IAAI/xC,EAAEmB,MAAN,CAAa;oBACJnB,EAAEqB,KADE;QAEhBrB,EAAEqB,KAFc;QAGhBrB,EAAEqB,KAHc;QAIhBrB,EAAEqB,KAJc;QAKhBrB,EAAEqB,KALc;oBAMJ,IAAIrB,EAAE6B,KAAN,CAAY7B,EAAEoB,MAAd,EAAsB,kBAAtB,CANI;gBAOR,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB1B,EAAEoB,MAAvB,CAPQ;SAQf,IAAIpB,EAAE6B,KAAN,CAAY7B,EAAE0B,KAAd,EAAqB,CAArB,CARe;WASb,IAAI1B,EAAE6B,KAAN,CAAY+iC,OAAZ,EAAmB,CAAnB,CATa;WAUb,IAAI5kC,EAAE6B,KAAN,CAAY+iC,OAAZ,EAAmB,CAAnB;CAVA,CAAX;;;;;;IAgBqBoN;;;;;4BACnBC,qCAAa9P,MAAyB;QAAnBsE,YAAmB,uEAAJ,EAAI;;QAChCD,mBAAmB,EAAvB;QACI0L,UAAU,EAAd;QACIC,UAAU,EAAd;QACI96B,QAAQ,EAAZ;QACI2uB,OAAO,CAAX;QACIoM,QAAQ,CAAZ;QAAeC,QAAQ,CAAvB;QAA0BC,WAAW,CAArC;QACIC,aAAa,CAAjB;;SAEK,IAAI1yC,IAAI,CAAb,EAAgBA,IAAIsiC,KAAKhC,QAAL,CAAcrgC,MAAlC,EAA0CD,GAA1C,EAA+C;UACzC2e,IAAI2jB,KAAKhC,QAAL,CAActgC,CAAd,CAAR;;WAEK,IAAIo6B,IAAI,CAAb,EAAgBA,IAAIzb,EAAE3d,IAAF,CAAOf,MAA3B,EAAmCm6B,KAAK,CAAxC,EAA2C;YACrCtc,IAAIa,EAAE3d,IAAF,CAAOo5B,CAAP,CAAR;YACI7X,IAAI5D,EAAE3d,IAAF,CAAOo5B,IAAI,CAAX,CAAR;YACI0M,OAAO,CAAX;;;;;YAKInoB,EAAEgiB,OAAF,KAAc,kBAAd,IAAoCvG,MAAM,CAA9C,EAAiD;cAC3CnX,OAAOqf,KAAKhC,QAAL,CAActgC,IAAI,CAAlB,CAAX;cACIijB,QAAQA,KAAK0d,OAAL,KAAiB,kBAA7B,EAAiD;gBAC3CuH,OAAO,CAACqK,QAAQtvB,KAAKjiB,IAAL,CAAU,CAAV,CAAT,IAAyB,CAApC;gBACImnC,OAAO,CAACqK,QAAQvvB,KAAKjiB,IAAL,CAAU,CAAV,CAAT,IAAyB,CAApC;;gBAEI8c,MAAMoqB,IAAN,IAAc3lB,MAAM4lB,IAAxB,EAA8B;;;;;;;YAO9B,EAAExpB,EAAEgiB,OAAF,KAAc,kBAAd,IAAoCvG,MAAM,CAA5C,CAAJ,EAAoD;kBAC1C+J,UAAR;;;eAGK,KAAKwO,YAAL,CAAkB70B,CAAlB,EAAqBy0B,KAArB,EAA4BF,OAA5B,EAAqCvL,IAArC,EAA2C1C,gBAA3C,EAA2DG,QAA3D,CAAP;eACO,KAAKoO,YAAL,CAAkBpwB,CAAlB,EAAqBiwB,KAArB,EAA4BF,OAA5B,EAAqCxL,IAArC,EAA2CzC,gBAA3C,EAA2DG,QAA3D,CAAP;;YAEIsC,SAAS2L,QAAT,IAAqBtM,OAAO,GAAhC,EAAqC;gBAC7B3uB,MAAMvX,MAAN,GAAe,CAArB,KAA2BqkC,QAA3B;;SADF,MAGO;cACD6B,OAAO,CAAX,EAAc;kBACNhnC,IAAN,CAAWgnC,IAAX;mBACO,CAAP;;;gBAGIhnC,IAAN,CAAW2nC,IAAX;qBACWA,IAAX;;;gBAGMhpB,CAAR;gBACQyE,CAAR;;;;UAIE5D,EAAEgiB,OAAF,KAAc,WAAlB,EAA+B;yBACZxhC,IAAjB,CAAsBuzC,aAAa,CAAnC;;;;;QAKApQ,KAAKhC,QAAL,CAAcrgC,MAAd,GAAuB,CAAvB,IAA4BqiC,KAAKhC,QAAL,CAAcgC,KAAKhC,QAAL,CAAcrgC,MAAd,GAAuB,CAArC,EAAwC0gC,OAAxC,KAAoD,WAApF,EAAiG;uBAC9ExhC,IAAjB,CAAsBuzC,aAAa,CAAnC;;;QAGEjwB,OAAO6f,KAAK7f,IAAhB;QACIrJ,OAAO;wBACSutB,iBAAiB1mC,MAD1B;YAEHwiB,KAAKvB,IAFF;YAGHuB,KAAKX,IAHF;YAIHW,KAAKZ,IAJF;YAKHY,KAAKV,IALF;wBAMS4kB,gBANT;oBAOKC,YAPL;aAQFpvB,KARE;eASA66B,OATA;eAUAC;KAVX;;QAaI3sC,OAAOusC,KAAKvsC,IAAL,CAAUyT,IAAV,CAAX;QACIoF,OAAO,IAAK7Y,OAAO,CAAvB;;QAEInB,SAAS,IAAIrE,EAAE6xC,YAAN,CAAmBrsC,OAAO6Y,IAA1B,CAAb;SACKzX,MAAL,CAAYvC,MAAZ,EAAoB4U,IAApB;;;QAGIoF,SAAS,CAAb,EAAgB;aACPwlB,IAAP,CAAY,CAAZ,EAAexlB,IAAf;;;WAGKha,OAAOjF,MAAd;;;4BAGFozC,qCAAa/xC,OAAOgpB,MAAM8c,QAAQI,MAAM8L,WAAWC,UAAU;QACvDC,OAAOlyC,QAAQgpB,IAAnB;;QAEIhpB,UAAUgpB,IAAd,EAAoB;cACVipB,QAAR;KADF,MAEO;UACD,CAAC,GAAD,IAAQC,IAAR,IAAgBA,QAAQ,GAA5B,EAAiC;gBACvBF,SAAR;YACIE,OAAO,CAAX,EAAc;iBACL,CAACA,IAAR;SADF,MAEO;kBACGD,QAAR;;;;aAIG1zC,IAAP,CAAY2zC,IAAZ;;;WAGKhM,IAAP;;;;;;ICrJiBiM;;;qBACPjzC,IAAZ,EAAkB;;;iDAChB,mBAAMA,IAAN,CADgB;;UAEXkzC,YAAL,GAAoB,IAAIb,eAAJ,EAApB;;;;sBAGFc,+BAAUxmC,KAAK;QACTH,QAAQ,KAAKxM,IAAL,CAAUspB,QAAV,CAAmB3c,GAAnB,CAAZ;QACI2M,OAAO9M,MAAM85B,OAAN,EAAX;;;QAGI8M,YAAY,KAAKpzC,IAAL,CAAUiG,IAAV,CAAeC,OAAf,CAAuByG,GAAvB,CAAhB;QACI0mC,aAAa,KAAKrzC,IAAL,CAAUiG,IAAV,CAAeC,OAAf,CAAuByG,MAAM,CAA7B,CAAjB;;QAEIjI,SAAS,KAAK1E,IAAL,CAAU8lC,eAAV,CAA0B,MAA1B,CAAb;WACOr/B,GAAP,IAAc2sC,SAAd;;QAEI3zC,SAASiF,OAAO+H,UAAP,CAAkB4mC,aAAaD,SAA/B,CAAb;;;QAGI95B,QAAQA,KAAKmtB,gBAAL,GAAwB,CAApC,EAAuC;eAC5B,IAAIjhC,MAAJ,CAAW/F,MAAX,CAAT;2BACsB6Z,KAAKoQ,UAA3B,6GAAuC;;;;;;;;;;;;YAA9BW,SAA8B;;cAC/B,KAAK2nB,YAAL,CAAkB3nB,UAAUzM,OAA5B,CAAN;eACO1W,aAAP,CAAqByF,GAArB,EAA0B0d,UAAU5jB,GAApC;;KAJJ,MAMO,IAAI6S,QAAQ,KAAKtZ,IAAL,CAAU6lC,mBAAtB,EAA2C;;eAEvC,KAAKqN,YAAL,CAAkBZ,YAAlB,CAA+B9lC,MAAMg2B,IAArC,EAA2ClpB,KAAKwtB,YAAhD,CAAT;;;SAGGxtB,IAAL,CAAUja,IAAV,CAAeI,MAAf;SACKwG,IAAL,CAAUC,OAAV,CAAkB7G,IAAlB,CAAuB,KAAK0H,MAA5B;;SAEKkS,IAAL,CAAU0pB,OAAV,CAAkBtjC,IAAlB,CAAuB;eACZmN,MAAMysB,YADM;eAEZzsB,MAAMu2B,WAAN,GAAoBE;KAF/B;;SAKKl8B,MAAL,IAAetH,OAAOU,MAAtB;WACO,KAAKmZ,IAAL,CAAUnZ,MAAV,GAAmB,CAA1B;;;sBAGF8G,yBAAOvC,QAAQ;;;;;;;SAOR4U,IAAL,GAAY,EAAZ;SACKvS,MAAL,GAAc,CAAd;SACKd,IAAL,GAAY;eACD;KADX;;SAIKgT,IAAL,GAAY;eACD,EADC;gBAEA;KAFZ;;;;;QAQI/Y,IAAI,CAAR;WACOA,IAAI,KAAK2M,MAAL,CAAY1M,MAAvB,EAA+B;WACxBgzC,SAAL,CAAe,KAAKtmC,MAAL,CAAY3M,GAAZ,CAAf;;;QAGEuD,OAAO6vC,UAAU,KAAKtzC,IAAL,CAAUyD,IAApB,CAAX;SACKC,SAAL,GAAiB,KAAK4V,IAAL,CAAUnZ,MAA3B;;SAEK8F,IAAL,CAAUC,OAAV,CAAkB7G,IAAlB,CAAuB,KAAK0H,MAA5B;WACOd,IAAP,CAAYd,SAAZ,CAAsBpE,IAAtB,CAA2B,KAAKkF,IAAhC;;QAEI+S,OAAOs6B,UAAU,KAAKtzC,IAAL,CAAUgZ,IAApB,CAAX;SACKu6B,gBAAL,GAAwB,KAAKttC,IAAL,CAAUZ,OAAlC;;QAEI9B,OAAO+vC,UAAU,KAAKtzC,IAAL,CAAUuD,IAApB,CAAX;SACKC,eAAL,GAAuB,KAAKyV,IAAL,CAAU0pB,OAAV,CAAkBxiC,MAAzC;;;;;;;;;;;;;;;;;;;;;;;;;cAyBU8G,MAAV,CAAiBvC,MAAjB,EAAyB;cACf;kBAAA;kBAAA;cAGA,KAAKuB,IAHL;kBAAA;gBAKE,KAAKjG,IAAL,CAAU,MAAV,CALF;cAMA,KAAKA,IAAL,CAAUoZ,IANV;cAOA,KAAKE,IAPL;cAQA,KAAKL,IARL;cASA,KAAKjZ,IAAL,CAAUmZ;;;;;;;KAVpB;;;;EAxGmC24B;;ICDlB0B;;;qBACPxzC,IAAZ,EAAkB;;;iDAChB,mBAAMA,IAAN,CADgB;;UAGX0oC,GAAL,GAAW,MAAK1oC,IAAL,CAAU,MAAV,CAAX;QACI,CAAC,MAAK0oC,GAAV,EAAe;YACP,IAAIloC,KAAJ,CAAU,gBAAV,CAAN;;;;;sBAIJizC,iDAAoB;SACbC,WAAL,GAAmB,EAAnB;QACIzK,SAAS,EAAb;;yBAEgB,KAAKp8B,MAArB,6GAA6B;;;;;;;;;;;;UAApBF,GAAoB;;WACtB+mC,WAAL,CAAiBr0C,IAAjB,CAAsB,KAAKqpC,GAAL,CAASn8B,aAAT,CAAuBI,GAAvB,CAAtB;;UAEIH,QAAQ,KAAKxM,IAAL,CAAUspB,QAAV,CAAmB3c,GAAnB,CAAZ;UACI61B,OAAOh2B,MAAMg2B,IAAjB,CAJ2B;;WAMtB,IAAI0H,IAAT,IAAiB19B,MAAMu8B,WAAvB,EAAoC;eAC3BmB,IAAP,IAAe,IAAf;;;;SAICjB,MAAL,GAAc,KAAK0K,WAAL,CAAiB,KAAKjL,GAAL,CAASQ,eAA1B,EAA2CD,MAA3C,CAAd;;;sBAGF0K,mCAAYtK,OAAOuK,MAAM;QACnB5oC,MAAM,EAAV;SACK,IAAI9K,IAAI,CAAb,EAAgBA,IAAImpC,MAAMlpC,MAA1B,EAAkCD,GAAlC,EAAuC;UACjCgqC,OAAOb,MAAMnpC,CAAN,CAAX;UACI0zC,KAAK1zC,CAAL,CAAJ,EAAa;aACNwoC,GAAL,CAAShkC,MAAT,CAAgB+B,GAAhB,GAAsByjC,KAAKnjC,MAA3B;YACI1H,IAAJ,CAAS,KAAKqpC,GAAL,CAAShkC,MAAT,CAAgB+H,UAAhB,CAA2By9B,KAAK/pC,MAAhC,CAAT;OAFF,MAGO;YACDd,IAAJ,CAAS,IAAImG,MAAJ,CAAW,CAAC,EAAD,CAAX,CAAT,EADK;;;;WAKFwF,GAAP;;;sBAGF6oC,yCAAe3nC,SAAS;YACdqB,OAAR,GAAkB,EAAlB;YACQhC,QAAR,GAAmB;eACR,CADQ;WAEZ;KAFP;;QAKIuoC,WAAW,EAAf;QACIC,aAAa,EAAjB;0BACgB,KAAKlnC,MAArB,oHAA6B;;;;;;;;;;;;UAApBF,GAAoB;;UACvBU,KAAK,KAAKq7B,GAAL,CAAS17B,UAAT,CAAoBL,GAApB,CAAT;UACIU,MAAM,IAAV,EAAgB;;;;UAIZ,CAACymC,SAASzmC,EAAT,CAAL,EAAmB;gBACTE,OAAR,CAAgBlO,IAAhB,CAAqB,eAAc,EAAd,EAAkB,KAAKqpC,GAAL,CAASx8B,OAAT,CAAiBqB,OAAjB,CAAyBF,EAAzB,CAAlB,CAArB;mBACWhO,IAAX,CAAgB,EAAhB;;;eAGOgO,EAAT,IAAe,IAAf;cACQ9B,QAAR,CAAiB0B,GAAjB,CAAqB5N,IAArB,CAA0B6M,QAAQqB,OAAR,CAAgBpN,MAAhB,GAAyB,CAAnD;;UAEIqM,QAAQ,KAAKxM,IAAL,CAAUspB,QAAV,CAAmB3c,GAAnB,CAAZ;UACI61B,OAAOh2B,MAAMg2B,IAAjB,CAf2B;WAgBtB,IAAI0H,IAAT,IAAiB19B,MAAMw8B,UAAvB,EAAmC;mBACtB+K,WAAW5zC,MAAX,GAAoB,CAA/B,EAAkC+pC,IAAlC,IAA0C,IAA1C;;;;SAIC,IAAIhqC,IAAI,CAAb,EAAgBA,IAAIgM,QAAQqB,OAAR,CAAgBpN,MAApC,EAA4CD,GAA5C,EAAiD;UAC3CiJ,OAAO+C,QAAQqB,OAAR,CAAgBrN,CAAhB,CAAX;aACOiJ,KAAK6qC,QAAZ;UACI7qC,KAAKqE,OAAL,IAAgBrE,KAAKqE,OAAL,CAAa87B,KAAjC,EAAwC;aACjC97B,OAAL,GAAe,eAAc,EAAd,EAAkBrE,KAAKqE,OAAvB,CAAf;aACKA,OAAL,CAAa87B,KAAb,GAAqB,KAAKqK,WAAL,CAAiBxqC,KAAKqE,OAAL,CAAa87B,KAA9B,EAAqCyK,WAAW7zC,CAAX,CAArC,CAArB;;;;;;;sBAON+zC,+CAAkB/nC,SAAS;QACrB6nC,aAAa,EAAjB;0BACgB,KAAKlnC,MAArB,oHAA6B;;;;;;;;;;;;UAApBF,GAAoB;;UACvBH,QAAQ,KAAKxM,IAAL,CAAUspB,QAAV,CAAmB3c,GAAnB,CAAZ;UACI61B,OAAOh2B,MAAMg2B,IAAjB,CAF2B;;WAItB,IAAI0H,IAAT,IAAiB19B,MAAMw8B,UAAvB,EAAmC;mBACtBkB,IAAX,IAAmB,IAAnB;;;;QAIAd,cAAc,eAAc,EAAd,EAAkB,KAAKV,GAAL,CAASx8B,OAAT,CAAiBsB,OAAnC,CAAlB;gBACY87B,KAAZ,GAAoB,KAAKqK,WAAL,CAAiB,KAAKjL,GAAL,CAASx8B,OAAT,CAAiBsB,OAAjB,CAAyB87B,KAA1C,EAAiDyK,UAAjD,CAApB;;YAEQxmC,OAAR,GAAkB,CAAC,EAAEC,SAAS47B,WAAX,EAAD,CAAlB;WACOl9B,QAAQX,QAAR,GAAmB;eACf,CADe;eAEf,CAFe;cAGhB,CAAC,EAAEwB,OAAO,CAAT,EAAYM,IAAI,CAAhB,EAAD,CAHgB;gBAId,KAAKqmC,WAAL,CAAiBvzC;KAJ7B;;;sBAQF+zC,+BAAUhvC,QAAQ;QACZ,CAACA,MAAL,EAAa;aACJ,IAAP;;;QAGE,CAAC,KAAKmnB,OAAV,EAAmB;WACZA,OAAL,GAAe,EAAf;;;SAGGA,OAAL,CAAahtB,IAAb,CAAkB6F,MAAlB;WACOmH,gBAAgBlM,MAAhB,GAAyB,KAAKksB,OAAL,CAAalsB,MAAtC,GAA+C,CAAtD;;;sBAGF8G,yBAAOvC,QAAQ;SACR+uC,iBAAL;;QAEI7mC,UAAU;eACH,KAAK8mC,WAAL,CAAiBvzC,MAAjB,GAA0B,GAA1B,GAAgC,CAAhC,GAAoC,CADjC;cAEJ,CAAC,EAAE4M,OAAO,CAAT,EAAY7B,OAAO,KAAKwoC,WAAL,CAAiBvzC,MAAjB,GAA0B,CAA7C,EAAD;KAFV;;QAKI+L,UAAU,eAAc,EAAd,EAAkB,KAAKw8B,GAAL,CAASx8B,OAA3B,CAAd;YACQsB,OAAR,GAAkB,IAAlB;YACQZ,OAAR,GAAkBA,OAAlB;YACQunC,QAAR,GAAmB,IAAnB;YACQ/oC,WAAR,GAAsB,KAAKsoC,WAA3B;;eAEgB,CAAC,SAAD,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,YAA/C,EAA6D,QAA7D,EAAuE,YAAvE,EAAqF,cAArF,EAAqG,UAArG,CAdH;gDAcqH;UAAzH/yC,eAAJ;cACKA,GAAR,IAAe,KAAKuzC,SAAL,CAAe,KAAKxL,GAAL,CAASxjC,MAAT,CAAgBgH,QAAQvL,GAAR,CAAhB,CAAf,CAAf;;;YAGMwL,GAAR,GAAc,CAAC,KAAK+nC,SAAL,CAAe,OAAf,CAAD,EAA0B,KAAKA,SAAL,CAAe,UAAf,CAA1B,EAAsD,CAAtD,CAAd;YACQE,QAAR,GAAmB,KAAKV,WAAL,CAAiBvzC,MAApC;;QAEI,KAAKuoC,GAAL,CAASz8B,SAAb,EAAwB;WACjB4nC,cAAL,CAAoB3nC,OAApB;KADF,MAEO;WACA+nC,iBAAL,CAAuB/nC,OAAvB;;;QAGEH,MAAM;cACA,KAAK28B,GAAL,CAAS2L,MADT;iBAEG,CAAC,KAAK3L,GAAL,CAASlpC,cAAV,CAFH;oBAGM,CAAC0M,OAAD,CAHN;mBAIK,KAAKmgB,OAJV;uBAKS,KAAK4c;KALxB;;WAQOhiC,MAAP,CAAcvC,MAAd,EAAsBqH,GAAtB;;;;EA5JmC+lC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLvC,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEA;;;;IAIqBwC;UACZl0C,uBAAMX,QAAQ;QACfL,SAASK,OAAO80C,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAAb;WACOn1C,WAAW,MAAX,IAAqBA,WAAW,MAAhC,IAA0CA,WAAW+E,OAAO2/B,YAAP,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAA5D;;;mBAGUp/B,MAAZ,EAA4C;QAAxB8vC,eAAwB,uEAAN,IAAM;;;;SACrC9vC,MAAL,GAAcA,MAAd;SACK+vC,aAAL,GAAqB,KAAK/vC,MAAL,CAAY+B,GAAjC;SACKiuC,OAAL,GAAe,EAAf;SACKC,OAAL,GAAe,EAAf;SACKC,gBAAL;;;SAGK,IAAI7vC,GAAT,IAAgB,KAAK8vC,SAAL,CAAe/7B,MAA/B,EAAuC;UACjCqC,QAAQ,KAAK05B,SAAL,CAAe/7B,MAAf,CAAsB/T,GAAtB,CAAZ;UACI+T,OAAO/T,GAAP,KAAeoW,MAAMhb,MAAN,GAAe,CAAlC,EAAqC;+BACb,IAAtB,EAA4B4E,GAA5B,EAAiC;eAC1B,KAAK+vC,SAAL,CAAentB,IAAf,CAAoB,IAApB,EAA0BxM,KAA1B;SADP;;;;QAMAq5B,eAAJ,EAAqB;WACd3O,mBAAL,GAA2B,IAAIsI,uBAAJ,CAA4B,IAA5B,EAAkCqG,eAAlC,CAA3B;;;;oBAIJM,+BAAU35B,OAAO;QACX,EAAEA,MAAMpW,GAAN,IAAa,KAAK2vC,OAApB,CAAJ,EAAkC;UAC5B;aACGA,OAAL,CAAav5B,MAAMpW,GAAnB,IAA0B,KAAKgwC,YAAL,CAAkB55B,KAAlB,CAA1B;OADF,CAEE,OAAOlb,CAAP,EAAU;YACNjB,QAAQC,SAAZ,EAAuB;kBACb+1C,KAAR,2BAAsC75B,MAAMpW,GAA5C;kBACQiwC,KAAR,CAAc/0C,EAAEkrB,KAAhB;;;;;WAKC,KAAKupB,OAAL,CAAav5B,MAAMpW,GAAnB,CAAP;;;oBAGF+gC,2CAAgB/gC,KAAK;QACfoW,QAAQ,KAAK05B,SAAL,CAAe/7B,MAAf,CAAsB/T,GAAtB,CAAZ;QACIoW,KAAJ,EAAW;WACJzW,MAAL,CAAY+B,GAAZ,GAAkB0U,MAAMpU,MAAxB;aACO,KAAKrC,MAAZ;;;WAGK,IAAP;;;oBAGFkwC,+CAAmB;WACV,KAAKC,SAAL,GAAiB35B,UAAU9U,MAAV,CAAiB,KAAK1B,MAAtB,EAA8B,EAACsN,cAAc,CAAf,EAA9B,CAAxB;;;oBAGF+iC,qCAAa55B,OAAO;QACd1U,MAAM,KAAK/B,MAAL,CAAY+B,GAAtB;;QAEI/B,SAAS,KAAKohC,eAAL,CAAqB3qB,MAAMpW,GAA3B,CAAb;QACI3D,SAAS0X,OAAOqC,MAAMpW,GAAb,EAAkBqB,MAAlB,CAAyB1B,MAAzB,EAAiC,IAAjC,EAAuCyW,MAAMhb,MAA7C,CAAb;;SAEKuE,MAAL,CAAY+B,GAAZ,GAAkBA,GAAlB;WACOrF,MAAP;;;;;;;;;;;;;;oBAkBF6zC,2BAAQt0C,KAAkB;QAAb0wB,IAAa,uEAAN,IAAM;;QACpBzsB,SAAS,KAAK6Q,IAAL,CAAU9Q,OAAV,CAAkBhE,GAAlB,CAAb;QACIiE,MAAJ,EAAY;aACHA,OAAOysB,IAAP,CAAP;;;WAGK,IAAP;;;;;;;;;;;;;;;oBA4JF2E,qDAAqB5T,WAAW;WACvB,CAAC,CAAC,KAAKkK,cAAL,CAAoB9P,MAApB,CAA2B4F,SAA3B,CAAT;;;;;;;;;;;;oBAUFiW,+CAAkBjW,WAAW;WACpB,KAAKkH,QAAL,CAAc,KAAKgD,cAAL,CAAoB9P,MAApB,CAA2B4F,SAA3B,CAAd,EAAqD,CAACA,SAAD,CAArD,CAAP;;;;;;;;;;;;;;oBAYFge,2CAAgBl7B,QAAQ;QAClB2H,SAAS,EAAb;QACIvD,MAAMpE,OAAO/E,MAAjB;QACI6iB,MAAM,CAAV;QACI8G,OAAO,CAAC,CAAZ;QACIxD,QAAQ,CAAC,CAAb;;WAEOtD,OAAO1Z,GAAd,EAAmB;UACb2Z,OAAO,CAAX;UACIiyB,YAAY,CAAhB;;UAEIlyB,MAAM1Z,GAAV,EAAe;;eAENpE,OAAOge,UAAP,CAAkBF,KAAlB,CAAP;YACI,UAAUC,IAAV,IAAkBA,QAAQ,MAA1B,IAAoCD,MAAM1Z,GAA9C,EAAmD;cAC7C6Z,OAAOje,OAAOge,UAAP,CAAkBF,GAAlB,CAAX;cACI,UAAUG,IAAV,IAAkBA,QAAQ,MAA9B,EAAsC;;mBAE7B,CAAC,CAACF,OAAO,KAAR,KAAkB,EAAnB,KAA0BE,OAAO,KAAjC,IAA0C,OAAjD;;;;;oBAKU,UAAUF,IAAV,IAAkBA,QAAQ,MAA3B,IAAuC,WAAWA,IAAX,IAAmBA,QAAQ,OAAnE,GAA+E,CAA/E,GAAmF,CAA/F;OAZF,MAaO;;;;UAIHqD,UAAU,CAAV,IAAe4uB,cAAc,CAAjC,EAAoC;;eAE3B71C,IAAP,CAAY,KAAKiqB,QAAL,CAAc,KAAKgD,cAAL,CAAoB9P,MAApB,CAA2BsN,IAA3B,EAAiC7G,IAAjC,CAAd,EAAsD,CAAC6G,IAAD,EAAO7G,IAAP,CAAtD,CAAZ;OAFF,MAGO,IAAIqD,UAAU,CAAV,IAAe4uB,cAAc,CAAjC,EAAoC;;eAElC71C,IAAP,CAAY,KAAKg5B,iBAAL,CAAuBvO,IAAvB,CAAZ;;;aAGK7G,IAAP;cACQiyB,SAAR;;;WAGKroC,MAAP;;;;;;;;;;;;oBAiBFszB,yBAAOj7B,QAAQ+oB,cAAc7K,QAAQve,UAAU;WACtC,KAAKswC,aAAL,CAAmBhV,MAAnB,CAA0Bj7B,MAA1B,EAAkC+oB,YAAlC,EAAgD7K,MAAhD,EAAwDve,QAAxD,CAAP;;;;;;;;;oBAOFqnB,2CAAgBvf,KAAK;WACZ,KAAKwoC,aAAL,CAAmBjpB,eAAnB,CAAmCvf,GAAnC,CAAP;;;;;;;;;;;;;oBAeFugC,uCAAc1gC,OAAwB;QAAjBgvB,UAAiB,uEAAJ,EAAI;;QAChC,CAAC,KAAKmZ,OAAL,CAAanoC,KAAb,CAAL,EAA0B;UACpB,KAAKqoC,SAAL,CAAe/7B,MAAf,CAAsBQ,IAA1B,EAAgC;aACzBq7B,OAAL,CAAanoC,KAAb,IAAsB,IAAIm5B,QAAJ,CAAan5B,KAAb,EAAoBgvB,UAApB,EAAgC,IAAhC,CAAtB;OADF,MAGO,IAAI,KAAKqZ,SAAL,CAAe/7B,MAAf,CAAsB,MAAtB,CAAJ,EAAmC;aACnC67B,OAAL,CAAanoC,KAAb,IAAsB,IAAIg8B,QAAJ,CAAah8B,KAAb,EAAoBgvB,UAApB,EAAgC,IAAhC,CAAtB;;;;WAIG,KAAKmZ,OAAL,CAAanoC,KAAb,KAAuB,IAA9B;;;;;;;;;;;;;;oBAYF8c,6BAAS9c,OAAwB;QAAjBgvB,UAAiB,uEAAJ,EAAI;;QAC3B,CAAC,KAAKmZ,OAAL,CAAanoC,KAAb,CAAL,EAA0B;UACpB,KAAKqoC,SAAL,CAAe/7B,MAAf,CAAsBY,IAA1B,EAAgC;aACzBi7B,OAAL,CAAanoC,KAAb,IAAsB,IAAIg/B,SAAJ,CAAch/B,KAAd,EAAqBgvB,UAArB,EAAiC,IAAjC,CAAtB;OADF,MAGO,IAAK,KAAKqZ,SAAL,CAAe/7B,MAAf,CAAsBa,IAAvB,IAAiC,KAAKk7B,SAAL,CAAe/7B,MAAf,CAAsBc,IAA3D,EAAkE;aAClE+6B,OAAL,CAAanoC,KAAb,IAAsB,IAAI6/B,SAAJ,CAAc7/B,KAAd,EAAqBgvB,UAArB,EAAiC,IAAjC,CAAtB;OADK,MAGA;aACA0R,aAAL,CAAmB1gC,KAAnB,EAA0BgvB,UAA1B;;;;WAIG,KAAKmZ,OAAL,CAAanoC,KAAb,KAAuB,IAA9B;;;;;;;;;oBAOF4oC,uCAAe;QACT,KAAKP,SAAL,CAAe/7B,MAAf,CAAsB,MAAtB,CAAJ,EAAmC;aAC1B,IAAI06B,SAAJ,CAAc,IAAd,CAAP;;;WAGK,IAAIP,SAAJ,CAAc,IAAd,CAAP;;;;;;;;;;;;;;;;;;;;oBA8DFoC,qCAAaC,UAAU;QACjB,CAAC,KAAKT,SAAL,CAAe/7B,MAAf,CAAsB+B,IAAvB,IAA+B,CAAC,KAAKg6B,SAAL,CAAe/7B,MAAf,CAAsBlB,IAAtD,IAA8D,CAAC,KAAKi9B,SAAL,CAAe/7B,MAAf,CAAsBQ,IAAzF,EAA+F;YACvF,IAAI9Y,KAAJ,CAAU,iEAAV,CAAN;;;QAGE,OAAO80C,QAAP,KAAoB,QAAxB,EAAkC;iBACrB,KAAKC,eAAL,CAAqBD,QAArB,CAAX;;;QAGE,QAAOA,QAAP,yCAAOA,QAAP,OAAoB,QAAxB,EAAkC;YAC1B,IAAI90C,KAAJ,CAAU,wEAAV,CAAN;;;;QAIE4tC,SAAS,KAAKvzB,IAAL,CAAU2zB,IAAV,CAAe1lC,GAAf,CAAmB,UAAC0lC,IAAD,EAAOtuC,CAAP,EAAa;UACvCs1C,UAAUhH,KAAKgH,OAAL,CAAaC,IAAb,EAAd;UACID,WAAWF,QAAf,EAAyB;eAChB5yC,KAAKC,GAAL,CAAS6rC,KAAKE,QAAd,EAAwBhsC,KAAKqZ,GAAL,CAASyyB,KAAKG,QAAd,EAAwB2G,SAASE,OAAT,CAAxB,CAAxB,CAAP;OADF,MAEO;eACEhH,KAAKC,YAAZ;;KALS,CAAb;;QASI/pC,SAAS,IAAIrE,EAAEC,YAAN,CAAmB,KAAKoE,MAAL,CAAYjF,MAA/B,CAAb;WACOgH,GAAP,GAAa,KAAKguC,aAAlB;;QAEIz0C,OAAO,IAAIs0C,OAAJ,CAAY5vC,MAAZ,EAAoB0pC,MAApB,CAAX;SACKsG,OAAL,GAAe,KAAKA,OAApB;;WAEO10C,IAAP;;;;;;oBAIFO,2BAAQkV,MAAM;WACL,KAAK4/B,YAAL,CAAkB5/B,IAAlB,CAAP;;;;;wBAramB;UACfA,OAAO,KAAKA,IAAL,CAAU9Q,OAAV,CAAkBnF,cAA7B;UACI6xB,OAAO,aAAY5b,IAAZ,EAAkB,CAAlB,CAAX;aACOA,KAAK4b,IAAL,CAAP;;;;wBAqBa;aACN,KAAK4jB,OAAL,CAAa,UAAb,CAAP;;;;;;;;;;wBAOe;aACR,KAAKA,OAAL,CAAa,YAAb,CAAP;;;;;;;;;;wBAOkB;aACX,KAAKA,OAAL,CAAa,eAAb,CAAP;;;;;;;;;;wBAOc;aACP,KAAKA,OAAL,CAAa,WAAb,CAAP;;;;;;;;;;wBAOY;aACL,KAAKA,OAAL,CAAa,SAAb,CAAP;;;;;;;;;;wBAOW;aACJ,KAAK1xC,IAAL,CAAUigC,MAAjB;;;;;;;;;;wBAOY;aACL,KAAKjgC,IAAL,CAAUkgC,OAAjB;;;;;;;;;;wBAOY;aACL,KAAKlgC,IAAL,CAAUmyC,OAAjB;;;;;;;;;;wBAOsB;aACf,KAAKx8B,IAAL,CAAUy8B,iBAAjB;;;;;;;;;;wBAOuB;aAChB,KAAKz8B,IAAL,CAAU08B,kBAAjB;;;;;;;;;;wBAOgB;aACT,KAAK18B,IAAL,CAAU28B,WAAjB;;;;;;;;;;;wBAQc;UACVxS,MAAM,KAAK,MAAL,CAAV;aACOA,MAAMA,IAAIyS,SAAV,GAAsB,KAAKtS,MAAlC;;;;;;;;;;;wBAQY;UACRH,MAAM,KAAK,MAAL,CAAV;aACOA,MAAMA,IAAI0S,OAAV,GAAoB,CAA3B;;;;;;;;;;wBAOc;aACP,KAAKtyC,IAAL,CAAUC,SAAjB;;;;;;;;;;wBAOe;aACR,KAAKsV,IAAL,CAAUyI,UAAjB;;;;;;;;;;wBAQS;aACF,eAAc,IAAIa,IAAJ,CAAS,KAAKtJ,IAAL,CAAU+sB,IAAnB,EAAyB,KAAK/sB,IAAL,CAAUgtB,IAAnC,EAAyC,KAAKhtB,IAAL,CAAUitB,IAAnD,EAAyD,KAAKjtB,IAAL,CAAUktB,IAAnE,CAAd,CAAP;;;;wBAImB;aACZ,IAAIjqB,aAAJ,CAAkB,KAAKlD,IAAvB,CAAP;;;;;;;;;;wBAQiB;aACV,KAAKuT,cAAL,CAAoB9N,eAApB,EAAP;;;;wBA6EkB;aACX,IAAIuhB,YAAJ,CAAiB,IAAjB,CAAP;;;;wBAgCsB;aACf,KAAKoV,aAAL,CAAmBlpB,oBAAnB,EAAP;;;;wBA4DkB;UACdjhB,MAAM,EAAV;UACI,CAAC,KAAK6P,IAAV,EAAgB;eACP7P,GAAP;;;2BAGe,KAAK6P,IAAL,CAAU2zB,IAA3B,6GAAiC;;;;;;;;;;;;YAAxBA,IAAwB;;YAC3BA,KAAKgH,OAAL,CAAaC,IAAb,EAAJ,IAA2B;gBACnBjH,KAAK/4B,IAAL,CAAU/P,EADS;eAEpB8oC,KAAKE,QAFe;mBAGhBF,KAAKC,YAHW;eAIpBD,KAAKG;SAJZ;;;aAQK3jC,GAAP;;;;;;;;;;;;;wBAUoB;UAChBA,MAAM,EAAV;UACI,CAAC,KAAK6P,IAAV,EAAgB;eACP7P,GAAP;;;4BAGmB,KAAK6P,IAAL,CAAUm7B,QAA/B,oHAAyC;;;;;;;;;;;;YAAhCA,QAAgC;;YACnCV,WAAW,EAAf;aACK,IAAIp1C,IAAI,CAAb,EAAgBA,IAAI,KAAK2a,IAAL,CAAU2zB,IAAV,CAAeruC,MAAnC,EAA2CD,GAA3C,EAAgD;cAC1CsuC,OAAO,KAAK3zB,IAAL,CAAU2zB,IAAV,CAAetuC,CAAf,CAAX;mBACSsuC,KAAKgH,OAAL,CAAaC,IAAb,EAAT,IAAgCO,SAASC,KAAT,CAAe/1C,CAAf,CAAhC;;;YAGE81C,SAASvgC,IAAT,CAAc/P,EAAlB,IAAwB4vC,QAAxB;;;aAGKtqC,GAAP;;;;;2DApODvK,sJAKAA,8JASAA,6JA8EAA;;ACxUH,IAAIy1C,qBAAqB,IAAI71C,EAAEmB,MAAN,CAAa;OACtB,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADsB;UAEtB,IAAI9D,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB,MAAxB,EAAgC,EAACU,MAAM,QAAP,EAAhC,CAFsB;cAGtBjC,EAAEuB,MAHoB;UAItBvB,EAAEuB,MAJoB;gBAKtBvB,EAAEuB;CALO,CAAzB;;AAQA,IAAIu0C,gBAAgB,IAAI91C,EAAEmB,MAAN,CAAa;OACf,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADe;UAEf9D,EAAEuB,MAFa;UAGfvB,EAAEuB,MAHa;aAIfvB,EAAEoB,MAJa;YAKf,IAAIpB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CALe;iBAMfpB,EAAEuB,MANa;gBAOfvB,EAAEoB,MAPa;gBAQfpB,EAAEoB,MARa;cASfpB,EAAEuB,MATa;cAUfvB,EAAEuB,MAVa;kBAWfvB,EAAEuB,MAXa;cAYfvB,EAAEuB,MAZa;cAafvB,EAAEuB,MAba;UAcf,IAAIvB,EAAE6B,KAAN,CAAYg0C,kBAAZ,EAAgC,WAAhC;CAdE,CAApB;;AAiBAC,cAAc1xC,OAAd,GAAwB,YAAW;MAC7BqU,SAAS,EAAb;uBACkB,KAAKA,MAAvB,6GAA+B;;;;;;;;;;;;QAAtBqC,KAAsB;;WACtBA,MAAMpW,GAAb,IAAoBoW,KAApB;;;OAGGrC,MAAL,GAAcA,MAAd;CANF,CASA;;IC/BqBs9B;;;;;;;;;WACZh2C,uBAAMX,QAAQ;WACZA,OAAO80C,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,MAAmC,MAA1C;;;qBAGFK,+CAAmB;SACZC,SAAL,GAAiBsB,cAAc/vC,MAAd,CAAqB,KAAK1B,MAA1B,EAAkC,EAAEsN,cAAc,CAAhB,EAAlC,CAAjB;;;qBAGF8zB,2CAAgB/gC,KAAK;QACfoW,QAAQ,KAAK05B,SAAL,CAAe/7B,MAAf,CAAsB/T,GAAtB,CAAZ;QACIoW,KAAJ,EAAW;WACJzW,MAAL,CAAY+B,GAAZ,GAAkB0U,MAAMpU,MAAxB;;UAEIoU,MAAMk7B,UAAN,GAAmBl7B,MAAMhb,MAA7B,EAAqC;aAC9BuE,MAAL,CAAY+B,GAAZ,IAAmB,CAAnB,CADmC;YAE/B6vC,YAAY,IAAI9wC,MAAJ,CAAW2V,MAAMhb,MAAjB,CAAhB;YACIwc,MAAM45B,QAAQ,KAAK7xC,MAAL,CAAY+H,UAAZ,CAAuB0O,MAAMk7B,UAAN,GAAmB,CAA1C,CAAR,EAAsDC,SAAtD,CAAV;eACO,IAAIj2C,EAAEC,YAAN,CAAmBqc,GAAnB,CAAP;OAJF,MAKO;eACE,KAAKjY,MAAZ;;;;WAIG,IAAP;;;;EAxBkC4vC;;ACJtC;;;;IAGqBkC;;;;;;;;;uBACnBlQ,6BAAU;;WAED,KAAKpR,KAAL,CAAWuhB,kBAAX,CAA8B,KAAKt3B,EAAnC,CAAP;;;uBAGFojB,+BAAW;WACF,KAAKC,IAAL,CAAU7f,IAAjB;;;;EAPoCgjB;;ACHxC,IAAM+Q,UAAU;QAAA,kBACPhyC,MADO,EACC;QACTtD,SAAS,CAAb;QACImwC,WAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAf;SACK,IAAIjX,IAAI,CAAb,EAAgBA,IAAIiX,SAASpxC,MAA7B,EAAqCm6B,GAArC,EAA0C;UACpCp6B,IAAIqxC,SAASjX,CAAT,CAAR;UACIrX,OAAOve,OAAO6B,SAAP,EAAX;;;UAGInF,SAAS,UAAb,EAAyB;cACjB,IAAIZ,KAAJ,CAAU,UAAV,CAAN;;;eAGQY,UAAU,CAAX,GAAiB6hB,OAAO,IAAjC;UACI,CAACA,OAAO,IAAR,MAAkB,CAAtB,EAAyB;eAChB7hB,MAAP;;;;UAIE,IAAIZ,KAAJ,CAAU,qBAAV,CAAN;;CAnBJ;;AAuBA,IAAIm2C,YAAY,CACd,MADc,EACN,MADM,EACE,MADF,EACU,MADV,EACkB,MADlB,EAC0B,MAD1B,EACkC,MADlC,EAC0C,MAD1C,EACkD,MADlD,EAEd,MAFc,EAEN,MAFM,EAEE,MAFF,EAEU,MAFV,EAEkB,MAFlB,EAE0B,MAF1B,EAEkC,MAFlC,EAE0C,MAF1C,EAEkD,MAFlD,EAGd,MAHc,EAGN,MAHM,EAGE,MAHF,EAGU,MAHV,EAGkB,MAHlB,EAG0B,MAH1B,EAGkC,MAHlC,EAG0C,MAH1C,EAGkD,MAHlD,EAId,MAJc,EAIN,MAJM,EAIE,MAJF,EAIU,MAJV,EAIkB,MAJlB,EAI0B,MAJ1B,EAIkC,MAJlC,EAI0C,MAJ1C,EAIkD,MAJlD,EAKd,MALc,EAKN,MALM,EAKE,MALF,EAKU,MALV,EAKkB,MALlB,EAK0B,MAL1B,EAKkC,MALlC,EAK0C,MAL1C,EAKkD,MALlD,EAMd,MANc,EAMN,MANM,EAME,MANF,EAMU,MANV,EAMkB,MANlB,EAM0B,MAN1B,EAMkC,MANlC,EAM0C,MAN1C,EAMkD,MANlD,EAOd,MAPc,EAON,MAPM,EAOE,MAPF,EAOU,MAPV,EAOkB,MAPlB,EAO0B,MAP1B,EAOkC,MAPlC,EAO0C,MAP1C,EAOkD,MAPlD,CAAhB;;AAUA,IAAIC,sBAAsB,IAAIv2C,EAAEmB,MAAN,CAAa;SAC9BnB,EAAE0B,KAD4B;aAE1B,IAAI1B,EAAEw2C,QAAN,CAAe,IAAIx2C,EAAE8D,MAAN,CAAa,CAAb,CAAf,EAAgC;WAAK,CAACvB,EAAE8U,KAAF,GAAU,IAAX,MAAqB,IAA1B;GAAhC,CAF0B;OAGhC;WAAK9U,EAAEk0C,SAAF,IAAeH,UAAU/zC,EAAE8U,KAAF,GAAU,IAApB,CAApB;GAHgC;UAI7Bg/B,OAJ6B;oBAKnB;WAAM9zC,EAAE8U,KAAF,KAAY,CAAb,GAAkB,IAAvB;GALmB;eAMxB;WAAM9U,EAAEmC,GAAF,KAAU,MAAV,IAAoBnC,EAAEmC,GAAF,KAAU,MAA/B,GAAyCnC,EAAEm0C,gBAAF,KAAuB,CAAhE,GAAoEn0C,EAAEm0C,gBAAF,KAAuB,CAAhG;GANwB;mBAOpB,IAAI12C,EAAEw2C,QAAN,CAAeH,OAAf,EAAwB;WAAK9zC,EAAEo0C,WAAP;GAAxB;CAPO,CAA1B;;AAUA,IAAIC,iBAAiB,IAAI52C,EAAEmB,MAAN,CAAa;OAC3B,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CAD2B;UAExB9D,EAAEuB,MAFsB;UAGxBvB,EAAEuB,MAHsB;aAIrBvB,EAAEoB,MAJmB;YAKtB,IAAIpB,EAAE0C,QAAN,CAAe1C,EAAEoB,MAAjB,CALsB;iBAMjBpB,EAAEuB,MANe;uBAOXvB,EAAEuB,MAPS;gBAQlBvB,EAAEoB,MARgB;gBASlBpB,EAAEoB,MATgB;cAUpBpB,EAAEuB,MAVkB;cAWpBvB,EAAEuB,MAXkB;kBAYhBvB,EAAEuB,MAZc;cAapBvB,EAAEuB,MAbkB;cAcpBvB,EAAEuB,MAdkB;UAexB,IAAIvB,EAAE6B,KAAN,CAAY00C,mBAAZ,EAAiC,WAAjC;CAfW,CAArB;;AAkBAK,eAAexyC,OAAf,GAAyB,YAAW;MAC9BqU,SAAS,EAAb;OACK,IAAI5Y,IAAI,CAAb,EAAgBA,IAAI,KAAK4Y,MAAL,CAAY3Y,MAAhC,EAAwCD,GAAxC,EAA6C;QACvCib,QAAQ,KAAKrC,MAAL,CAAY5Y,CAAZ,CAAZ;WACOib,MAAMpW,GAAb,IAAoBoW,KAApB;;;SAGK,KAAKrC,MAAL,GAAcA,MAArB;CAPF,CAUA;;AClEA;;;;;IAIqBo+B;;;;;;;;;YACZ92C,uBAAMX,QAAQ;WACZA,OAAO80C,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,MAAmC,MAA1C;;;sBAGFK,+CAAmB;SACZC,SAAL,GAAiBoC,eAAe7wC,MAAf,CAAsB,KAAK1B,MAA3B,CAAjB;SACKyyC,QAAL,GAAgB,KAAKzyC,MAAL,CAAY+B,GAA5B;;;sBAGF2wC,qCAAc;;QAER,CAAC,KAAKC,aAAV,EAAyB;WAClB3yC,MAAL,CAAY+B,GAAZ,GAAkB,KAAK0wC,QAAvB;UACI13C,SAAS,KAAKiF,MAAL,CAAY+H,UAAZ,CAAuB,KAAKooC,SAAL,CAAeyC,mBAAtC,CAAb;;UAEIC,mBAAmB,CAAvB;WACK,IAAIxyC,GAAT,IAAgB,KAAK8vC,SAAL,CAAe/7B,MAA/B,EAAuC;YACjCrC,QAAQ,KAAKo+B,SAAL,CAAe/7B,MAAf,CAAsB/T,GAAtB,CAAZ;cACMgC,MAAN,GAAewwC,gBAAf;4BACqB9gC,MAAM+gC,eAAN,IAAyB,IAA1B,GAAkC/gC,MAAM+gC,eAAxC,GAA0D/gC,MAAMtW,MAApF;;;UAGEs3C,eAAeC,OAAOj4C,MAAP,EAAe83C,gBAAf,CAAnB;UACI,CAACE,YAAL,EAAmB;cACX,IAAIj3C,KAAJ,CAAU,yCAAV,CAAN;;;WAGGkE,MAAL,GAAc,IAAIrE,EAAEC,YAAN,CAAmB,IAAIkF,MAAJ,CAAWiyC,YAAX,CAAnB,CAAd;WACKJ,aAAL,GAAqB,IAArB;;;;sBAIJtC,qCAAa55B,OAAO;SACbi8B,WAAL;WACO,mBAAMrC,YAAN,YAAmB55B,KAAnB,CAAP;;;;;;;sBAKF+xB,uCAAc1gC,OAAwB;QAAjBgvB,UAAiB,uEAAJ,EAAI;;QAChC,CAAC,KAAKmZ,OAAL,CAAanoC,KAAb,CAAL,EAA0B;UACpB,KAAKqoC,SAAL,CAAe/7B,MAAf,CAAsBQ,IAAtB,IAA8B,KAAKu7B,SAAL,CAAe/7B,MAAf,CAAsBQ,IAAtB,CAA2B09B,WAA7D,EAA0E;YACpE,CAAC,KAAKP,kBAAV,EAA8B;eAAOkB,mBAAL;;eACzB,KAAKhD,OAAL,CAAanoC,KAAb,IAAsB,IAAIgqC,UAAJ,CAAehqC,KAAf,EAAsBgvB,UAAtB,EAAkC,IAAlC,CAA7B;OAFF,MAIO;eACE,mBAAM0R,aAAN,YAAoB1gC,KAApB,EAA2BgvB,UAA3B,CAAP;;;;;sBAKNmc,qDAAsB;SACfP,WAAL;SACK1yC,MAAL,CAAY+B,GAAZ,GAAkB,KAAKouC,SAAL,CAAe/7B,MAAf,CAAsBQ,IAAtB,CAA2BvS,MAA7C;QACIoU,QAAQy8B,UAAUxxC,MAAV,CAAiB,KAAK1B,MAAtB,CAAZ;QACImI,SAAS,EAAb;;SAEK,IAAIrC,QAAQ,CAAjB,EAAoBA,QAAQ2Q,MAAMzX,SAAlC,EAA6C8G,OAA7C,EAAsD;UAChDgC,QAAQ,EAAZ;UACIqrC,YAAY18B,MAAM08B,SAAN,CAAgBnwC,WAAhB,EAAhB;YACM++B,gBAAN,GAAyBoR,SAAzB;;UAEIA,YAAY,CAAhB,EAAmB;;YACb9H,UAAU,EAAd;YACI+H,cAAc,CAAlB;;aAEK,IAAI53C,IAAI,CAAb,EAAgBA,IAAI23C,SAApB,EAA+B33C,GAA/B,EAAoC;cAC9BG,KAAI03C,cAAc58B,MAAM40B,OAApB,CAAR;kBACQ1wC,IAAR,CAAagB,EAAb;yBACeA,EAAf;;;cAGIumC,MAAN,GAAeoR,cAAc78B,MAAMzD,KAApB,EAA2ByD,MAAMtO,MAAjC,EAAyCirC,WAAzC,CAAf;aACK,IAAI53C,KAAI,CAAb,EAAgBA,KAAI23C,SAApB,EAA+B33C,IAA/B,EAAoC;gBAC5B0mC,MAAN,CAAamJ,QAAQ7vC,EAAR,IAAa,CAA1B,EAA6BilC,UAA7B,GAA0C,IAA1C;;;YAGE8S,kBAAkBF,cAAc58B,MAAMtO,MAApB,CAAtB;OAfF,MAiBO,IAAIgrC,YAAY,CAAhB,EAAmB;;YACpBtQ,mBAAmB5B,SAAShQ,SAAT,CAAmBgR,gBAAnB,CAAoC5lC,IAApC,CAAyC,EAAEm0B,OAAO,IAAT,EAAzC,EAA0D1oB,KAA1D,EAAiE2O,MAAM+8B,UAAvE,CAAvB;YACI3Q,gBAAJ,EAAsB;cAChB0Q,kBAAkBF,cAAc58B,MAAMtO,MAApB,CAAtB;;;;aAIGxN,IAAP,CAAYmN,KAAZ;;;SAGGiqC,kBAAL,GAA0B5pC,MAA1B;;;;EA1FmCynC;;AA8FvC,IACM6D;qBACQh4C,MAAZ,EAAoB;;;SACbA,MAAL,GAAcA,MAAd;SACKi4C,IAAL,GAAY,IAAI/3C,EAAEmF,MAAN,CAAarF,MAAb,CAAZ;;;sBAGFiG,yBAAO1B,QAAQpB,QAAQ;WACd,IAAIjD,EAAEC,YAAN,CAAmB,KAAK83C,IAAL,CAAUhyC,MAAV,CAAiB1B,MAAjB,EAAyBpB,MAAzB,CAAnB,CAAP;;;;;;;;;AAKJ,IAAIs0C,YAAY,IAAIv3C,EAAEmB,MAAN,CAAa;WAClBnB,EAAEuB,MADgB;aAEhBvB,EAAEoB,MAFc;eAGdpB,EAAEoB,MAHY;sBAIPpB,EAAEuB,MAJK;qBAKRvB,EAAEuB,MALM;kBAMXvB,EAAEuB,MANS;mBAOVvB,EAAEuB,MAPQ;uBAQNvB,EAAEuB,MARI;kBASXvB,EAAEuB,MATS;yBAUJvB,EAAEuB,MAVE;aAWhB,IAAIu2C,SAAJ,CAAc,oBAAd,CAXgB;WAYlB,IAAIA,SAAJ,CAAc,mBAAd,CAZkB;SAapB,IAAIA,SAAJ,CAAc,gBAAd,CAboB;UAcnB,IAAIA,SAAJ,CAAc,iBAAd,CAdmB;cAef,IAAIA,SAAJ,CAAc,qBAAd,CAfe;UAgBnB,IAAIA,SAAJ,CAAc,gBAAd,CAhBmB;gBAiBb,IAAIA,SAAJ,CAAc,uBAAd;CAjBA,CAAhB;;AAoBA,IAAME,YAAY,GAAlB;AACA,IAAMC,sBAAsB,GAA5B;AACA,IAAMC,sBAAsB,GAA5B;AACA,IAAMC,gBAAgB,GAAtB;;AAEA,SAAST,aAAT,CAAuBrzC,MAAvB,EAA+B;MACzBue,OAAOve,OAAO6B,SAAP,EAAX;;MAEI0c,SAASo1B,SAAb,EAAwB;WACf3zC,OAAO2B,YAAP,EAAP;;;MAGE4c,SAASs1B,mBAAb,EAAkC;WACzB7zC,OAAO6B,SAAP,KAAqBiyC,aAA5B;;;MAGEv1B,SAASq1B,mBAAb,EAAkC;WACzB5zC,OAAO6B,SAAP,KAAqBiyC,gBAAgB,CAA5C;;;SAGKv1B,IAAP;;;AAGF,SAASw1B,QAAT,CAAkBzR,IAAlB,EAAwB0R,OAAxB,EAAiC;SACxB1R,OAAO,CAAP,GAAW0R,OAAX,GAAqB,CAACA,OAA7B;;;AAGF,SAASV,aAAT,CAAuBtgC,KAAvB,EAA8B7K,MAA9B,EAAsCkjC,OAAtC,EAA+C;MACzCttB,UAAJ;MACIzE,IAAIyE,IAAI,CAAZ;MACIzX,MAAM,EAAV;;OAEK,IAAI9K,IAAI,CAAb,EAAgBA,IAAI6vC,OAApB,EAA6B7vC,GAA7B,EAAkC;QAC5BmlC,KAAK,CAAT;QAAYC,KAAK,CAAjB;QACI0B,OAAOtvB,MAAMnR,SAAN,EAAX;QACI2+B,UAAU,EAAE8B,QAAQ,CAAV,CAAd;YACQ,IAAR;;QAEIA,OAAO,EAAX,EAAe;WACR,CAAL;WACKyR,SAASzR,IAAT,EAAe,CAAC,CAACA,OAAO,EAAR,KAAe,CAAhB,IAAqBn6B,OAAOtG,SAAP,EAApC,CAAL;KAFF,MAIO,IAAIygC,OAAO,EAAX,EAAe;WACfyR,SAASzR,IAAT,EAAe,CAAC,CAAEA,OAAO,EAAR,GAAc,EAAf,KAAsB,CAAvB,IAA4Bn6B,OAAOtG,SAAP,EAA3C,CAAL;WACK,CAAL;KAFK,MAIA,IAAIygC,OAAO,EAAX,EAAe;UAChB2R,KAAK3R,OAAO,EAAhB;UACIqE,KAAKx+B,OAAOtG,SAAP,EAAT;WACKkyC,SAASzR,IAAT,EAAe,KAAK2R,KAAK,IAAV,KAAmBtN,MAAM,CAAzB,CAAf,CAAL;WACKoN,SAASzR,QAAQ,CAAjB,EAAoB,KAAK,CAAC2R,KAAK,IAAN,KAAe,CAApB,KAA0BtN,KAAK,IAA/B,CAApB,CAAL;KAJK,MAMA,IAAIrE,OAAO,GAAX,EAAgB;UACjB2R,KAAK3R,OAAO,EAAhB;WACKyR,SAASzR,IAAT,EAAe,KAAM2R,KAAK,EAAN,IAAa,CAAlB,IAAuB9rC,OAAOtG,SAAP,EAAtC,CAAL;WACKkyC,SAASzR,QAAQ,CAAjB,EAAoB,KAAO2R,KAAK,EAAN,IAAa,CAAd,IAAoB,CAAzB,IAA8B9rC,OAAOtG,SAAP,EAAlD,CAAL;KAHK,MAKA,IAAIygC,OAAO,GAAX,EAAgB;UACjBqE,KAAKx+B,OAAOtG,SAAP,EAAT;UACIqyC,KAAK/rC,OAAOtG,SAAP,EAAT;WACKkyC,SAASzR,IAAT,EAAe,CAACqE,MAAM,CAAP,KAAauN,MAAM,CAAnB,CAAf,CAAL;WACKH,SAASzR,QAAQ,CAAjB,EAAoB,CAAC,CAAC4R,KAAK,IAAN,KAAe,CAAhB,IAAqB/rC,OAAOtG,SAAP,EAAzC,CAAL;KAJK,MAMA;WACAkyC,SAASzR,IAAT,EAAen6B,OAAOxG,YAAP,EAAf,CAAL;WACKoyC,SAASzR,QAAQ,CAAjB,EAAoBn6B,OAAOxG,YAAP,EAApB,CAAL;;;SAGGg/B,EAAL;SACKC,EAAL;QACIjmC,IAAJ,CAAS,IAAI4lC,KAAJ,CAAUC,OAAV,EAAmB,KAAnB,EAA0BlnB,CAA1B,EAA6ByE,CAA7B,CAAT;;;SAGKzX,GAAP;;;AC9MF,IAAI6tC,YAAY,IAAIx4C,EAAEmC,eAAN,CAAsBnC,EAAEuB,MAAxB,EAAgC;cAClC;cACEvB,EAAEuB,MADJ;aAEE,IAAIvB,EAAE6B,KAAN,CAAY7B,EAAEuB,MAAd,EAAsB,UAAtB;GAHgC;cAKlC;cACEvB,EAAEuB,MADJ;aAEE,IAAIvB,EAAE6B,KAAN,CAAY7B,EAAEuB,MAAd,EAAsB,UAAtB,CAFF;aAGEvB,EAAEuB,MAHJ;gBAIEvB,EAAEuB,MAJJ;gBAKEvB,EAAEuB;;CAVF,CAAhB;;IAcqBk3C;qBACZ14C,uBAAMX,QAAQ;WACZA,OAAO80C,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,MAAmC,MAA1C;;;8BAGU7vC,MAAZ,EAAoB;;;SACbA,MAAL,GAAcA,MAAd;QACIA,OAAOq0C,UAAP,CAAkB,CAAlB,MAAyB,MAA7B,EAAqC;YAC7B,IAAIv4C,KAAJ,CAAU,2BAAV,CAAN;;;SAGG6zC,MAAL,GAAcwE,UAAUzyC,MAAV,CAAiB1B,MAAjB,CAAd;;;+BAGFnE,2BAAQkV,MAAM;yBACO,KAAK4+B,MAAL,CAAYnuC,OAA/B,6GAAwC;;;;;;;;;;;;UAA/Ba,MAA+B;;UAClCrC,SAAS,IAAIrE,EAAEC,YAAN,CAAmB,KAAKoE,MAAL,CAAYjF,MAA/B,CAAb;aACOgH,GAAP,GAAaM,MAAb;UACI/G,OAAO,IAAIs0C,OAAJ,CAAY5vC,MAAZ,CAAX;UACI1E,KAAKR,cAAL,KAAwBiW,IAA5B,EAAkC;eACzBzV,IAAP;;;;WAIG,IAAP;;;;;wBAGU;UACNg5C,QAAQ,EAAZ;4BACmB,KAAK3E,MAAL,CAAYnuC,OAA/B,oHAAwC;;;;;;;;;;;;YAA/Ba,MAA+B;;YAClCrC,SAAS,IAAIrE,EAAEC,YAAN,CAAmB,KAAKoE,MAAL,CAAYjF,MAA/B,CAAb;eACOgH,GAAP,GAAaM,MAAb;cACM1H,IAAN,CAAW,IAAIi1C,OAAJ,CAAY5vC,MAAZ,CAAX;;;aAGKs0C,KAAP;;;;;;;ACnDJ,IAAIC,YAAY,IAAI54C,EAAE8D,MAAN,CAAa9D,EAAE0B,KAAf,CAAhB;AACA,IAAIm3C,YAAY,IAAI74C,EAAEmB,MAAN,CAAa;OACtBnB,EAAEuB,MADoB;OAEtB,IAAIvB,EAAEmF,MAAN,CAAa,KAAb;CAFS,CAAhB;;AAKA,IAAI2zC,MAAM,IAAI94C,EAAEmB,MAAN,CAAa;MACjBnB,EAAEoB,MADe;cAETpB,EAAEqB,KAFO;QAGfrB,EAAE0B,KAHa;cAIT1B,EAAEyB,MAJO;UAKbzB,EAAEuB;CALF,CAAV;;AAQA,IAAIw3C,OAAO,IAAI/4C,EAAEmB,MAAN,CAAa;QAChB,IAAInB,EAAE8D,MAAN,CAAa,CAAb,CADgB;gBAER9D,EAAEoB,MAFM;WAGb,IAAIpB,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB,IAAIpB,EAAE6B,KAAN,CAAYi3C,GAAZ,EAAiB;WAAKv2C,EAAEy2C,YAAF,GAAiB,CAAtB;GAAjB,CAAxB,EAAmE,EAAE/2C,MAAM,QAAR,EAAnE;CAHA,CAAX;;AAMA,IAAIg3C,WAAW,IAAIj5C,EAAEmB,MAAN,CAAa;UAClBnB,EAAEoB,MADgB;SAEnB,IAAIpB,EAAE6B,KAAN,CAAYk3C,IAAZ,EAAkB;WAAKx2C,EAAEzC,MAAF,GAAW,CAAhB;GAAlB;CAFM,CAAf;;AAKA,IAAIo5C,WAAW,IAAIl5C,EAAEmB,MAAN,CAAa;YAChB,IAAInB,EAAE0C,QAAN,CAAe1C,EAAE0B,KAAjB,EAAwB,EAAxB,CADgB;YAEhB,IAAI1B,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB63C,QAAxB,CAFgB;kBAGV,IAAIj5C,EAAEgC,OAAN,CAAchC,EAAEoB,MAAhB,EAAwB,MAAxB;CAHH,CAAf;;AAMA,IAAI+3C,cAAc,IAAIn5C,EAAEmB,MAAN,CAAa;cACjBnB,EAAEuB,MADe;OAExB,IAAIvB,EAAEgC,OAAN,CAAchC,EAAEuB,MAAhB,EAAwB23C,QAAxB,CAFwB;cAGjBl5C,EAAEuB,MAHe;aAIlBvB,EAAEuB;CAJG,CAAlB;;IAOqB63C;QACZr5C,uBAAMX,QAAQ;QACfiF,SAAS,IAAIrE,EAAEC,YAAN,CAAmBb,MAAnB,CAAb;;QAEI;UACE40C,SAASmF,YAAYpzC,MAAZ,CAAmB1B,MAAnB,CAAb;KADF,CAEE,OAAOzE,CAAP,EAAU;aACH,KAAP;;;yBAGeo0C,OAAOvrC,GAAP,CAAW4wC,QAAX,CAAoB/nC,KAArC,6GAA4C;;;;;;;;;;;;UAAnCrP,IAAmC;;UACtCA,KAAKmT,IAAL,KAAc,MAAlB,EAA0B;eACjB,IAAP;;;;WAIG,KAAP;;;iBAGU/Q,MAAZ,EAAoB;;;SACbA,MAAL,GAAcA,MAAd;SACK2vC,MAAL,GAAcmF,YAAYpzC,MAAZ,CAAmB,KAAK1B,MAAxB,CAAd;;0BAEiB,KAAK2vC,MAAL,CAAYvrC,GAAZ,CAAgB4wC,QAAhB,CAAyB/nC,KAA1C,oHAAiD;;;;;;;;;;;;UAAxCrP,IAAwC;;4BAC/BA,KAAKq3C,OAArB,oHAA8B;;;;;;;;;;;;YAArB9H,GAAqB;;YACxBA,IAAI+H,UAAJ,IAAkB,CAAtB,EAAyB;eAClBl1C,MAAL,CAAY+B,GAAZ,GAAkBorC,IAAI+H,UAAJ,GAAiB,KAAKvF,MAAL,CAAYvrC,GAAZ,CAAgB+wC,cAAnD;cACIpkC,IAAJ,GAAWwjC,UAAU7yC,MAAV,CAAiB,KAAK1B,MAAtB,CAAX;SAFF,MAGO;cACD+Q,IAAJ,GAAW,IAAX;;;;UAIAnT,KAAKmT,IAAL,KAAc,MAAlB,EAA0B;aACnBqkC,IAAL,GAAYx3C,IAAZ;;;;;kBAKN/B,2BAAQkV,MAAM;QACR,CAAC,KAAKqkC,IAAV,EAAgB;aACP,IAAP;;;0BAGc,KAAKA,IAAL,CAAUH,OAA1B,oHAAmC;;;;;;;;;;;;UAA1B9H,GAA0B;;UAC7BprC,MAAM,KAAK4tC,MAAL,CAAY0F,UAAZ,GAAyBlI,IAAIkI,UAA7B,GAA0C,CAApD;UACIr1C,SAAS,IAAIrE,EAAEC,YAAN,CAAmB,KAAKoE,MAAL,CAAYjF,MAAZ,CAAmBqkB,KAAnB,CAAyBrd,GAAzB,CAAnB,CAAb;UACIzG,OAAO,IAAIs0C,OAAJ,CAAY5vC,MAAZ,CAAX;UACI1E,KAAKR,cAAL,KAAwBiW,IAA5B,EAAkC;eACzBzV,IAAP;;;;WAIG,IAAP;;;;;wBAGU;UACNg5C,QAAQ,EAAZ;4BACgB,KAAKc,IAAL,CAAUH,OAA1B,oHAAmC;;;;;;;;;;;;YAA1B9H,GAA0B;;YAC7BprC,MAAM,KAAK4tC,MAAL,CAAY0F,UAAZ,GAAyBlI,IAAIkI,UAA7B,GAA0C,CAApD;YACIr1C,SAAS,IAAIrE,EAAEC,YAAN,CAAmB,KAAKoE,MAAL,CAAYjF,MAAZ,CAAmBqkB,KAAnB,CAAyBrd,GAAzB,CAAnB,CAAb;cACMpH,IAAN,CAAW,IAAIi1C,OAAJ,CAAY5vC,MAAZ,CAAX;;;aAGKs0C,KAAP;;;;;;;AClGJ;AACAh6C,QAAQG,cAAR,CAAuBm1C,OAAvB;AACAt1C,QAAQG,cAAR,CAAuBi3C,QAAvB;AACAp3C,QAAQG,cAAR,CAAuB+3C,SAAvB;AACAl4C,QAAQG,cAAR,CAAuB25C,kBAAvB;AACA95C,QAAQG,cAAR,CAAuBs6C,KAAvB,EAEA;;"}